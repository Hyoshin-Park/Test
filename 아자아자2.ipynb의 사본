{"cells":[{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hFuMcziChwr5","outputId":"c914ebea-dad6-4bdb-c7c4-dcbc40a79942"},"outputs":[{"name":"stdout","output_type":"stream","text":["Selecting previously unselected package fonts-nanum.\n","(Reading database ... 155639 files and directories currently installed.)\n","Preparing to unpack .../fonts-nanum_20170925-1_all.deb ...\n","Unpacking fonts-nanum (20170925-1) ...\n","Selecting previously unselected package fonts-nanum-eco.\n","Preparing to unpack .../fonts-nanum-eco_1.000-6_all.deb ...\n","Unpacking fonts-nanum-eco (1.000-6) ...\n","Selecting previously unselected package fonts-nanum-extra.\n","Preparing to unpack .../fonts-nanum-extra_20170925-1_all.deb ...\n","Unpacking fonts-nanum-extra (20170925-1) ...\n","Selecting previously unselected package fonts-nanum-coding.\n","Preparing to unpack .../fonts-nanum-coding_2.5-1_all.deb ...\n","Unpacking fonts-nanum-coding (2.5-1) ...\n","Setting up fonts-nanum-extra (20170925-1) ...\n","Setting up fonts-nanum (20170925-1) ...\n","Setting up fonts-nanum-coding (2.5-1) ...\n","Setting up fonts-nanum-eco (1.000-6) ...\n","Processing triggers for fontconfig (2.12.6-0ubuntu2) ...\n","NanumBarunGothic\n"]}],"source":["# 한글폰트 사용 in colab\n","%matplotlib inline  \n","\n","import matplotlib as mpl \n","import matplotlib.pyplot as plt \n","import matplotlib.font_manager as fm  \n","\n","!apt-get update -qq\n","!apt-get install fonts-nanum* -qq\n","\n","path = '/usr/share/fonts/truetype/nanum/NanumBarunGothic.ttf' \n","font_name = fm.FontProperties(fname=path, size=10).get_name()\n","print(font_name)\n","plt.rc('font', family=font_name)\n","\n","fm._rebuild()\n","mpl.rcParams['axes.unicode_minus'] = False\n","\n","fm._rebuild()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KxAh1plCWw_1","outputId":"bb3f484d-0933-42a5-c122-7c47c06273d4"},"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Collecting konlpy\n","  Downloading konlpy-0.6.0-py2.py3-none-any.whl (19.4 MB)\n","\u001b[K     |████████████████████████████████| 19.4 MB 1.2 MB/s \n","\u001b[?25hRequirement already satisfied: lxml>=4.1.0 in /usr/local/lib/python3.7/dist-packages (from konlpy) (4.2.6)\n","Collecting JPype1>=0.7.0\n","  Downloading JPype1-1.4.0-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.whl (453 kB)\n","\u001b[K     |████████████████████████████████| 453 kB 51.4 MB/s \n","\u001b[?25hRequirement already satisfied: numpy>=1.6 in /usr/local/lib/python3.7/dist-packages (from konlpy) (1.21.6)\n","Requirement already satisfied: typing-extensions in /usr/local/lib/python3.7/dist-packages (from JPype1>=0.7.0->konlpy) (4.1.1)\n","Installing collected packages: JPype1, konlpy\n","Successfully installed JPype1-1.4.0 konlpy-0.6.0\n"]}],"source":["pip install konlpy"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"vvsWscYUgims"},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import re\n","import urllib.request\n","from konlpy.tag import Okt\n","from tqdm import tqdm\n","from tensorflow.keras.preprocessing.text import Tokenizer\n","from tensorflow.keras.preprocessing.sequence import pad_sequences"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"SrDxaB2TWs2V"},"outputs":[],"source":["train_data = pd.read_excel('/content/감성대화말뭉치(최종데이터)_Training.xlsx')\n","test_data = pd.read_excel('/content/감성대화말뭉치(최종데이터)_Validation.xlsx')"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6FiRLgx1XUpk","outputId":"dd19a34e-3e6f-4c93-b262-63f1b800e69a"},"outputs":[{"name":"stdout","output_type":"stream","text":["훈련용 리뷰 개수 : 40879\n"]}],"source":["print('훈련용 리뷰 개수 :',len(train_data)) # 훈련용 리뷰 개수 출력"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":858},"id":"kz2iw8vLXaNW","outputId":"4b48f598-62e7-4bd9-cedd-6615187eaaf2"},"outputs":[{"data":{"text/html":["\n","  <div id=\"df-6830c29d-e8db-4516-afd7-876eccdb3fcf\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>번호</th>\n","      <th>연령</th>\n","      <th>성별</th>\n","      <th>상황키워드</th>\n","      <th>신체질환</th>\n","      <th>감정_대분류</th>\n","      <th>감정_소분류</th>\n","      <th>사람문장1</th>\n","      <th>시스템응답1</th>\n","      <th>사람문장2</th>\n","      <th>시스템응답2</th>\n","      <th>사람문장3</th>\n","      <th>시스템응답3</th>\n","      <th>사람문장4</th>\n","      <th>시스템응답4</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>44164</td>\n","      <td>청년</td>\n","      <td>남성</td>\n","      <td>연애, 결혼, 출산</td>\n","      <td>해당없음</td>\n","      <td>기쁨</td>\n","      <td>신이 난</td>\n","      <td>아내가 드디어 출산하게 되어서 정말 신이 나.</td>\n","      <td>아내분이 출산을 하시는군요. 정말 축하드려요.</td>\n","      <td>아 지금 정말 신이 나.</td>\n","      <td>잘 된 일이네요.</td>\n","      <td>아기가 점점 클게 벌써 기대가 되네. 내가 많이 놀아줘야지.</td>\n","      <td>좋은 아빠가 되실 거 같아요. 진심으로 축하드려요.</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>3926</td>\n","      <td>노년</td>\n","      <td>남성</td>\n","      <td>건강, 죽음</td>\n","      <td>만성질환 유</td>\n","      <td>불안</td>\n","      <td>스트레스 받는</td>\n","      <td>당뇨랑 합병증 때문에 먹어야 할 약이 열 가지가 넘어가니까 스트레스야.</td>\n","      <td>약 종류가 많아 번거로우시겠어요.</td>\n","      <td>건강할 때 관리 좀 잘할걸 하는 생각이 들더라고.</td>\n","      <td>현재 상황에서 변화를 주기 위해 어떻게 하면 될까요?</td>\n","      <td>약을 잘 챙겨 먹고 나을 수 있도록 노력해야지.</td>\n","      <td>약을 잘 챙겨 먹어 건강해지시길 바랄게요.</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>50882</td>\n","      <td>청소년</td>\n","      <td>여성</td>\n","      <td>학업 및 진로</td>\n","      <td>해당없음</td>\n","      <td>당황</td>\n","      <td>당황</td>\n","      <td>고등학교에 올라오니 중학교 때보다 수업이 갑자기 어려워져서 당황스러워.</td>\n","      <td>고등학교 수업이 중학교 때와는 다르게 갑자기 어려워서 당황스러우시군요.</td>\n","      <td>아직 학기 초인데 내가 수업에 잘 따라갈 수 있을지 걱정돼.</td>\n","      <td>이 상황에서 할 수 있는 게 어떤 것이 있을까요?</td>\n","      <td>중학교 수업을 들을 때보다 훨씬 더 열심히 할 거야.</td>\n","      <td>수업을 어떤 방식으로 열심히 듣는게 좋을까요?</td>\n","      <td>선생님이 강조하신 부분을 필기하고 집에서 매일 수업 내용을 복습하려고 해.</td>\n","      <td>열심히 해서 좋은 결과가 있었으면 좋겠어요.</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>31303</td>\n","      <td>노년</td>\n","      <td>남성</td>\n","      <td>재정</td>\n","      <td>만성질환 무</td>\n","      <td>기쁨</td>\n","      <td>신이 난</td>\n","      <td>재취업이 돼서 받게 된 첫 월급으로 온 가족이 외식을 할 예정이야. 너무 행복해.</td>\n","      <td>재취업 후 첫 월급이라 정말 기쁘시겠어요.</td>\n","      <td>퇴직 후 다시는 돈을 못 벌 줄 알았는데 이렇게 월급으로 가족에게 맛있는 밥을 살 ...</td>\n","      <td>이 기분을 유지하려면 어떻게 해야 할까요?</td>\n","      <td>회사생활을 열심히 해서 계속 월급을 받을거야!</td>\n","      <td>계속 원하시는 대로 회사생활이 이어지길 바랄게요.</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>47200</td>\n","      <td>노년</td>\n","      <td>여성</td>\n","      <td>재정</td>\n","      <td>만성질환 유</td>\n","      <td>기쁨</td>\n","      <td>안도</td>\n","      <td>빚을 드디어 다 갚게 되어서 이제야 안도감이 들어.</td>\n","      <td>기분 좋으시겠어요. 앞으로는 어떻게 하실 생각이신가요?</td>\n","      <td>빚도 다 갚았으니 당분간은 아무 생각도 안 하며 살고 싶어.</td>\n","      <td>빚도 다 갚았으니 당분간은 아무 생각도 안 하며 살고 싶으시군요.</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6830c29d-e8db-4516-afd7-876eccdb3fcf')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-6830c29d-e8db-4516-afd7-876eccdb3fcf button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-6830c29d-e8db-4516-afd7-876eccdb3fcf');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["      번호   연령  성별       상황키워드    신체질환 감정_대분류   감정_소분류  \\\n","0  44164   청년  남성  연애, 결혼, 출산    해당없음     기쁨     신이 난   \n","1   3926   노년  남성      건강, 죽음  만성질환 유     불안  스트레스 받는   \n","2  50882  청소년  여성     학업 및 진로    해당없음     당황       당황   \n","3  31303   노년  남성          재정  만성질환 무     기쁨     신이 난   \n","4  47200   노년  여성          재정  만성질환 유     기쁨       안도   \n","\n","                                           사람문장1  \\\n","0                      아내가 드디어 출산하게 되어서 정말 신이 나.   \n","1        당뇨랑 합병증 때문에 먹어야 할 약이 열 가지가 넘어가니까 스트레스야.   \n","2        고등학교에 올라오니 중학교 때보다 수업이 갑자기 어려워져서 당황스러워.   \n","3  재취업이 돼서 받게 된 첫 월급으로 온 가족이 외식을 할 예정이야. 너무 행복해.   \n","4                   빚을 드디어 다 갚게 되어서 이제야 안도감이 들어.   \n","\n","                                    시스템응답1  \\\n","0                아내분이 출산을 하시는군요. 정말 축하드려요.   \n","1                       약 종류가 많아 번거로우시겠어요.   \n","2  고등학교 수업이 중학교 때와는 다르게 갑자기 어려워서 당황스러우시군요.   \n","3                  재취업 후 첫 월급이라 정말 기쁘시겠어요.   \n","4           기분 좋으시겠어요. 앞으로는 어떻게 하실 생각이신가요?   \n","\n","                                               사람문장2  \\\n","0                                      아 지금 정말 신이 나.   \n","1                        건강할 때 관리 좀 잘할걸 하는 생각이 들더라고.   \n","2                  아직 학기 초인데 내가 수업에 잘 따라갈 수 있을지 걱정돼.   \n","3  퇴직 후 다시는 돈을 못 벌 줄 알았는데 이렇게 월급으로 가족에게 맛있는 밥을 살 ...   \n","4                  빚도 다 갚았으니 당분간은 아무 생각도 안 하며 살고 싶어.   \n","\n","                                 시스템응답2                               사람문장3  \\\n","0                             잘 된 일이네요.  아기가 점점 클게 벌써 기대가 되네. 내가 많이 놀아줘야지.    \n","1         현재 상황에서 변화를 주기 위해 어떻게 하면 될까요?          약을 잘 챙겨 먹고 나을 수 있도록 노력해야지.   \n","2           이 상황에서 할 수 있는 게 어떤 것이 있을까요?       중학교 수업을 들을 때보다 훨씬 더 열심히 할 거야.   \n","3               이 기분을 유지하려면 어떻게 해야 할까요?           회사생활을 열심히 해서 계속 월급을 받을거야!   \n","4  빚도 다 갚았으니 당분간은 아무 생각도 안 하며 살고 싶으시군요.                                 NaN   \n","\n","                         시스템응답3                                      사람문장4  \\\n","0  좋은 아빠가 되실 거 같아요. 진심으로 축하드려요.                                        NaN   \n","1       약을 잘 챙겨 먹어 건강해지시길 바랄게요.                                        NaN   \n","2    수업을 어떤 방식으로 열심히 듣는게 좋을까요?   선생님이 강조하신 부분을 필기하고 집에서 매일 수업 내용을 복습하려고 해.   \n","3   계속 원하시는 대로 회사생활이 이어지길 바랄게요.                                        NaN   \n","4                           NaN                                        NaN   \n","\n","                     시스템응답4  \n","0                       NaN  \n","1                       NaN  \n","2  열심히 해서 좋은 결과가 있었으면 좋겠어요.  \n","3                       NaN  \n","4                       NaN  "]},"execution_count":214,"metadata":{},"output_type":"execute_result"}],"source":["train_data[:5]"]},{"cell_type":"markdown","metadata":{"id":"TysFKgg0ivZy"},"source":["# 사람 문장 3, 4를 제외한이유\n","- 대부분의 감정은 사람문장 1, 2 에서 드러나는 경우가많다고 판단\n","- 문장 3, 4 에는 Nan값이많아 전처리중에 문제가 발생"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"fAVFvegHXsFF"},"outputs":[],"source":["train_data.drop(['번호','연령','성별','상황키워드','신체질환','사람문장3','사람문장4','시스템응답1','시스템응답2','시스템응답3','시스템응답4'], axis=1, inplace=True)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":320},"id":"Ru5WHLEJYM_P","outputId":"07034ebb-7af9-4801-f3be-e14523a6d020"},"outputs":[{"data":{"text/html":["\n","  <div id=\"df-cec3bdea-4066-4f99-a77e-dfaa4c814144\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>감정_대분류</th>\n","      <th>감정_소분류</th>\n","      <th>사람문장1</th>\n","      <th>사람문장2</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>기쁨</td>\n","      <td>신이 난</td>\n","      <td>아내가 드디어 출산하게 되어서 정말 신이 나.</td>\n","      <td>아 지금 정말 신이 나.</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>불안</td>\n","      <td>스트레스 받는</td>\n","      <td>당뇨랑 합병증 때문에 먹어야 할 약이 열 가지가 넘어가니까 스트레스야.</td>\n","      <td>건강할 때 관리 좀 잘할걸 하는 생각이 들더라고.</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>당황</td>\n","      <td>당황</td>\n","      <td>고등학교에 올라오니 중학교 때보다 수업이 갑자기 어려워져서 당황스러워.</td>\n","      <td>아직 학기 초인데 내가 수업에 잘 따라갈 수 있을지 걱정돼.</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>기쁨</td>\n","      <td>신이 난</td>\n","      <td>재취업이 돼서 받게 된 첫 월급으로 온 가족이 외식을 할 예정이야. 너무 행복해.</td>\n","      <td>퇴직 후 다시는 돈을 못 벌 줄 알았는데 이렇게 월급으로 가족에게 맛있는 밥을 살 ...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>기쁨</td>\n","      <td>안도</td>\n","      <td>빚을 드디어 다 갚게 되어서 이제야 안도감이 들어.</td>\n","      <td>빚도 다 갚았으니 당분간은 아무 생각도 안 하며 살고 싶어.</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cec3bdea-4066-4f99-a77e-dfaa4c814144')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-cec3bdea-4066-4f99-a77e-dfaa4c814144 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-cec3bdea-4066-4f99-a77e-dfaa4c814144');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["  감정_대분류   감정_소분류                                          사람문장1  \\\n","0     기쁨     신이 난                      아내가 드디어 출산하게 되어서 정말 신이 나.   \n","1     불안  스트레스 받는        당뇨랑 합병증 때문에 먹어야 할 약이 열 가지가 넘어가니까 스트레스야.   \n","2     당황       당황        고등학교에 올라오니 중학교 때보다 수업이 갑자기 어려워져서 당황스러워.   \n","3     기쁨     신이 난  재취업이 돼서 받게 된 첫 월급으로 온 가족이 외식을 할 예정이야. 너무 행복해.   \n","4     기쁨       안도                   빚을 드디어 다 갚게 되어서 이제야 안도감이 들어.   \n","\n","                                               사람문장2  \n","0                                      아 지금 정말 신이 나.  \n","1                        건강할 때 관리 좀 잘할걸 하는 생각이 들더라고.  \n","2                  아직 학기 초인데 내가 수업에 잘 따라갈 수 있을지 걱정돼.  \n","3  퇴직 후 다시는 돈을 못 벌 줄 알았는데 이렇게 월급으로 가족에게 맛있는 밥을 살 ...  \n","4                  빚도 다 갚았으니 당분간은 아무 생각도 안 하며 살고 싶어.  "]},"execution_count":216,"metadata":{},"output_type":"execute_result"}],"source":["train_data[:5]"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"916Ir9E3eogw","outputId":"2cc184ee-529c-478e-a76d-efe73f758d57"},"outputs":[{"name":"stdout","output_type":"stream","text":["테스트용 리뷰 개수 : 5130\n"]}],"source":["print('테스트용 리뷰 개수 :',len(test_data)) # 테스트용 리뷰 개수 출력"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"4IY_OiHMYfE3"},"outputs":[],"source":["test_data.drop(['번호','연령','성별','상황키워드','신체질환','사람문장3','사람문장4','시스템응답1','시스템응답2','시스템응답3','시스템응답4'], axis=1, inplace=True)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":354},"id":"N0fZRGEpYkdH","outputId":"9199c1df-60ef-437e-9455-ce65ebc96a5c"},"outputs":[{"data":{"text/html":["\n","  <div id=\"df-f992a615-a40f-4517-9062-bcdb46c68cd6\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>감정_대분류</th>\n","      <th>감정_소분류</th>\n","      <th>사람문장1</th>\n","      <th>사람문장2</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>분노</td>\n","      <td>툴툴대는</td>\n","      <td>요즘 부모님과 많이 부딪혀.</td>\n","      <td>난 하고 싶은 일이 있는데 부모님은 안정적인 일만 하라고 하셔. 내 마음대로 하지도...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>슬픔</td>\n","      <td>비통한</td>\n","      <td>엄마가 결국 집을 나갔어. 너무 너무 슬퍼.</td>\n","      <td>엄마도 엄마만의 인생이 있을 테니 가지 말라고 할 수가 없었어. 그래서 더 마음이 ...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>불안</td>\n","      <td>조심스러운</td>\n","      <td>학교에서 한 친구를 괴롭히는 무리에게 그만하라고 했어.</td>\n","      <td>그런데 말을 하고 난 후 나도 괴롭힐까 봐 불안했어.</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>당황</td>\n","      <td>죄책감의</td>\n","      <td>이번에 팀장님이 간단한 조사 업무를 부탁하셨는데 내가 잘못 처리했어. 너무 절망적이야.</td>\n","      <td>곧 있으면 인턴에서 정규직 전환 평가가 있는데 안 좋을 것 같아.</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>분노</td>\n","      <td>노여워하는</td>\n","      <td>남편이 이혼할 때 위자료를 주지 않으려고 변호사를 고용했어.</td>\n","      <td>어떻게 그럴 수가 있지? 너무 화가 나.</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f992a615-a40f-4517-9062-bcdb46c68cd6')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-f992a615-a40f-4517-9062-bcdb46c68cd6 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-f992a615-a40f-4517-9062-bcdb46c68cd6');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["  감정_대분류 감정_소분류                                             사람문장1  \\\n","0     분노   툴툴대는                                   요즘 부모님과 많이 부딪혀.   \n","1     슬픔    비통한                          엄마가 결국 집을 나갔어. 너무 너무 슬퍼.   \n","2     불안  조심스러운                    학교에서 한 친구를 괴롭히는 무리에게 그만하라고 했어.   \n","3     당황   죄책감의  이번에 팀장님이 간단한 조사 업무를 부탁하셨는데 내가 잘못 처리했어. 너무 절망적이야.   \n","4     분노  노여워하는                 남편이 이혼할 때 위자료를 주지 않으려고 변호사를 고용했어.   \n","\n","                                               사람문장2  \n","0  난 하고 싶은 일이 있는데 부모님은 안정적인 일만 하라고 하셔. 내 마음대로 하지도...  \n","1  엄마도 엄마만의 인생이 있을 테니 가지 말라고 할 수가 없었어. 그래서 더 마음이 ...  \n","2                      그런데 말을 하고 난 후 나도 괴롭힐까 봐 불안했어.  \n","3               곧 있으면 인턴에서 정규직 전환 평가가 있는데 안 좋을 것 같아.  \n","4                             어떻게 그럴 수가 있지? 너무 화가 나.  "]},"execution_count":219,"metadata":{},"output_type":"execute_result"}],"source":["test_data[:5]"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":320},"id":"ouiKGWAvg4PH","outputId":"20723cfb-7fa6-453b-8e66-dd06d30397d7"},"outputs":[{"data":{"text/html":["\n","  <div id=\"df-d4e2606c-1274-4616-8095-4e1cf657d1c1\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>감정_대분류</th>\n","      <th>감정_소분류</th>\n","      <th>사람문장1</th>\n","      <th>사람문장2</th>\n","      <th>label</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>기쁨</td>\n","      <td>신이 난</td>\n","      <td>아내가 드디어 출산하게 되어서 정말 신이 나.</td>\n","      <td>아 지금 정말 신이 나.</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>불안</td>\n","      <td>스트레스 받는</td>\n","      <td>당뇨랑 합병증 때문에 먹어야 할 약이 열 가지가 넘어가니까 스트레스야.</td>\n","      <td>건강할 때 관리 좀 잘할걸 하는 생각이 들더라고.</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>당황</td>\n","      <td>당황</td>\n","      <td>고등학교에 올라오니 중학교 때보다 수업이 갑자기 어려워져서 당황스러워.</td>\n","      <td>아직 학기 초인데 내가 수업에 잘 따라갈 수 있을지 걱정돼.</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>기쁨</td>\n","      <td>신이 난</td>\n","      <td>재취업이 돼서 받게 된 첫 월급으로 온 가족이 외식을 할 예정이야. 너무 행복해.</td>\n","      <td>퇴직 후 다시는 돈을 못 벌 줄 알았는데 이렇게 월급으로 가족에게 맛있는 밥을 살 ...</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>기쁨</td>\n","      <td>안도</td>\n","      <td>빚을 드디어 다 갚게 되어서 이제야 안도감이 들어.</td>\n","      <td>빚도 다 갚았으니 당분간은 아무 생각도 안 하며 살고 싶어.</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d4e2606c-1274-4616-8095-4e1cf657d1c1')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-d4e2606c-1274-4616-8095-4e1cf657d1c1 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-d4e2606c-1274-4616-8095-4e1cf657d1c1');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["  감정_대분류   감정_소분류                                          사람문장1  \\\n","0     기쁨     신이 난                      아내가 드디어 출산하게 되어서 정말 신이 나.   \n","1     불안  스트레스 받는        당뇨랑 합병증 때문에 먹어야 할 약이 열 가지가 넘어가니까 스트레스야.   \n","2     당황       당황        고등학교에 올라오니 중학교 때보다 수업이 갑자기 어려워져서 당황스러워.   \n","3     기쁨     신이 난  재취업이 돼서 받게 된 첫 월급으로 온 가족이 외식을 할 예정이야. 너무 행복해.   \n","4     기쁨       안도                   빚을 드디어 다 갚게 되어서 이제야 안도감이 들어.   \n","\n","                                               사람문장2  label  \n","0                                      아 지금 정말 신이 나.      0  \n","1                        건강할 때 관리 좀 잘할걸 하는 생각이 들더라고.      0  \n","2                  아직 학기 초인데 내가 수업에 잘 따라갈 수 있을지 걱정돼.      0  \n","3  퇴직 후 다시는 돈을 못 벌 줄 알았는데 이렇게 월급으로 가족에게 맛있는 밥을 살 ...      0  \n","4                  빚도 다 갚았으니 당분간은 아무 생각도 안 하며 살고 싶어.      0  "]},"execution_count":220,"metadata":{},"output_type":"execute_result"}],"source":["train_data['label'] = 0\n","train_data[:5]"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":552},"id":"JSnNL74uYmQk","outputId":"9774db7b-7e80-43ca-cf66-e6eb083836af"},"outputs":[{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:3: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  This is separate from the ipykernel package so we can avoid doing imports until\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:5: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  \"\"\"\n"]},{"data":{"text/html":["\n","  <div id=\"df-2373465c-ee83-4d9a-8e6d-c4203bba880e\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>감정_대분류</th>\n","      <th>감정_소분류</th>\n","      <th>사람문장1</th>\n","      <th>사람문장2</th>\n","      <th>label</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>40874</th>\n","      <td>불안</td>\n","      <td>혼란스러운</td>\n","      <td>같이 사는 친구가 애완견을 데려왔는데 대부분 내가 돌보고 있어. 내가 주인인가 혼란...</td>\n","      <td>나한테 아예 떠넘길 거 같은데 친구한테 얘기해볼까 고민 중이야.</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>40875</th>\n","      <td>기쁨</td>\n","      <td>안도</td>\n","      <td>지난주에 건강검진 결과가 나왔는데 정상이라고 결과가 나왔어.</td>\n","      <td>결과가 좋게 나와서 다행이야</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>40876</th>\n","      <td>슬픔</td>\n","      <td>우울한</td>\n","      <td>엄마는 내 꿈인 작가를 응원해 주고는 했는데 지금은 안 그래. 너무 슬퍼.</td>\n","      <td>내 재능이 남들보다 월등한 거는 아니라면서 취업해서 안정적으로 살았으면 좋겠다고 하셔.</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>40877</th>\n","      <td>기쁨</td>\n","      <td>감사하는</td>\n","      <td>이렇게 좋은 운동 시설에서 경로 우대로 운동할 수 있다니 참 행운이야.</td>\n","      <td>덕분에 건강도 챙길 수 있고 너무 좋아. 안마기도 있던데 내일은 운동하고 안마기도 ...</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>40878</th>\n","      <td>불안</td>\n","      <td>스트레스 받는</td>\n","      <td>친구 관계가 너무 힘들어. 베푸는 만큼 돌아오지 않는 것 같아.</td>\n","      <td>카페에 가서 대화하거나 같이 술 마시면서 이야기했던 것 같아.</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2373465c-ee83-4d9a-8e6d-c4203bba880e')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-2373465c-ee83-4d9a-8e6d-c4203bba880e button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-2373465c-ee83-4d9a-8e6d-c4203bba880e');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["      감정_대분류   감정_소분류                                              사람문장1  \\\n","40874     불안    혼란스러운  같이 사는 친구가 애완견을 데려왔는데 대부분 내가 돌보고 있어. 내가 주인인가 혼란...   \n","40875     기쁨       안도                  지난주에 건강검진 결과가 나왔는데 정상이라고 결과가 나왔어.   \n","40876     슬픔      우울한          엄마는 내 꿈인 작가를 응원해 주고는 했는데 지금은 안 그래. 너무 슬퍼.   \n","40877     기쁨     감사하는            이렇게 좋은 운동 시설에서 경로 우대로 운동할 수 있다니 참 행운이야.   \n","40878     불안  스트레스 받는                친구 관계가 너무 힘들어. 베푸는 만큼 돌아오지 않는 것 같아.   \n","\n","                                                   사람문장2  label  \n","40874                나한테 아예 떠넘길 거 같은데 친구한테 얘기해볼까 고민 중이야.      0  \n","40875                                    결과가 좋게 나와서 다행이야      1  \n","40876   내 재능이 남들보다 월등한 거는 아니라면서 취업해서 안정적으로 살았으면 좋겠다고 하셔.      0  \n","40877  덕분에 건강도 챙길 수 있고 너무 좋아. 안마기도 있던데 내일은 운동하고 안마기도 ...      1  \n","40878                 카페에 가서 대화하거나 같이 술 마시면서 이야기했던 것 같아.      0  "]},"execution_count":221,"metadata":{},"output_type":"execute_result"}],"source":["for i in range(len(train_data)):\n","  if train_data['감정_대분류'][i] == '기쁨':\n","    train_data['label'][i] = 1\n","  else:\n","    train_data['label'][i] = 0\n","\n","train_data[-5:]"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":354},"id":"axNHpKaUeE1v","outputId":"bf041f0d-b6d0-40e9-f727-030e1ee1fbb4"},"outputs":[{"data":{"text/html":["\n","  <div id=\"df-ad3697f8-350c-4cf8-a537-108fd0caa7cd\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>감정_대분류</th>\n","      <th>감정_소분류</th>\n","      <th>사람문장1</th>\n","      <th>사람문장2</th>\n","      <th>label</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>분노</td>\n","      <td>툴툴대는</td>\n","      <td>요즘 부모님과 많이 부딪혀.</td>\n","      <td>난 하고 싶은 일이 있는데 부모님은 안정적인 일만 하라고 하셔. 내 마음대로 하지도...</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>슬픔</td>\n","      <td>비통한</td>\n","      <td>엄마가 결국 집을 나갔어. 너무 너무 슬퍼.</td>\n","      <td>엄마도 엄마만의 인생이 있을 테니 가지 말라고 할 수가 없었어. 그래서 더 마음이 ...</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>불안</td>\n","      <td>조심스러운</td>\n","      <td>학교에서 한 친구를 괴롭히는 무리에게 그만하라고 했어.</td>\n","      <td>그런데 말을 하고 난 후 나도 괴롭힐까 봐 불안했어.</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>당황</td>\n","      <td>죄책감의</td>\n","      <td>이번에 팀장님이 간단한 조사 업무를 부탁하셨는데 내가 잘못 처리했어. 너무 절망적이야.</td>\n","      <td>곧 있으면 인턴에서 정규직 전환 평가가 있는데 안 좋을 것 같아.</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>분노</td>\n","      <td>노여워하는</td>\n","      <td>남편이 이혼할 때 위자료를 주지 않으려고 변호사를 고용했어.</td>\n","      <td>어떻게 그럴 수가 있지? 너무 화가 나.</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ad3697f8-350c-4cf8-a537-108fd0caa7cd')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-ad3697f8-350c-4cf8-a537-108fd0caa7cd button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-ad3697f8-350c-4cf8-a537-108fd0caa7cd');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["  감정_대분류 감정_소분류                                             사람문장1  \\\n","0     분노   툴툴대는                                   요즘 부모님과 많이 부딪혀.   \n","1     슬픔    비통한                          엄마가 결국 집을 나갔어. 너무 너무 슬퍼.   \n","2     불안  조심스러운                    학교에서 한 친구를 괴롭히는 무리에게 그만하라고 했어.   \n","3     당황   죄책감의  이번에 팀장님이 간단한 조사 업무를 부탁하셨는데 내가 잘못 처리했어. 너무 절망적이야.   \n","4     분노  노여워하는                 남편이 이혼할 때 위자료를 주지 않으려고 변호사를 고용했어.   \n","\n","                                               사람문장2  label  \n","0  난 하고 싶은 일이 있는데 부모님은 안정적인 일만 하라고 하셔. 내 마음대로 하지도...      0  \n","1  엄마도 엄마만의 인생이 있을 테니 가지 말라고 할 수가 없었어. 그래서 더 마음이 ...      0  \n","2                      그런데 말을 하고 난 후 나도 괴롭힐까 봐 불안했어.      0  \n","3               곧 있으면 인턴에서 정규직 전환 평가가 있는데 안 좋을 것 같아.      0  \n","4                             어떻게 그럴 수가 있지? 너무 화가 나.      0  "]},"execution_count":222,"metadata":{},"output_type":"execute_result"}],"source":["test_data['label'] = 0\n","test_data[:5]"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":552},"id":"bf-UlEUxaDt3","outputId":"7a346e58-4f24-4442-efc6-0ab2245b5f47"},"outputs":[{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:5: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  \"\"\"\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:3: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  This is separate from the ipykernel package so we can avoid doing imports until\n"]},{"data":{"text/html":["\n","  <div id=\"df-dbabd7b6-fc1e-4fb3-84d1-75f31c426300\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>감정_대분류</th>\n","      <th>감정_소분류</th>\n","      <th>사람문장1</th>\n","      <th>사람문장2</th>\n","      <th>label</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>분노</td>\n","      <td>툴툴대는</td>\n","      <td>요즘 부모님과 많이 부딪혀.</td>\n","      <td>난 하고 싶은 일이 있는데 부모님은 안정적인 일만 하라고 하셔. 내 마음대로 하지도...</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>슬픔</td>\n","      <td>비통한</td>\n","      <td>엄마가 결국 집을 나갔어. 너무 너무 슬퍼.</td>\n","      <td>엄마도 엄마만의 인생이 있을 테니 가지 말라고 할 수가 없었어. 그래서 더 마음이 ...</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>불안</td>\n","      <td>조심스러운</td>\n","      <td>학교에서 한 친구를 괴롭히는 무리에게 그만하라고 했어.</td>\n","      <td>그런데 말을 하고 난 후 나도 괴롭힐까 봐 불안했어.</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>당황</td>\n","      <td>죄책감의</td>\n","      <td>이번에 팀장님이 간단한 조사 업무를 부탁하셨는데 내가 잘못 처리했어. 너무 절망적이야.</td>\n","      <td>곧 있으면 인턴에서 정규직 전환 평가가 있는데 안 좋을 것 같아.</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>분노</td>\n","      <td>노여워하는</td>\n","      <td>남편이 이혼할 때 위자료를 주지 않으려고 변호사를 고용했어.</td>\n","      <td>어떻게 그럴 수가 있지? 너무 화가 나.</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-dbabd7b6-fc1e-4fb3-84d1-75f31c426300')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-dbabd7b6-fc1e-4fb3-84d1-75f31c426300 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-dbabd7b6-fc1e-4fb3-84d1-75f31c426300');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["  감정_대분류 감정_소분류                                             사람문장1  \\\n","0     분노   툴툴대는                                   요즘 부모님과 많이 부딪혀.   \n","1     슬픔    비통한                          엄마가 결국 집을 나갔어. 너무 너무 슬퍼.   \n","2     불안  조심스러운                    학교에서 한 친구를 괴롭히는 무리에게 그만하라고 했어.   \n","3     당황   죄책감의  이번에 팀장님이 간단한 조사 업무를 부탁하셨는데 내가 잘못 처리했어. 너무 절망적이야.   \n","4     분노  노여워하는                 남편이 이혼할 때 위자료를 주지 않으려고 변호사를 고용했어.   \n","\n","                                               사람문장2  label  \n","0  난 하고 싶은 일이 있는데 부모님은 안정적인 일만 하라고 하셔. 내 마음대로 하지도...      0  \n","1  엄마도 엄마만의 인생이 있을 테니 가지 말라고 할 수가 없었어. 그래서 더 마음이 ...      0  \n","2                      그런데 말을 하고 난 후 나도 괴롭힐까 봐 불안했어.      0  \n","3               곧 있으면 인턴에서 정규직 전환 평가가 있는데 안 좋을 것 같아.      0  \n","4                             어떻게 그럴 수가 있지? 너무 화가 나.      0  "]},"execution_count":223,"metadata":{},"output_type":"execute_result"}],"source":["for i in range(len(test_data)):\n","  if test_data['감정_대분류'][i] == '기쁨':\n","    test_data['label'][i] = 1\n","  else:\n","    test_data['label'][i] = 0\n","\n","test_data[:5]"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":354},"id":"q3mZidFwddzf","outputId":"b6795d1e-076a-4468-8945-f11c21c45d65"},"outputs":[{"data":{"text/html":["\n","  <div id=\"df-c07f11d9-d7a2-4f62-a270-33fb8e4537a6\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>감정_대분류</th>\n","      <th>감정_소분류</th>\n","      <th>사람문장1</th>\n","      <th>사람문장2</th>\n","      <th>label</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>5125</th>\n","      <td>기쁨</td>\n","      <td>느긋</td>\n","      <td>부동산 임대 소득으로 현재 여유롭게 살 수 있어서 좋단다.</td>\n","      <td>그래서 마음의 안정을 가질 수 있었던 것 같아.</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>5126</th>\n","      <td>불안</td>\n","      <td>회의적인</td>\n","      <td>폐결핵은 이미 완치된 것 같은데 약을 한 달이나 더 먹으라고 하네? 아직 안 나은 ...</td>\n","      <td>이대로 혹시 더 심해져서 죽게 되는 건 아닐까?</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>5127</th>\n","      <td>분노</td>\n","      <td>좌절한</td>\n","      <td>연애하고 싶은데 소개팅만 나가면 꽝이야. 이러다가 난 결혼 못 하고 늙어 죽을 거야.</td>\n","      <td>내가 게을러서 다른 방법을 아직 생각하진 못했어. 댄스 동호회는 좀 괜찮은 것 같은...</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>5128</th>\n","      <td>분노</td>\n","      <td>안달하는</td>\n","      <td>은행 대출이 막혀서 생활비를 구할 수가 없어. 이제 어떻게 살아야 하나 막막해.</td>\n","      <td>당장 내일 밥은 어떡하고 내 병원비는 어쩌지.</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>5129</th>\n","      <td>분노</td>\n","      <td>짜증내는</td>\n","      <td>자식들은 키워 준 은혜도 모르고 내게 오지도 않네. 너무 외롭고 슬퍼.</td>\n","      <td>응 이제 다들 독립해가지고 명절 아니면 찾아오질 않아. 안부전화라도 해주면 좋을 텐데.</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c07f11d9-d7a2-4f62-a270-33fb8e4537a6')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-c07f11d9-d7a2-4f62-a270-33fb8e4537a6 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-c07f11d9-d7a2-4f62-a270-33fb8e4537a6');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["     감정_대분류 감정_소분류                                              사람문장1  \\\n","5125     기쁨     느긋                   부동산 임대 소득으로 현재 여유롭게 살 수 있어서 좋단다.   \n","5126     불안   회의적인  폐결핵은 이미 완치된 것 같은데 약을 한 달이나 더 먹으라고 하네? 아직 안 나은 ...   \n","5127     분노    좌절한    연애하고 싶은데 소개팅만 나가면 꽝이야. 이러다가 난 결혼 못 하고 늙어 죽을 거야.   \n","5128     분노   안달하는       은행 대출이 막혀서 생활비를 구할 수가 없어. 이제 어떻게 살아야 하나 막막해.   \n","5129     분노   짜증내는            자식들은 키워 준 은혜도 모르고 내게 오지도 않네. 너무 외롭고 슬퍼.   \n","\n","                                                  사람문장2  label  \n","5125                         그래서 마음의 안정을 가질 수 있었던 것 같아.      1  \n","5126                         이대로 혹시 더 심해져서 죽게 되는 건 아닐까?      0  \n","5127  내가 게을러서 다른 방법을 아직 생각하진 못했어. 댄스 동호회는 좀 괜찮은 것 같은...      0  \n","5128                          당장 내일 밥은 어떡하고 내 병원비는 어쩌지.      0  \n","5129   응 이제 다들 독립해가지고 명절 아니면 찾아오질 않아. 안부전화라도 해주면 좋을 텐데.      0  "]},"execution_count":224,"metadata":{},"output_type":"execute_result"}],"source":["test_data[-5:]"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Y0KpS8l8eMTH","outputId":"59117fdc-5db5-4cc0-c27f-6412738b462e"},"outputs":[{"data":{"text/plain":["(39415, 38878)"]},"execution_count":225,"metadata":{},"output_type":"execute_result"}],"source":["train_data['사람문장1'].nunique(), train_data['사람문장2'].nunique()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"b8db6IpQeZq2","outputId":"29ecba76-92f1-41b7-fa1e-e167daea3741"},"outputs":[{"data":{"text/plain":["(5103, 5096)"]},"execution_count":226,"metadata":{},"output_type":"execute_result"}],"source":["test_data['사람문장1'].nunique(), test_data['사람문장2'].nunique()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"V6AVdE3fecVQ"},"outputs":[],"source":["train_data.drop_duplicates(subset=['사람문장1','사람문장2'], inplace=True)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GWraX_Xwe2ZD","outputId":"969adf69-b95a-4a04-a704-cfec2fe5a322"},"outputs":[{"name":"stdout","output_type":"stream","text":["총 샘플의 수 : 39614\n"]}],"source":["print('총 샘플의 수 :',len(train_data))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"aJbD6ssBeyVz"},"outputs":[],"source":["test_data.drop_duplicates(subset=['사람문장1','사람문장2'], inplace=True)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dkenMHC1e2DA","outputId":"e0f03606-2ecc-48e0-82db-fb0f0a3c8c03"},"outputs":[{"name":"stdout","output_type":"stream","text":["총 샘플의 수 : 5104\n"]}],"source":["print('총 샘플의 수 :',len(test_data))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":280},"id":"VxKSGS5Ze6xy","outputId":"3fff3bcc-4b2c-498a-f01e-508cf24b6e7a"},"outputs":[{"data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f35c8e58b50>"]},"execution_count":231,"metadata":{},"output_type":"execute_result"},{"data":{"image/png":"iVBORw0KGgoAAAANSUhEUgAAAYMAAAD1CAYAAACyaJl6AAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAPkklEQVR4nO3db4xVd53H8fdHENes64J2lrBAF2JnY6iJqISycR+4bZY/9QE16Rr6wJKGiImQaOID0Se4apP2gTZpUptgSqQbVyT+SYmiLGG7MWbTlqmytLTbZRbbBYJlLLTVmG0X/O6D+bHeHWeYy8wwlzLvV3Jyz/me3zn3e5IJn7nn/O6QqkKSNLO9qdcNSJJ6zzCQJBkGkiTDQJKEYSBJwjCQJAGze93ARF133XW1ZMmSXrchSW8oTz755K+qqm9k/Q0bBkuWLGFgYKDXbUjSG0qSF0are5tIkmQYSJIMA0kShoEkCcNAkoRhIEnCMJAkYRhIkngDf+nsjWLJth/2uoVrxvP3fLjXLUjXLD8ZSJIMA0mSYSBJwjCQJGEYSJIwDCRJGAaSJAwDSRKGgSQJw0CShGEgScIwkCRhGEiSMAwkSRgGkiS6CIMkf5TkiST/luRokr9v9aVJHk8ymOTbSea0+lva9mDbv6TjXJ9r9eeSrOmor221wSTbpv4yJUmX0s0ng9eAm6vqvcByYG2SVcC9wH1VdQNwDtjUxm8CzrX6fW0cSZYBG4AbgbXA15LMSjILeABYBywD7mhjJUnTZNwwqGG/aZtvbksBNwPfafVdwG1tfX3bpu2/JUlafXdVvVZVvwAGgZVtGayq41X1OrC7jZUkTZOunhm03+APA2eAA8B/Ai9X1fk25CSwsK0vBE4AtP2vAO/srI84Zqy6JGmadBUGVXWhqpYDixj+Tf7dV7SrMSTZnGQgycDQ0FAvWpCka9JlzSaqqpeBR4G/AuYmmd12LQJOtfVTwGKAtv9PgZc66yOOGas+2vvvqKoVVbWir6/vclqXJF1CN7OJ+pLMbetvBf4WeJbhULi9DdsIPNLW97Zt2v5/rqpq9Q1tttFSoB94AjgE9LfZSXMYfsi8dyouTpLUndnjD2EBsKvN+nkTsKeqfpDkGWB3ki8DPwceauMfAv4hySBwluF/3Kmqo0n2AM8A54EtVXUBIMlWYD8wC9hZVUen7AolSeMaNwyq6gjwvlHqxxl+fjCy/t/A341xrruBu0ep7wP2ddGvJOkK8BvIkiTDQJJkGEiSMAwkSRgGkiQMA0kShoEkCcNAkoRhIEnCMJAkYRhIkjAMJEkYBpIkDANJEoaBJAnDQJKEYSBJwjCQJGEYSJIwDCRJGAaSJAwDSRJdhEGSxUkeTfJMkqNJPtXqX0hyKsnhttzaccznkgwmeS7Jmo762lYbTLKto740yeOt/u0kc6b6QiVJY+vmk8F54DNVtQxYBWxJsqztu6+qlrdlH0DbtwG4EVgLfC3JrCSzgAeAdcAy4I6O89zbznUDcA7YNEXXJ0nqwrhhUFWnq+pnbf3XwLPAwkscsh7YXVWvVdUvgEFgZVsGq+p4Vb0O7AbWJwlwM/Cddvwu4LaJXpAk6fJd1jODJEuA9wGPt9LWJEeS7Ewyr9UWAic6DjvZamPV3wm8XFXnR9QlSdOk6zBI8jbgu8Cnq+pV4EHgXcBy4DTwlSvS4f/vYXOSgSQDQ0NDV/rtJGnG6CoMkryZ4SD4ZlV9D6CqXqyqC1X1O+DrDN8GAjgFLO44fFGrjVV/CZibZPaI+h+oqh1VtaKqVvT19XXTuiSpC93MJgrwEPBsVX21o76gY9hHgKfb+l5gQ5K3JFkK9ANPAIeA/jZzaA7DD5n3VlUBjwK3t+M3Ao9M7rIkSZdj9vhD+CDwMeCpJIdb7fMMzwZaDhTwPPAJgKo6mmQP8AzDM5G2VNUFgCRbgf3ALGBnVR1t5/sssDvJl4GfMxw+kqRpMm4YVNVPgYyya98ljrkbuHuU+r7Rjquq4/z+NpMkaZr5DWRJkmEgSTIMJEkYBpIkDANJEoaBJAnDQJKEYSBJwjCQJGEYSJIwDCRJGAaSJAwDSRKGgSQJw0CShGEgScIwkCRhGEiSMAwkSRgGkiQMA0kShoEkCcNAkkQXYZBkcZJHkzyT5GiST7X6O5IcSHKsvc5r9SS5P8lgkiNJ3t9xro1t/LEkGzvqH0jyVDvm/iS5EhcrSRpdN58MzgOfqaplwCpgS5JlwDbgYFX1AwfbNsA6oL8tm4EHYTg8gO3ATcBKYPvFAGljPt5x3NrJX5okqVvjhkFVna6qn7X1XwPPAguB9cCuNmwXcFtbXw88XMMeA+YmWQCsAQ5U1dmqOgccANa2fW+vqseqqoCHO84lSZoGl/XMIMkS4H3A48D8qjrddv0SmN/WFwInOg472WqXqp8cpT7a+29OMpBkYGho6HJalyRdQtdhkORtwHeBT1fVq5372m/0NcW9/YGq2lFVK6pqRV9f35V+O0maMboKgyRvZjgIvllV32vlF9stHtrrmVY/BSzuOHxRq12qvmiUuiRpmnQzmyjAQ8CzVfXVjl17gYszgjYCj3TU72yzilYBr7TbSfuB1UnmtQfHq4H9bd+rSVa197qz41ySpGkwu4sxHwQ+BjyV5HCrfR64B9iTZBPwAvDRtm8fcCswCPwWuAugqs4m+RJwqI37YlWdbeufBL4BvBX4UVskSdNk3DCoqp8CY837v2WU8QVsGeNcO4Gdo9QHgPeM14sk6crwG8iSJMNAkmQYSJIwDCRJGAaSJAwDSRKGgSQJw0CShGEgScIwkCRhGEiSMAwkSRgGkiQMA0kShoEkCcNAkoRhIEnCMJAkYRhIkjAMJEkYBpIkDANJEl2EQZKdSc4kebqj9oUkp5IcbsutHfs+l2QwyXNJ1nTU17baYJJtHfWlSR5v9W8nmTOVFyhJGl83nwy+AawdpX5fVS1vyz6AJMuADcCN7ZivJZmVZBbwALAOWAbc0cYC3NvOdQNwDtg0mQuSJF2+ccOgqn4CnO3yfOuB3VX1WlX9AhgEVrZlsKqOV9XrwG5gfZIANwPfacfvAm67zGuQJE3SZJ4ZbE1ypN1GmtdqC4ETHWNOttpY9XcCL1fV+RF1SdI0mmgYPAi8C1gOnAa+MmUdXUKSzUkGkgwMDQ1Nx1tK0owwoTCoqher6kJV/Q74OsO3gQBOAYs7hi5qtbHqLwFzk8weUR/rfXdU1YqqWtHX1zeR1iVJo5hQGCRZ0LH5EeDiTKO9wIYkb0myFOgHngAOAf1t5tAchh8y762qAh4Fbm/HbwQemUhPkqSJmz3egCTfAj4EXJfkJLAd+FCS5UABzwOfAKiqo0n2AM8A54EtVXWhnWcrsB+YBeysqqPtLT4L7E7yZeDnwENTdnWSpK6MGwZVdcco5TH/wa6qu4G7R6nvA/aNUj/O728zSZJ6wG8gS5IMA0mSYSBJwjCQJGEYSJIwDCRJGAaSJAwDSRKGgSQJw0CShGEgScIwkCRhGEiSMAwkSRgGkiQMA0kShoEkCcNAkoRhIEnCMJAkYRhIkjAMJEl0EQZJdiY5k+Tpjto7khxIcqy9zmv1JLk/yWCSI0ne33HMxjb+WJKNHfUPJHmqHXN/kkz1RUqSLq2bTwbfANaOqG0DDlZVP3CwbQOsA/rbshl4EIbDA9gO3ASsBLZfDJA25uMdx418L0nSFTZuGFTVT4CzI8rrgV1tfRdwW0f94Rr2GDA3yQJgDXCgqs5W1TngALC27Xt7VT1WVQU83HEuSdI0megzg/lVdbqt/xKY39YXAic6xp1stUvVT45SlyRNo0k/QG6/0dcU9DKuJJuTDCQZGBoamo63lKQZYaJh8GK7xUN7PdPqp4DFHeMWtdql6otGqY+qqnZU1YqqWtHX1zfB1iVJI000DPYCF2cEbQQe6ajf2WYVrQJeabeT9gOrk8xrD45XA/vbvleTrGqziO7sOJckaZrMHm9Akm8BHwKuS3KS4VlB9wB7kmwCXgA+2obvA24FBoHfAncBVNXZJF8CDrVxX6yqiw+lP8nwjKW3Aj9qiyRpGo0bBlV1xxi7bhllbAFbxjjPTmDnKPUB4D3j9SFJunL8BrIkyTCQJBkGkiQMA0kShoEkCcNAkoRhIEnCMJAkYRhIkjAMJEkYBpIkDANJEoaBJAnDQJKEYSBJwjCQJGEYSJLo4n86k3RtWrLth71u4Zry/D0f7nULk+InA0mSYSBJMgwkSRgGkiQmGQZJnk/yVJLDSQZa7R1JDiQ51l7ntXqS3J9kMMmRJO/vOM/GNv5Yko2TuyRJ0uWaik8Gf1NVy6tqRdveBhysqn7gYNsGWAf0t2Uz8CAMhwewHbgJWAlsvxggkqTpcSVuE60HdrX1XcBtHfWHa9hjwNwkC4A1wIGqOltV54ADwNor0JckaQyTDYMC/inJk0k2t9r8qjrd1n8JzG/rC4ETHceebLWx6pKkaTLZL539dVWdSvJnwIEk/965s6oqSU3yPf5PC5zNANdff/1UnVaSZrxJfTKoqlPt9QzwfYbv+b/Ybv/QXs+04aeAxR2HL2q1seqjvd+OqlpRVSv6+vom07okqcOEwyDJHyf5k4vrwGrgaWAvcHFG0Ebgkba+F7izzSpaBbzSbiftB1YnmdceHK9uNUnSNJnMbaL5wPeTXDzPP1bVj5McAvYk2QS8AHy0jd8H3AoMAr8F7gKoqrNJvgQcauO+WFVnJ9GXJOkyTTgMquo48N5R6i8Bt4xSL2DLGOfaCeycaC+SpMnxG8iSJMNAkmQYSJIwDCRJGAaSJAwDSRKGgSQJw0CShGEgScIwkCRhGEiSMAwkSRgGkiQMA0kShoEkCcNAkoRhIEnCMJAkYRhIkjAMJEkYBpIkDANJEoaBJImrKAySrE3yXJLBJNt63Y8kzSRXRRgkmQU8AKwDlgF3JFnW264kaea4KsIAWAkMVtXxqnod2A2s73FPkjRjzO51A81C4ETH9kngppGDkmwGNrfN3yR5bhp6mwmuA37V6ybGk3t73YF6xJ/PqfUXoxWvljDoSlXtAHb0uo9rTZKBqlrR6z6k0fjzOT2ulttEp4DFHduLWk2SNA2uljA4BPQnWZpkDrAB2NvjniRpxrgqbhNV1fkkW4H9wCxgZ1Ud7XFbM4m33nQ18+dzGqSqet2DJKnHrpbbRJKkHjIMJEmGgSTpKnmArOmV5N0Mf8N7YSudAvZW1bO960pSL/nJYIZJ8lmG/9xHgCfaEuBb/oFAXc2S3NXrHq5lziaaYZL8B3BjVf3PiPoc4GhV9femM+nSkvxXVV3f6z6uVd4mmnl+B/w58MKI+oK2T+qZJEfG2gXMn85eZhrDYOb5NHAwyTF+/8cBrwduALb2rCtp2HxgDXBuRD3Av05/OzOHYTDDVNWPk/wlw382vPMB8qGqutC7ziQAfgC8raoOj9yR5F+mv52Zw2cGkiRnE0mSDANJEoaBJAnDQJKEYSBJAv4Xm+Bw/UmwtPEAAAAASUVORK5CYII=\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["train_data['label'].value_counts().plot(kind = 'bar')"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Z4v6vtc2fBqe","outputId":"61c75cad-35bf-4532-e590-8b9416733ee1"},"outputs":[{"name":"stdout","output_type":"stream","text":["   label  count\n","0      0  33123\n","1      1   6491\n"]}],"source":["print(train_data.groupby('label').size().reset_index(name = 'count'))"]},{"cell_type":"markdown","metadata":{"id":"kvLGEfijjW1t"},"source":["# 당황 카테고리 지우기"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"0dHePYVOfcV6"},"outputs":[],"source":["train_data = train_data[train_data.감정_대분류 != '당황']"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fa_jbKJrgp_m","outputId":"60445b24-f368-4eb7-dcc6-19893d2265a3"},"outputs":[{"name":"stdout","output_type":"stream","text":["총 샘플의 수 : 33470\n"]}],"source":["print('총 샘플의 수 :',len(train_data))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":280},"id":"6bS9MP-fhKFB","outputId":"6e468d81-fea6-445f-b0b3-f63ebcd2ed90"},"outputs":[{"data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f35de0c32d0>"]},"execution_count":235,"metadata":{},"output_type":"execute_result"},{"data":{"image/png":"iVBORw0KGgoAAAANSUhEUgAAAYMAAAD1CAYAAACyaJl6AAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAANz0lEQVR4nO3dX4id9Z3H8fdnk1rKusXYzIZsEjdSZ1liYVMbYqB74VbIH3sRC0X0ogaRptAEKvTCtDcpWkEv2oJghRSDEbpNpX8wtGmzIVhKWdSMbYhG182Q6iYhmqlJtYtQN/a7F/PL9uz0TOZkJjknZt4vOMw53/M8z/kdCH17nvPMNFWFJGl2+6tBL0CSNHjGQJJkDCRJxkCShDGQJGEMJEnA3EEvYLrmz59fS5cuHfQyJOl95fnnn/9dVQ1NnL9vY7B06VJGRkYGvQxJel9J8lq3uaeJJEnGQJJkDCRJGANJEsZAkoQxkCRhDCRJGANJEu/jXzp7v1i65aeDXsJl49UHPz3oJUiXLT8ZSJKMgSTJGEiSMAaSJIyBJAljIEnCGEiSMAaSJIyBJAljIEnCGEiS6CEGSZYkeTrJS0kOJflSm38tyfEkB9rtlo59vpJkNMkrSdZ0zNe22WiSLR3za5M82+bfT3LFhX6jkqTJ9fLJ4Azw5apaBqwCNiVZ1p77VlUtb7fdAO2524HrgbXAt5PMSTIHeARYBywD7ug4zkPtWNcBp4G7L9D7kyT1YMoYVNWJqvp1u/8H4GVg0Tl2WQ/srKo/VtVvgVFgZbuNVtWRqnoX2AmsTxLgU8AP2v47gFun+4YkSefvvL4zSLIU+DjwbBttTnIwyfYk89psEXC0Y7djbTbZ/CPA76vqzIS5JKlPeo5BkiuBHwL3VNXbwKPAR4HlwAngGxdlhf9/DRuTjCQZGRsbu9gvJ0mzRk8xSPIBxkPw3ar6EUBVvVFV71XVn4DvMH4aCOA4sKRj98VtNtn8TeCqJHMnzP9CVW2rqhVVtWJoaKiXpUuSetDL1UQBHgNerqpvdswXdmz2GeDFdn8XcHuSDya5FhgGngP2A8PtyqErGP+SeVdVFfA08Nm2/wbgqZm9LUnS+ejl//byk8DngBeSHGizrzJ+NdByoIBXgS8AVNWhJE8CLzF+JdKmqnoPIMlmYA8wB9heVYfa8e4Fdib5OvAbxuMjSeqTKWNQVb8C0uWp3efY5wHggS7z3d32q6oj/Pk0kySpz/wNZEmSMZAkGQNJEsZAkoQxkCRhDCRJGANJEsZAkoQxkCRhDCRJGANJEsZAkoQxkCRhDCRJGANJEsZAkoQxkCRhDCRJGANJEsZAkoQxkCRhDCRJGANJEsZAkoQxkCRhDCRJGANJEsZAkoQxkCTRQwySLEnydJKXkhxK8qU2vzrJ3iSH2895bZ4kDycZTXIwyQ0dx9rQtj+cZEPH/BNJXmj7PJwkF+PNSpK66+WTwRngy1W1DFgFbEqyDNgC7KuqYWBfewywDhhut43AozAeD2ArcCOwEth6NiBtm8937Ld25m9NktSrKWNQVSeq6tft/h+Al4FFwHpgR9tsB3Bru78eeKLGPQNclWQhsAbYW1Wnquo0sBdY2577cFU9U1UFPNFxLElSH5zXdwZJlgIfB54FFlTVifbU68CCdn8RcLRjt2Ntdq75sS5zSVKf9ByDJFcCPwTuqaq3O59r/0VfF3ht3dawMclIkpGxsbGL/XKSNGv0FIMkH2A8BN+tqh+18RvtFA/t58k2Pw4s6dh9cZuda764y/wvVNW2qlpRVSuGhoZ6WbokqQe9XE0U4DHg5ar6ZsdTu4CzVwRtAJ7qmN/ZripaBbzVTiftAVYnmde+OF4N7GnPvZ1kVXutOzuOJUnqg7k9bPNJ4HPAC0kOtNlXgQeBJ5PcDbwG3Nae2w3cAowC7wB3AVTVqST3A/vbdvdV1al2/4vA48CHgJ+1mySpT6aMQVX9Cpjsuv+bu2xfwKZJjrUd2N5lPgJ8bKq1SJIuDn8DWZJkDCRJxkCShDGQJGEMJEkYA0kSxkCShDGQJGEMJEkYA0kSxkCShDGQJGEMJEkYA0kSxkCShDGQJGEMJEkYA0kSxkCShDGQJGEMJEkYA0kSxkCShDGQJGEMJEkYA0kSxkCShDGQJGEMJEkYA0kSPcQgyfYkJ5O82DH7WpLjSQ602y0dz30lyWiSV5Ks6ZivbbPRJFs65tcmebbNv5/kigv5BiVJU+vlk8HjwNou829V1fJ22w2QZBlwO3B92+fbSeYkmQM8AqwDlgF3tG0BHmrHug44Ddw9kzckSTp/U8agqn4JnOrxeOuBnVX1x6r6LTAKrGy30ao6UlXvAjuB9UkCfAr4Qdt/B3Dreb4HSdIMzeQ7g81JDrbTSPPabBFwtGObY2022fwjwO+r6syEeVdJNiYZSTIyNjY2g6VLkjpNNwaPAh8FlgMngG9csBWdQ1Vtq6oVVbViaGioHy8pSbPC3OnsVFVvnL2f5DvAT9rD48CSjk0XtxmTzN8Erkoyt3066NxektQn0/pkkGRhx8PPAGevNNoF3J7kg0muBYaB54D9wHC7cugKxr9k3lVVBTwNfLbtvwF4ajprkiRN35SfDJJ8D7gJmJ/kGLAVuCnJcqCAV4EvAFTVoSRPAi8BZ4BNVfVeO85mYA8wB9heVYfaS9wL7EzydeA3wGMX7N1JknoyZQyq6o4u40n/B7uqHgAe6DLfDezuMj/C+NVGkqQB8TeQJUnGQJJkDCRJGANJEsZAkoQxkCRhDCRJGANJEsZAkoQxkCRhDCRJGANJEsZAkoQxkCRhDCRJGANJEsZAkoQxkCRhDCRJGANJEsZAkoQxkCRhDCRJGANJEsZAkoQxkCRhDCRJGANJEsZAkkQPMUiyPcnJJC92zK5OsjfJ4fZzXpsnycNJRpMcTHJDxz4b2vaHk2zomH8iyQttn4eT5EK/SUnSufXyyeBxYO2E2RZgX1UNA/vaY4B1wHC7bQQehfF4AFuBG4GVwNazAWnbfL5jv4mvJUm6yKaMQVX9Ejg1Ybwe2NHu7wBu7Zg/UeOeAa5KshBYA+ytqlNVdRrYC6xtz324qp6pqgKe6DiWJKlPpvudwYKqOtHuvw4saPcXAUc7tjvWZueaH+sylyT10Yy/QG7/RV8XYC1TSrIxyUiSkbGxsX68pCTNCtONwRvtFA/t58k2Pw4s6dhucZuda764y7yrqtpWVSuqasXQ0NA0ly5Jmmi6MdgFnL0iaAPwVMf8znZV0SrgrXY6aQ+wOsm89sXxamBPe+7tJKvaVUR3dhxLktQnc6faIMn3gJuA+UmOMX5V0IPAk0nuBl4Dbmub7wZuAUaBd4C7AKrqVJL7gf1tu/uq6uyX0l9k/IqlDwE/azdJUh9NGYOqumOSp27usm0BmyY5znZge5f5CPCxqdYhSbp4/A1kSZIxkCQZA0kSxkCShDGQJGEMJEkYA0kSxkCShDGQJGEMJEkYA0kSxkCShDGQJGEMJEkYA0kSxkCShDGQJGEMJEkYA0kSxkCShDGQJGEMJEnA3EEvQNJgLN3y00Ev4bLy6oOfHvQSZsRPBpIkYyBJMgaSJIyBJAljIEnCGEiSmGEMkrya5IUkB5KMtNnVSfYmOdx+zmvzJHk4yWiSg0lu6DjOhrb94SQbZvaWJEnn60J8MviXqlpeVSva4y3AvqoaBva1xwDrgOF22wg8CuPxALYCNwIrga1nAyJJ6o+LcZpoPbCj3d8B3Noxf6LGPQNclWQhsAbYW1Wnquo0sBdYexHWJUmaxExjUMC/JXk+ycY2W1BVJ9r914EF7f4i4GjHvsfabLK5JKlPZvrnKP65qo4n+Vtgb5L/6HyyqipJzfA1/k8LzkaAa6655kIdVpJmvRl9Mqiq4+3nSeDHjJ/zf6Od/qH9PNk2Pw4s6dh9cZtNNu/2etuqakVVrRgaGprJ0iVJHaYdgyR/neRvzt4HVgMvAruAs1cEbQCeavd3AXe2q4pWAW+100l7gNVJ5rUvjle3mSSpT2ZymmgB8OMkZ4/zr1X18yT7gSeT3A28BtzWtt8N3AKMAu8AdwFU1akk9wP723b3VdWpGaxLknSeph2DqjoC/FOX+ZvAzV3mBWya5Fjbge3TXYskaWb8DWRJkjGQJBkDSRLGQJKEMZAkYQwkSRgDSRLGQJKEMZAkYQwkSRgDSRLGQJKEMZAkYQwkSRgDSRLGQJKEMZAkYQwkSRgDSRLGQJKEMZAkYQwkSRgDSRLGQJKEMZAkYQwkSRgDSRLGQJKEMZAkYQwkSVxCMUiyNskrSUaTbBn0eiRpNrkkYpBkDvAIsA5YBtyRZNlgVyVJs8clEQNgJTBaVUeq6l1gJ7B+wGuSpFlj7qAX0CwCjnY8PgbcOHGjJBuBje3hfyd5pQ9rmw3mA78b9CKmkocGvQINiP8+L6y/7za8VGLQk6raBmwb9DouN0lGqmrFoNchdeO/z/64VE4THQeWdDxe3GaSpD64VGKwHxhOcm2SK4DbgV0DXpMkzRqXxGmiqjqTZDOwB5gDbK+qQwNe1mziqTddyvz32QepqkGvQZI0YJfKaSJJ0gAZA0mSMZAkXSJfIKu/kvwj47/hvaiNjgO7qurlwa1K0iD5yWCWSXIv43/uI8Bz7Rbge/6BQF3Kktw16DVczryaaJZJ8p/A9VX1PxPmVwCHqmp4MCuTzi3Jf1XVNYNex+XK00Szz5+AvwNemzBf2J6TBibJwcmeAhb0cy2zjTGYfe4B9iU5zJ//OOA1wHXA5oGtShq3AFgDnJ4wD/Dv/V/O7GEMZpmq+nmSf2D8z4Z3foG8v6reG9zKJAB+AlxZVQcmPpHkF/1fzuzhdwaSJK8mkiQZA0kSxkCShDGQJGEMJEnA/wL1r7beWkjocgAAAABJRU5ErkJggg==\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["train_data['label'].value_counts().plot(kind = 'bar')"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PVGO70-DgvW8","outputId":"3cdce48b-14bd-41aa-d5d9-fdc5669b6d10"},"outputs":[{"name":"stdout","output_type":"stream","text":["   label  count\n","0      0  26979\n","1      1   6491\n"]}],"source":["print(train_data.groupby('label').size().reset_index(name = 'count'))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"juEjPUCDhHSD","outputId":"1f74e750-ffa3-4154-d519-80d061e52c54"},"outputs":[{"name":"stdout","output_type":"stream","text":["False\n"]}],"source":["print(train_data.isnull().values.any())"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2UjKtN54hXyK","outputId":"ba06e307-a2de-4f99-a439-b528cbd7035f"},"outputs":[{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:2: FutureWarning: The default value of regex will change from True to False in a future version.\n","  \n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:3: FutureWarning: The default value of regex will change from True to False in a future version.\n","  This is separate from the ipykernel package so we can avoid doing imports until\n"]}],"source":["# 한글과 공백을 제외하고 모두 제거\n","train_data['사람문장1'] = train_data['사람문장1'].str.replace(\"[^ㄱ-ㅎㅏ-ㅣ가-힣 ]\",\"\")\n","train_data['사람문장2'] = train_data['사람문장2'].str.replace(\"[^ㄱ-ㅎㅏ-ㅣ가-힣 ]\",\"\")"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mrHOx7gRjrGU","outputId":"f8f3df43-96fc-44d7-ff39-0749563ccb81"},"outputs":[{"name":"stdout","output_type":"stream","text":["감정_대분류    0\n","감정_소분류    0\n","사람문장1     0\n","사람문장2     0\n","label     0\n","dtype: int64\n"]},{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:1: FutureWarning: The default value of regex will change from True to False in a future version.\n","  \"\"\"Entry point for launching an IPython kernel.\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:3: FutureWarning: The default value of regex will change from True to False in a future version.\n","  This is separate from the ipykernel package so we can avoid doing imports until\n"]}],"source":["train_data['사람문장1'] = train_data['사람문장1'].str.replace('^ +', \"\") # white space 데이터를 empty value로 변경\n","train_data['사람문장1'].replace('', np.nan, inplace=True)\n","train_data['사람문장2'] = train_data['사람문장2'].str.replace('^ +', \"\") # white space 데이터를 empty value로 변경\n","train_data['사람문장2'].replace('', np.nan, inplace=True)\n","\n","print(train_data.isnull().sum())"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":320},"id":"ou8DYYK6kPAu","outputId":"1d095d74-ba6a-4630-9d64-31a98fef1ead"},"outputs":[{"data":{"text/html":["\n","  <div id=\"df-9571ed9e-fb3e-474b-9c30-4958aad35b08\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>감정_대분류</th>\n","      <th>감정_소분류</th>\n","      <th>사람문장1</th>\n","      <th>사람문장2</th>\n","      <th>label</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>기쁨</td>\n","      <td>신이 난</td>\n","      <td>아내가 드디어 출산하게 되어서 정말 신이 나</td>\n","      <td>아 지금 정말 신이 나</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>불안</td>\n","      <td>스트레스 받는</td>\n","      <td>당뇨랑 합병증 때문에 먹어야 할 약이 열 가지가 넘어가니까 스트레스야</td>\n","      <td>건강할 때 관리 좀 잘할걸 하는 생각이 들더라고</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>기쁨</td>\n","      <td>신이 난</td>\n","      <td>재취업이 돼서 받게 된 첫 월급으로 온 가족이 외식을 할 예정이야 너무 행복해</td>\n","      <td>퇴직 후 다시는 돈을 못 벌 줄 알았는데 이렇게 월급으로 가족에게 맛있는 밥을 살 ...</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>기쁨</td>\n","      <td>안도</td>\n","      <td>빚을 드디어 다 갚게 되어서 이제야 안도감이 들어</td>\n","      <td>빚도 다 갚았으니 당분간은 아무 생각도 안 하며 살고 싶어</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>불안</td>\n","      <td>취약한</td>\n","      <td>이제 곧 은퇴할 시기가 되었어 내가 먼저 은퇴를 하고 육 개월 후에 남편도 은퇴를 ...</td>\n","      <td>둘이서 같이 뭘 해본 적이 없거든 앞으로 백 세시대라고 하는데 어떻게 지내야 할지 ...</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9571ed9e-fb3e-474b-9c30-4958aad35b08')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-9571ed9e-fb3e-474b-9c30-4958aad35b08 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-9571ed9e-fb3e-474b-9c30-4958aad35b08');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["  감정_대분류   감정_소분류                                              사람문장1  \\\n","0     기쁨     신이 난                           아내가 드디어 출산하게 되어서 정말 신이 나   \n","1     불안  스트레스 받는             당뇨랑 합병증 때문에 먹어야 할 약이 열 가지가 넘어가니까 스트레스야   \n","3     기쁨     신이 난        재취업이 돼서 받게 된 첫 월급으로 온 가족이 외식을 할 예정이야 너무 행복해   \n","4     기쁨       안도                        빚을 드디어 다 갚게 되어서 이제야 안도감이 들어   \n","5     불안      취약한  이제 곧 은퇴할 시기가 되었어 내가 먼저 은퇴를 하고 육 개월 후에 남편도 은퇴를 ...   \n","\n","                                               사람문장2  label  \n","0                                       아 지금 정말 신이 나      1  \n","1                         건강할 때 관리 좀 잘할걸 하는 생각이 들더라고      0  \n","3  퇴직 후 다시는 돈을 못 벌 줄 알았는데 이렇게 월급으로 가족에게 맛있는 밥을 살 ...      1  \n","4                   빚도 다 갚았으니 당분간은 아무 생각도 안 하며 살고 싶어      1  \n","5  둘이서 같이 뭘 해본 적이 없거든 앞으로 백 세시대라고 하는데 어떻게 지내야 할지 ...      0  "]},"execution_count":240,"metadata":{},"output_type":"execute_result"}],"source":["train_data[:5]"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bVEyYjU1hyou","outputId":"798913c6-365a-4129-eb9d-a1cfbf2a3f72"},"outputs":[{"name":"stdout","output_type":"stream","text":["감정_대분류    0\n","감정_소분류    0\n","사람문장1     0\n","사람문장2     0\n","label     0\n","dtype: int64\n"]},{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:1: FutureWarning: The default value of regex will change from True to False in a future version.\n","  \"\"\"Entry point for launching an IPython kernel.\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:3: FutureWarning: The default value of regex will change from True to False in a future version.\n","  This is separate from the ipykernel package so we can avoid doing imports until\n"]}],"source":["test_data['사람문장1'] = test_data['사람문장1'].str.replace('^ +', \"\") # white space 데이터를 empty value로 변경\n","test_data['사람문장1'].replace('', np.nan, inplace=True)\n","test_data['사람문장2'] = test_data['사람문장2'].str.replace('^ +', \"\") # white space 데이터를 empty value로 변경\n","test_data['사람문장2'].replace('', np.nan, inplace=True)\n","\n","print(train_data.isnull().sum())"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"T_rkDlUjiBR1"},"outputs":[],"source":["stopwords = ['의','가','이','은','들','는','좀','잘','걍','과','도','를','으로','자','에','와','한','하다','이']"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fKC1oFuEiDmN","outputId":"d0cfe090-a412-4517-8c69-9c2855d2a644"},"outputs":[{"data":{"text/plain":["['은행',\n"," '대출',\n"," '이',\n"," '막히다',\n"," '생활비',\n"," '를',\n"," '구',\n"," '하다',\n"," '수가',\n"," '없다',\n"," '이제',\n"," '어떻다',\n"," '살다',\n"," '하나',\n"," '막막하다']"]},"execution_count":243,"metadata":{},"output_type":"execute_result"}],"source":["okt = Okt()\n","okt.morphs('은행 대출이 막혀서 생활비를 구할 수가 없어 이제 어떻게 살아야 하나 막막해', stem = True)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rWhp2EM1iE1u","outputId":"db11c041-6e16-48db-aa7c-2dab6ca59499"},"outputs":[{"name":"stderr","output_type":"stream","text":["100%|██████████| 33470/33470 [01:07<00:00, 493.20it/s]\n"]}],"source":["X_train = []\n","for sentence in tqdm(train_data['사람문장1']):\n","    tokenized_sentence = okt.morphs(sentence, stem=True) # 토큰화\n","    stopwords_removed_sentence = [word for word in tokenized_sentence if not word in stopwords] # 불용어 제거\n","    X_train.append(stopwords_removed_sentence)\n","for sentence in tqdm(train_data['사람문장2']):\n","    tokenized_sentence = okt.morphs(sentence, stem=True) # 토큰화\n","    stopwords_removed_sentence = [word for word in tokenized_sentence if not word in stopwords] # 불용어 제거\n","    X_train.append(stopwords_removed_sentence)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ORZRwgXmkuW_","outputId":"047c182c-2d3c-443e-a947-d56bbafa7cd4"},"outputs":[{"name":"stderr","output_type":"stream","text":["100%|██████████| 5104/5104 [00:10<00:00, 464.03it/s]\n"]}],"source":["X_test = []\n","for sentence in tqdm(test_data['사람문장1']):\n","    tokenized_sentence = okt.morphs(sentence, stem=True) # 토큰화\n","    stopwords_removed_sentence = [word for word in tokenized_sentence if not word in stopwords] # 불용어 제거\n","    X_test.append(stopwords_removed_sentence)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ntY4qe4mlI4B","outputId":"49fdbc9d-8cc0-461a-a7d8-631a29a6bdad"},"outputs":[{"name":"stderr","output_type":"stream","text":["100%|██████████| 5104/5104 [00:11<00:00, 442.76it/s]\n"]}],"source":["\n","for sentence in tqdm(test_data['사람문장2']):\n","    tokenized_sentence = okt.morphs(sentence, stem=True) # 토큰화\n","    stopwords_removed_sentence = [word for word in tokenized_sentence if not word in stopwords] # 불용어 제거\n","    X_test.append(stopwords_removed_sentence)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"D7C5IQH-lKGD"},"outputs":[],"source":["tokenizer = Tokenizer()\n","tokenizer.fit_on_texts(X_train)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dp-HvvfTlMzw","outputId":"e173040e-ad5a-4a4f-9aed-6f4e78d62a90"},"outputs":[{"name":"stdout","output_type":"stream","text":["{'을': 1, '내': 2, '것': 3, '있다': 4, '나': 5, '같다': 6, '너무': 7, '없다': 8, '보다': 9, '친구': 10, '않다': 11, '안': 12, '되다': 13, '좋다': 14, '싶다': 15, '말': 16, '못': 17, '생각': 18, '이야': 19, '더': 20, '모르다': 21, '그렇다': 22, '만': 23, '사람': 24, '들다': 25, '응': 26, '수': 27, '게': 28, '자다': 29, '받다': 30, '나다': 31, '아니다': 32, '돈': 33, '어떻다': 34, '일': 35, '다': 36, '걱정': 37, '하고': 38, '정말': 39, '에게': 40, '많이': 41, '돼다': 42, '거': 43, '에서': 44, '힘들다': 45, '그': 46, '때': 47, '해': 48, '고': 49, '마음': 50, '한테': 51, '가다': 52, '야': 53, '맞다': 54, '로': 55, '많다': 56, '적': 57, '나르다': 58, '이제': 59, '먹다': 60, '기분': 61, '왜': 62, '고민': 63, '회사': 64, '라고': 65, '거야': 66, '인데': 67, '때문': 68, '해주다': 69, '아프다': 70, '지금': 71, '열심히': 72, '주다': 73, '다른': 74, '까지': 75, '아내': 76, '화가': 77, '나이': 78, '준비': 79, '시간': 80, '일이': 81, '슬프다': 82, '남편': 83, '걸': 84, '결혼': 85, '오다': 86, '알다': 87, '집': 88, '불안하다': 89, '우리': 90, '난': 91, '계속': 92, '가족': 93, '앞': 94, '이다': 95, '나오다': 96, '이렇게': 97, '공부': 98, '날': 99, '이렇다': 100, '인': 101, '부모님': 102, '건강': 103, '자식': 104, '자꾸': 105, '그래서': 106, '줄': 107, '아이': 108, '속상하다': 109, '같이': 110, '혼자': 111, '엄마': 112, '건': 113, '크다': 114, '랑': 115, '이번': 116, '에는': 117, '살다': 118, '몸': 119, '되어다': 120, '얘기': 121, '그냥': 122, '해보다': 123, '만나다': 124, '아무': 125, '다니다': 126, '서': 127, '아들': 128, '병원': 129, '내다': 130, '부터': 131, '아직': 132, '요즘': 133, '전': 134, '믿다': 135, '이야기': 136, '뭐': 137, '하나': 138, '중이': 139, '싫다': 140, '살': 141, '스트레스': 142, '기쁘다': 143, '자기': 144, '운동': 145, '연락': 146, '번': 147, '노후': 148, '취업': 149, '그래도': 150, '스럽다': 151, '업무': 152, '보고': 153, '생기다': 154, '걸다': 155, '알': 156, '에도': 157, '그렇게': 158, '항상': 159, '문제': 160, '지': 161, '직장': 162, '텐데': 163, '버리다': 164, '좋아하다': 165, '노력': 166, '대화': 167, '조금': 168, '건강하다': 169, '애': 170, '어렵다': 171, '선생님': 172, '상황': 173, '없이': 174, '딸': 175, '당하다': 176, '상처': 177, '짜증': 178, '지내다': 179, '학교': 180, '떨어지다': 181, '수가': 182, '우울하다': 183, '사실': 184, '성적': 185, '이라': 186, '위해': 187, '고맙다': 188, '하지만': 189, '다시': 190, '오늘': 191, '나가다': 192, '건지다': 193, '친하다': 194, '모으다': 195, '곳': 196, '생활': 197, '마다': 198, '니까': 199, '잘못': 200, '챙기다': 201, '그런데': 202, '그동안': 203, '아빠': 204, '면': 205, '죽다': 206, '라': 207, '쉬다': 208, '처럼': 209, '하': 210, '매일': 211, '힘드다': 212, '갑자기': 213, '정도': 214, '처음': 215, '대해': 216, '께': 217, '은퇴': 218, '이랑': 219, '무슨': 220, '두렵다': 221, '신경': 222, '해도': 223, '감': 224, '바쁘다': 225, '쓰다': 226, '먼저': 227, '이나': 228, '차다': 229, '시험': 230, '억울하다': 231, '도움': 232, '시키다': 233, '년': 234, '자신': 235, '눈물': 236, '도와주다': 237, '편하다': 238, '두다': 239, '이해': 240, '서로': 241, '어리다': 242, '걸리다': 243, '무섭다': 244, '예전': 245, '관리': 246, '치료': 247, '미안하다': 248, '보내다': 249, '병': 250, '이유': 251, '얼마나': 252, '빨리': 253, '갈다': 254, '데': 255, '싸우다': 256, '주변': 257, '또': 258, '꼭': 259, '모습': 260, '이라도': 261, '자주': 262, '무시': 263, '상사': 264, '행복하다': 265, '평소': 266, '배신': 267, '님': 268, '느낌': 269, '듣다': 270, '보이다': 271, '다행': 272, '근데': 273, '젊다': 274, '몇': 275, '남': 276, '라도': 277, '비': 278, '직원': 279, '화': 280, '답답하다': 281, '가지': 282, '술': 283, '달라': 284, '키우다': 285, '괴롭다': 286, '나쁘다': 287, '후회': 288, '모두': 289, '괴롭히다': 290, '써다': 291, '고생': 292, '좋아지다': 293, '밖에': 294, '시작': 295, '함께': 296, '말다': 297, '나서다': 298, '아주': 299, '기도': 300, '남자친구': 301, '하니': 302, '수도': 303, '결과': 304, '볼': 305, '괜찮다': 306, '건데': 307, '동료': 308, '실수': 309, '내일': 310, '여행': 311, '방법': 312, '지다': 313, '팀': 314, '밥': 315, '이지': 316, '뭘': 317, '물어보다': 318, '이르다': 319, '면접': 320, '진짜': 321, '찾다': 322, '엔': 323, '감사하다': 324, '다음': 325, '동생': 326, '막막하다': 327, '필요하다': 328, '대학': 329, '후': 330, '얼마': 331, '여자': 332, '남다': 333, '오래': 334, '선물': 335, '일도': 336, '젠': 337, '제대로': 338, '느껴지다': 339, '인지': 340, '세상': 341, '들어가다': 342, '언제': 343, '원하다': 344, '느끼다': 345, '남자': 346, '이상': 347, '늦다': 348, '점점': 349, '부족하다': 350, '제일': 351, '중요하다': 352, '이라고': 353, '무엇': 354, '매번': 355, '해결': 356, '놀다': 357, '그게': 358, '뿐': 359, '만들다': 360, '관심': 361, '어떡하다': 362, '약': 363, '아무래도': 364, '사이': 365, '모든': 366, '네': 367, '수술': 368, '빌리다': 369, '행동': 370, '힘': 371, '코로나': 372, '별로': 373, '새롭다': 374, '심하다': 375, '하루': 376, '떠나다': 377, '전화': 378, '감정': 379, '여자친구': 380, '벌다': 381, '투자': 382, '들어서다': 383, '벌써': 384, '연애': 385, '중': 386, '늘': 387, '기다리다': 388, '관계': 389, '오랜': 390, '충격': 391, '오르다': 392, '실망': 393, '진로': 394, '당연하다': 395, '보': 396, '의사': 397, '거지': 398, '동안': 399, '으로도': 400, '인생': 401, '사랑': 402, '음식': 403, '거들다': 404, '가장': 405, '편안하다': 406, '상태': 407, '늙다': 408, '준': 409, '둘': 410, '자금': 411, '들어오다': 412, '귀찮다': 413, '이고': 414, '따돌림': 415, '얼굴': 416, '뒤': 417, '약속': 418, '당황': 419, '언니': 420, '대한': 421, '아무리': 422, '전혀': 423, '서운하다': 424, '반': 425, '불편하다': 426, '놓다': 427, '분': 428, '그만두다': 429, '쓸다': 430, '솔직하다': 431, '알아보다': 432, '손': 433, '주': 434, '달': 435, '재정': 436, '간': 437, '뭐라다': 438, '두': 439, '대로': 440, '만큼': 441, '어쩔': 442, '눈치': 443, '여유': 444, '적다': 445, '사과': 446, '저': 447, '늘다': 448, '어제': 449, '아직도': 450, '평생': 451, '사': 452, '혹시': 453, '계획': 454, '크게': 455, '질투': 456, '라는': 457, '사다': 458, '지치다': 459, '승진': 460, '질환': 461, '잔소리': 462, '싫어하다': 463, '가기': 464, '원': 465, '지만': 466, '라서': 467, '화나다': 468, '으로는': 469, '드리다': 470, '성격': 471, '일단': 472, '당장': 473, '어디': 474, '높다': 475, '프로젝트': 476, '누구': 477, '에서는': 478, '이혼': 479, '소리': 480, '갚다': 481, '위': 482, '즐겁다': 483, '합격': 484, '든': 485, '괜히': 486, '상담': 487, '갖다': 488, '용돈': 489, '지원': 490, '희생': 491, '없어지다': 492, '나누다': 493, '꿈': 494, '선배': 495, '오해': 496, '구': 497, '여러': 498, '바람': 499, '나아지다': 500, '맡다': 501, '옆': 502, '경제': 503, '거짓말': 504, '암': 505, '머리': 506, '꾸준하다': 507, '퇴근': 508, '원래': 509, '당': 510, '야근': 511, '끝나다': 512, '의견': 513, '능력': 514, '월급': 515, '주식': 516, '혼란': 517, '혼나다': 518, '빠지다': 519, '조심스럽다': 520, '바로': 521, '동기': 522, '포기': 523, '서럽다': 524, '아': 525, '낳다': 526, '처리': 527, '주말': 528, '피곤하다': 529, '맛있다': 530, '사고': 531, '사업': 532, '가게': 533, '온': 534, '엄청': 535, '초조하다': 536, '그걸': 537, '대다': 538, '성': 539, '삶': 540, '보기': 541, '인정': 542, '들어주다': 543, '씩': 544, '그것': 545, '사정': 546, '결국': 547, '치다': 548, '끊다': 549, '끼리': 550, '대': 551, '부담': 552, '뭔가': 553, '자리': 554, '인사': 555, '곧': 556, '비교': 557, '그리고': 558, '구역질': 559, '넘다': 560, '부분': 561, '스스로': 562, '덕분': 563, '사장': 564, '집중': 565, '명': 566, '척': 567, '가난하다': 568, '미리': 569, '기': 570, '신뢰': 571, '사귀다': 572, '말씀드리다': 573, '걔': 574, '이라는': 575, '모임': 576, '배우다': 577, '가지다': 578, '참다': 579, '실망하다': 580, '이미': 581, '학원': 582, '여서': 583, '부서': 584, '본인': 585, '가보다': 586, '속': 587, '다행하다': 588, '욕': 589, '회의': 590, '그때': 591, '주지': 592, '돌아가다': 593, '따르다': 594, '어쩌지': 595, '하라': 596, '예쁘다': 597, '가야': 598, '성가시다': 599, '기억': 600, '아기': 601, '서다': 602, '할머니': 603, '옷': 604, '이상하다': 605, '점': 606, '쉬': 607, '점수': 608, '편이': 609, '작다': 610, '아끼다': 611, '생일': 612, '막상': 613, '형편': 614, '눈': 615, '방': 616, '한다는': 617, '많아지다': 618, '거절': 619, '바꾸다': 620, '생기': 621, '멀어지다': 622, '니': 623, '저번': 624, '부모': 625, '친해지다': 626, '위로': 627, '의지': 628, '저축': 629, '부장': 630, '에서도': 631, '피우다': 632, '유지': 633, '따돌리다': 634, '심해지다': 635, '정신': 636, '땐': 637, '일만': 638, '오랫동안': 639, '지키다': 640, '입사': 641, '형': 642, '가면': 643, '노': 644, '나중': 645, '아침': 646, '맨날': 647, '열': 648, '최근': 649, '출근': 650, '손자': 651, '검사': 652, '재산': 653, '풀다': 654, '신나다': 655, '담배': 656, '다르다': 657, '자신감': 658, '에만': 659, '한데': 660, '취직': 661, '더욱': 662, '가끔': 663, '기회': 664, '놀라다': 665, '잃다': 666, '며칠': 667, '께서': 668, '맞추다': 669, '헤어지다': 670, '출산': 671, '겠다': 672, '보이': 673, '물건': 674, '연금': 675, '직접': 676, '당뇨': 677, '퇴직': 678, '입다': 679, '짜증나다': 680, '편': 681, '이기다': 682, '보험': 683, '세': 684, '글쎄': 685, '피해': 686, '빼다': 687, '거의': 688, '김': 689, '현실': 690, '에게도': 691, '쓰이다': 692, '말씀': 693, '부부': 694, '자고': 695, '올리다': 696, '일찍': 697, '직업': 698, '몰래': 699, '분위기': 700, '좌절': 701, '기다': 702, '이라서': 703, '런가': 704, '수업': 705, '해봤다': 706, '그만': 707, '나름': 708, '잖다': 709, '빚': 710, '오히려': 711, '이지만': 712, '살아오다': 713, '급하다': 714, '어느': 715, '진행': 716, '어울리다': 717, '한번': 718, '표현': 719, '제': 720, '긴장': 721, '비싸다': 722, '다치다': 723, '큰일': 724, '칭찬': 725, '노인': 726, '통': 727, '버려진': 728, '결정': 729, '입원': 730, '신고': 731, '환멸': 732, '생활비': 733, '그러니까': 734, '집안': 735, '부럽다': 736, '잠': 737, '누가': 738, '누나': 739, '때리다': 740, '찾아보다': 741, '집안일': 742, '느긋하다': 743, '보다는': 744, '변하다': 745, '해오다': 746, '안되다': 747, '성공하다': 748, '대출': 749, '분명': 750, '외롭다': 751, '이네': 752, '발표': 753, '일어나다': 754, '만족스럽다': 755, '오': 756, '체력': 757, '부탁': 758, '당혹스럽다': 759, '죽음': 760, '드': 761, '씨': 762, '한두': 763, '특별하다': 764, '기대하다': 765, '말고': 766, '피하': 767, '미래': 768, '해고': 769, '정': 770, '기대': 771, '력': 772, '일부러': 773, '선택': 774, '소문': 775, '주위': 776, '마비': 777, '아버지': 778, '뻔하다': 779, '등': 780, '취미': 781, '등산': 782, '짐': 783, '의미': 784, '누군가': 785, '삼': 786, '울다': 787, '허리': 788, '가정': 789, '살아가다': 790, '즐기다': 791, '반대': 792, '끝': 793, '낼': 794, '태도': 795, '차': 796, '산': 797, '자녀': 798, '차라리': 799, '인가': 800, '사라지다': 801, '장님': 802, '소중하다': 803, '얻다': 804, '일자리': 805, '정리': 806, '째': 807, '돌보다': 808, '이후': 809, '우선': 810, '덜': 811, '잡다': 812, '예민하다': 813, '소식': 814, '어머니': 815, '매우': 816, '다투다': 817, '혈압': 818, '금방': 819, '지인': 820, '사주다': 821, '여기': 822, '만날': 823, '끄다': 824, '허무하다': 825, '거리': 826, '밤': 827, '결혼식': 828, '들이다': 829, '올해': 830, '식': 831, '임신': 832, '찾아오다': 833, '털다': 834, '풀리다': 835, '탓': 836, '붙다': 837, '해내다': 838, '죽': 839, '배': 840, '확인': 841, '뜨다': 842, '다가오다': 843, '영': 844, '대하': 845, '애가': 846, '도대체': 847, '연봉': 848, '다녀오다': 849, '수입': 850, '요새': 851, '통해': 852, '수치': 853, '동네': 854, '따다': 855, '건가': 856, '미치다': 857, '드디어': 858, '십': 859, '지나다': 860, '잊다': 861, '완전': 862, '로는': 863, '바뀌다': 864, '저녁': 865, '괴롭힘': 866, '질문': 867, '막': 868, '식사': 869, '줄이다': 870, '효과': 871, '웃다': 872, '이대로': 873, '속이다': 874, '치고': 875, '나빠지다': 876, '돌리다': 877, '화도': 878, '비슷하다': 879, '심지어': 880, '별': 881, '고립': 882, '전부': 883, '훨씬': 884, '경험': 885, '안정': 886, '자격증': 887, '이직': 888, '상': 889, '관련': 890, '뿌듯하다': 891, '넣다': 892, '미루다': 893, '사기': 894, '진심': 895, '강요': 896, '보답': 897, '불다': 898, '나니': 899, '후배': 900, '오빠': 901, '성과': 902, '고치다': 903, '순간': 904, '졸업': 905, '게임': 906, '흥분': 907, '떨리다': 908, '아무렇다': 909, '상대': 910, '쯤': 911, '대학교': 912, '의욕': 913, '섭섭하다': 914, '시기': 915, '팀원': 916, '마련': 917, '물': 918, '진지하다': 919, '엄청나다': 920, '알아주다': 921, '필요': 922, '기간': 923, '한심하다': 924, '이어서': 925, '이사': 926, '경우': 927, '반복': 928, '고등학교': 929, '사소하다': 930, '취급': 931, '어': 932, '쪽': 933, '보지': 934, '걱정스럽다': 935, '꽤': 936, '회식': 937, '보람': 938, '화해': 939, '부담스럽다': 940, '낮다': 941, '애인': 942, '응원': 943, '살이': 944, '겪다': 945, '신입': 946, '대인관계': 947, '가해자': 948, '치매': 949, '조언': 950, '믿음': 951, '여기저기': 952, '조용하다': 953, '조심하다': 954, '자랑': 955, '똑같다': 956, '상의': 957, '휴가': 958, '외로워': 959, '축하': 960, '아깝다': 961, '과장': 962, '충분하다': 963, '아쉽다': 964, '설명': 965, '자체': 966, '확실하다': 967, '돌아오다': 968, '벗어나다': 969, '일주일': 970, '대답': 971, '이루다': 972, '만의': 973, '무릎': 974, '시': 975, '하루하루': 976, '버티다': 977, '새': 978, '물론': 979, '배려': 980, '특히': 981, '마음대로': 982, '쓰러지다': 983, '분명하다': 984, '길': 985, '한마디': 986, '따로': 987, '넘기다': 988, '무척': 989, '비다': 990, '바라다': 991, '비통하다': 992, '며느리': 993, '미우다': 994, '학생': 995, '고혈압': 996, '잠도': 997, '실적': 998, '사회': 999, '건강검진': 1000, '손해': 1001, '래': 1002, '지나가다': 1003, '폭력': 1004, '최선': 1005, '조절': 1006, '곳도': 1007, '커지다': 1008, '학교폭력': 1009, '노래': 1010, '신': 1011, '그렇다고': 1012, '타다': 1013, '의심': 1014, '친절하다': 1015, '그리다': 1016, '퇴사': 1017, '개': 1018, '적성': 1019, '까지는': 1020, '마치': 1021, '부정': 1022, '이러다가': 1023, '어이': 1024, '가깝다': 1025, '종일': 1026, '게다가': 1027, '외': 1028, '벌': 1029, '스럽게': 1030, '퇴직금': 1031, '커서': 1032, '이라니': 1033, '검진': 1034, '가슴': 1035, '대신': 1036, '맡기다': 1037, '적금': 1038, '부터라도': 1039, '청소': 1040, '거기': 1041, '하자': 1042, '요청': 1043, '과의': 1044, '태어나다': 1045, '작년': 1046, '려고': 1047, '조차': 1048, '전화하다': 1049, '반응': 1050, '마시다': 1051, '만이': 1052, '아예': 1053, '든든하다': 1054, '입장': 1055, '우울증': 1056, '실패하다': 1057, '서류': 1058, '그렇지만': 1059, '넘어가다': 1060, '혼내다': 1061, '살기': 1062, '꺼내다': 1063, '아르바이트': 1064, '살리다': 1065, '재밌다': 1066, '상대방': 1067, '문': 1068, '낫다': 1069, '산책': 1070, '관': 1071, '재미있다': 1072, '전공': 1073, '잡히다': 1074, '시절': 1075, '가입': 1076, '무조건': 1077, '맘': 1078, '풀': 1079, '사진': 1080, '에게는': 1081, '내용': 1082, '마지막': 1083, '책': 1084, '생각나다': 1085, '망하다': 1086, '비용': 1087, '간다': 1088, '일해': 1089, '멀리': 1090, '저렇게': 1091, '원망': 1092, '막히다': 1093, '니깐': 1094, '어디서': 1095, '견디다': 1096, '식단': 1097, '불만': 1098, '험담': 1099, '테': 1100, '채': 1101, '사춘기': 1102, '보여주다': 1103, '정보': 1104, '궁금하다': 1105, '지도': 1106, '다시다': 1107, '착하다': 1108, '평가': 1109, '세우다': 1110, '장난': 1111, '이니': 1112, '조금씩': 1113, '어쩌면': 1114, '놀리다': 1115, '에게만': 1116, '부르다': 1117, '지경': 1118, '짓': 1119, '소개': 1120, '사람과': 1121, '내년': 1122, '답': 1123, '사용': 1124, '대체': 1125, '만난': 1126, '활동': 1127, '빠르다': 1128, '앉다': 1129, '값': 1130, '경력': 1131, '올라가다': 1132, '가만히': 1133, '달라지다': 1134, '역시': 1135, '지르다': 1136, '절대': 1137, '영화': 1138, '얘': 1139, '복잡하다': 1140, '너무하다': 1141, '이십': 1142, '이대': 1143, '악의': 1144, '다가가다': 1145, '옆집': 1146, '가버리다': 1147, '읽다': 1148, '일로': 1149, '이전': 1150, '찾아가다': 1151, '받아들이다': 1152, '겁': 1153, '굳다': 1154, '잘해주다': 1155, '용기': 1156, '라면': 1157, '양제': 1158, '습관': 1159, '그녀': 1160, '참고': 1161, '가르치다': 1162, '딱하다': 1163, '왕따': 1164, '육아': 1165, '커피': 1166, '차리다': 1167, '차이': 1168, '잃어버리다': 1169, '무리': 1170, '갱년기': 1171, '남지': 1172, '밀리다': 1173, '오지': 1174, '싸움': 1175, '취약': 1176, '세월': 1177, '데이트': 1178, '끝내다': 1179, '일인': 1180, '보고서': 1181, '공': 1182, '그러면': 1183, '거래': 1184, '아파트': 1185, '겨우': 1186, '절망': 1187, '한편': 1188, '어차피': 1189, '자료': 1190, '이니까': 1191, '약하다': 1192, '소홀하다': 1193, '백': 1194, '부동산': 1195, '핸드폰': 1196, '전학': 1197, '당한': 1198, '옮기다': 1199, '인정받다': 1200, '집다': 1201, '언젠가': 1202, '얼른': 1203, '울': 1204, '진단': 1205, '자존심': 1206, '곁': 1207, '개인': 1208, '손주': 1209, '소외': 1210, '뺏다': 1211, '조급하다': 1212, '아이디어': 1213, '책임': 1214, '친척': 1215, '교육': 1216, '완치': 1217, '뽑다': 1218, '죄송하다': 1219, '듯': 1220, '계약': 1221, '숙제': 1222, '초라하다': 1223, '가져가다': 1224, '감다': 1225, '안달': 1226, '부리다': 1227, '줄어들다': 1228, '첫': 1229, '갑작스럽다': 1230, '분야': 1231, '싫어지다': 1232, '박': 1233, '잠깐': 1234, '밖': 1235, '지는': 1236, '날다': 1237, '놈': 1238, '실제': 1239, '부끄럽다': 1240, '옛날': 1241, '쌓이다': 1242, '이면': 1243, '요구': 1244, '똑같이': 1245, '망치다': 1246, '그랬는데': 1247, '설득': 1248, '대비': 1249, '거나': 1250, '입': 1251, '은근': 1252, '바보': 1253, '기적': 1254, '저러다': 1255, '인하다': 1256, '기르다': 1257, '장사': 1258, '묻다': 1259, '드니': 1260, '이건': 1261, '과제': 1262, '비밀': 1263, '여기다': 1264, '지난번': 1265, '듣기': 1266, '악화': 1267, '금액': 1268, '써주다': 1269, '푼': 1270, '움직이다': 1271, '그니까': 1272, '유산': 1273, '어찌': 1274, '마무리': 1275, '회복': 1276, '어려워지다': 1277, '무리하다': 1278, '정작': 1279, '장': 1280, '자존감': 1281, '각자': 1282, '쉽다': 1283, '딱': 1284, '넉넉하다': 1285, '가볍다': 1286, '근무': 1287, '녀석': 1288, '적극': 1289, '계시다': 1290, '지출': 1291, '무언가': 1292, '눕다': 1293, '고마움': 1294, '말로': 1295, '안도': 1296, '안타깝다': 1297, '해달라다': 1298, '모양': 1299, '뒷바라지': 1300, '가능하다': 1301, '기대다': 1302, '쌓다': 1303, '컴퓨터': 1304, '쓸쓸하다': 1305, '긍정': 1306, '깊다': 1307, '냄새': 1308, '이래': 1309, '곤란하다': 1310, '문자': 1311, '화장실': 1312, '심각하다': 1313, '퇴원': 1314, '불쌍하다': 1315, '통화': 1316, '참여': 1317, '학업': 1318, '적응하다': 1319, '통장': 1320, '내야': 1321, '초기': 1322, '안심': 1323, '여태': 1324, '밉다': 1325, '이름': 1326, '후회되다': 1327, '통보': 1328, '어색하다': 1329, '정확하다': 1330, '연습': 1331, '설레다': 1332, '스러운': 1333, '진학': 1334, '최고': 1335, '롭고': 1336, '최대한': 1337, '경찰': 1338, '완전하다': 1339, '깨다': 1340, '소용없다': 1341, '간섭': 1342, '마저': 1343, '신랑': 1344, '이용': 1345, '뛰다': 1346, '감당': 1347, '사원': 1348, '아마': 1349, '심정': 1350, '내려가다': 1351, '운전': 1352, '단': 1353, '떨다': 1354, '프로그램': 1355, '라니': 1356, '줄다': 1357, '처지다': 1358, '재미': 1359, '금전': 1360, '도저히': 1361, '탈락': 1362, '히': 1363, '선': 1364, '급여': 1365, '벌리다': 1366, '무기': 1367, '치': 1368, '추억': 1369, '들키다': 1370, '쳐다보다': 1371, '집도': 1372, '순': 1373, '모': 1374, '다리': 1375, '지지': 1376, '바라보다': 1377, '적도': 1378, '요양원': 1379, '꾸다': 1380, '시도': 1381, '그대로': 1382, '표정': 1383, '일상': 1384, '추천': 1385, '해드리다': 1386, '함부로': 1387, '비참하다': 1388, '체중': 1389, '걷다': 1390, '보상': 1391, '상상': 1392, '가격': 1393, '손님': 1394, '목표': 1395, '떠오르다': 1396, '만성': 1397, '달다': 1398, '헤어지자': 1399, '기운': 1400, '구해': 1401, '정상': 1402, '일등': 1403, '허락': 1404, '훔치다': 1405, '마주치다': 1406, '부하': 1407, '실력': 1408, '놓치다': 1409, '남아': 1410, '여': 1411, '이란': 1412, '핑계': 1413, '증상': 1414, '감기': 1415, '천천히': 1416, '예상': 1417, '잦다': 1418, '고백': 1419, '끊기다': 1420, '영어': 1421, '관절염': 1422, '멀쩡하다': 1423, '말다툼': 1424, '소용': 1425, '냐': 1426, '피': 1427, '지병': 1428, '재촉': 1429, '숨': 1430, '도전': 1431, '과연': 1432, '든지': 1433, '만약': 1434, '자연': 1435, '여전하다': 1436, '유학': 1437, '창피하다': 1438, '월세': 1439, '한숨': 1440, '조심': 1441, '굉장하다': 1442, '은행': 1443, '대부분': 1444, '어떻': 1445, '그만큼': 1446, '틀리다': 1447, '멈추다': 1448, '개월': 1449, '자꾸만': 1450, '정년': 1451, '오십': 1452, '운': 1453, '기업': 1454, '요리': 1455, '굳이': 1456, '되게': 1457, '시선': 1458, '삼십': 1459, '당당하다': 1460, '매출': 1461, '찍다': 1462, '직': 1463, '만만하다': 1464, '걷기': 1465, '대놓고': 1466, '잡고': 1467, '군데': 1468, '제출': 1469, '시댁': 1470, '시어머니': 1471, '그건': 1472, '전달': 1473, '앓다': 1474, '차별': 1475, '내내': 1476, '길이': 1477, '고통': 1478, '영업': 1479, '전환': 1480, '또래': 1481, '책임지다': 1482, '분노': 1483, '과정': 1484, '숨기다': 1485, '과도': 1486, '지시': 1487, '찌다': 1488, '보이지': 1489, '마스크': 1490, '늘어나다': 1491, '낫': 1492, '야하다': 1493, '동호회': 1494, '대상': 1495, '언': 1496, '권유': 1497, '암치료': 1498, '닮다': 1499, '방어': 1500, '자세하다': 1501, '욕심': 1502, '나라': 1503, '정말로': 1504, '유명하다': 1505, '의문': 1506, '금연': 1507, '편지': 1508, '걔네': 1509, '식이': 1510, '작성': 1511, '주기': 1512, '쭉': 1513, '질병': 1514, '보다도': 1515, '인터넷': 1516, '다이어트': 1517, '업': 1518, '처벌': 1519, '팔': 1520, '상하': 1521, '위험하다': 1522, '부터는': 1523, '취소': 1524, '과목': 1525, '예의': 1526, '외모': 1527, '날아가다': 1528, '이만': 1529, '당분간': 1530, '성실하다': 1531, '물다': 1532, '안좋다': 1533, '공감': 1534, '성공': 1535, '와의': 1536, '대회': 1537, '손녀': 1538, '교수': 1539, '며': 1540, '전하': 1541, '매': 1542, '확': 1543, '항': 1544, '멀다': 1545, '심부름': 1546, '어이없다': 1547, '여유롭다': 1548, '서글프다': 1549, '가까워지다': 1550, '음악': 1551, '내면': 1552, '해외': 1553, '소개팅': 1554, '수학': 1555, '억지로': 1556, '중간': 1557, '가난': 1558, '모자라다': 1559, '복지': 1560, '소': 1561, '짜다': 1562, '환경': 1563, '인간': 1564, '최종': 1565, '치우다': 1566, '모이다': 1567, '이력서': 1568, '저런': 1569, '채다': 1570, '종종': 1571, '만에': 1572, '제안': 1573, '수익': 1574, '버릇': 1575, '지나치다': 1576, '대기업': 1577, '그만하다': 1578, '완벽하다': 1579, '회복하다': 1580, '경기': 1581, '예정': 1582, '멋지다': 1583, '황당하다': 1584, '극복': 1585, '너무나': 1586, '내기': 1587, '지켜보다': 1588, '가까이': 1589, '와도': 1590, '엉망': 1591, '무량': 1592, '조': 1593, '보태': 1594, '별거': 1595, '간호': 1596, '로라': 1597, '양보': 1598, '발': 1599, '지적': 1600, '나타나다': 1601, '방해': 1602, '내리다': 1603, '듯이': 1604, '마냥': 1605, '신체': 1606, '시대': 1607, '시골': 1608, '수다': 1609, '뭔': 1610, '그저': 1611, '의도': 1612, '짧다': 1613, '따뜻하다': 1614, '일방': 1615, '까지도': 1616, '시끄럽다': 1617, '적응': 1618, '존재': 1619, '펀드': 1620, '덜다': 1621, '면서': 1622, '먹고살다': 1623, '조건': 1624, '기본': 1625, '양': 1626, '처지': 1627, '변화': 1628, '집값': 1629, '겁나다': 1630, '병문안': 1631, '진정': 1632, '외출': 1633, '끼치다': 1634, '독립': 1635, '지겹다': 1636, '워낙': 1637, '하래': 1638, '과거': 1639, '나기': 1640, '열다': 1641, '물리다': 1642, '주시': 1643, '식구': 1644, '심해': 1645, '늦어지다': 1646, '난리': 1647, '도통': 1648, '새다': 1649, '잊어버리다': 1650, '감동': 1651, '주로': 1652, '잘리다': 1653, '생': 1654, '달리': 1655, '집사람': 1656, '어찌나': 1657, '약해지다': 1658, '위축': 1659, '고객': 1660, '대리': 1661, '장이': 1662, '채우다': 1663, '괘씸하다': 1664, '경쟁': 1665, '질': 1666, '환자': 1667, '육십': 1668, '티': 1669, '화목': 1670, '온종일': 1671, '영향': 1672, '무너지다': 1673, '심장': 1674, '과외': 1675, '사람인': 1676, '동아리': 1677, '사서': 1678, '차갑다': 1679, '부당하다': 1680, '지갑': 1681, '꺼리다': 1682, '할아버지': 1683, '존중': 1684, '맛': 1685, '이기도': 1686, '놀': 1687, '반찬': 1688, '중년': 1689, '기계': 1690, '자전거': 1691, '길어지다': 1692, '지각': 1693, '먹기': 1694, '돌려주다': 1695, '버': 1696, '내지': 1697, '간호사': 1698, '명절': 1699, '가도': 1700, '속마음': 1701, '신입사원': 1702, '생계': 1703, '말기': 1704, '외식': 1705, '싸다': 1706, '파티': 1707, '피해자': 1708, '기술': 1709, '땅': 1710, '끼': 1711, '행복': 1712, '길다': 1713, '에겐': 1714, '감사': 1715, '약간': 1716, '권': 1717, '비도': 1718, '옳다': 1719, '대충': 1720, '터': 1721, '거래처': 1722, '다정하다': 1723, '귀': 1724, '드릴': 1725, '불우하다': 1726, '하고는': 1727, '영감': 1728, '래야': 1729, '어서': 1730, '노년': 1731, '덕': 1732, '현재': 1733, '로만': 1734, '한참': 1735, '한동안': 1736, '서도': 1737, '카페': 1738, '신청': 1739, '불합격': 1740, '철저하다': 1741, '낳을': 1742, '내버리다': 1743, '학교생활': 1744, '지역': 1745, '와이프': 1746, '꼼꼼하다': 1747, '반갑다': 1748, '그거': 1749, '보단': 1750, '부쩍': 1751, '법': 1752, '물어': 1753, '떠나가다': 1754, '한순간': 1755, '푹': 1756, '발견': 1757, '속도': 1758, '다가': 1759, '근처': 1760, '시장': 1761, '역겹다': 1762, '적당하다': 1763, '자라다': 1764, '관절': 1765, '공무원': 1766, '친': 1767, '두려움': 1768, '쓸모없다': 1769, '새벽': 1770, '도망가다': 1771, '군대': 1772, '산다': 1773, '심': 1774, '하늘': 1775, '낙담하다': 1776, '판단': 1777, '에선': 1778, '원인': 1779, '안부': 1780, '왠지': 1781, '인간관계': 1782, '기한': 1783, '격려': 1784, '카드': 1785, '치료받다': 1786, '교통사고': 1787, '무사하다': 1788, '와는': 1789, '데도': 1790, '치밀다': 1791, '무뚝뚝하다': 1792, '만을': 1793, '어쩌나': 1794, '씁쓸하다': 1795, '번은': 1796, '용서': 1797, '술자리': 1798, '별일': 1799, '담임': 1800, '지방': 1801, '단체': 1802, '뻔': 1803, '밝다': 1804, '그림': 1805, '기침': 1806, '데리다': 1807, '흘리다': 1808, '비웃다': 1809, '나하': 1810, '장소': 1811, '기특하다': 1812, '어쩌다': 1813, '지난': 1814, '주의': 1815, '방문': 1816, '만으로도': 1817, '실감': 1818, '짝': 1819, '혼': 1820, '그립다': 1821, '과는': 1822, '갈수록': 1823, '하필': 1824, '펴다': 1825, '당첨': 1826, '차도': 1827, '날리다': 1828, '정이': 1829, '대우': 1830, '자랑스럽다': 1831, '강아지': 1832, '뉴스': 1833, '참석': 1834, '진급': 1835, '불': 1836, '세금': 1837, '말리다': 1838, '터지다': 1839, '탈': 1840, '가로': 1841, '이러니까': 1842, '학과': 1843, '소통': 1844, '마찬가지': 1845, '꿈꾸다': 1846, '폐암': 1847, '끼다': 1848, '다양하다': 1849, '목': 1850, '디스크': 1851, '내주다': 1852, '이틀': 1853, '로서': 1854, '서울': 1855, '흐르다': 1856, '쇼핑': 1857, '확신': 1858, '처방': 1859, '가방': 1860, '으론': 1861, '사사건건': 1862, '희망': 1863, '사수': 1864, '기쁨': 1865, '칠': 1866, '육': 1867, '사무실': 1868, '숨다': 1869, '원금': 1870, '고르다': 1871, '주사': 1872, '재능': 1873, '으로만': 1874, '금': 1875, '홀가분하다': 1876, '수능': 1877, '원서': 1878, '목소리': 1879, '잘나다': 1880, '공원': 1881, '고통스럽다': 1882, '후련하다': 1883, '이런저런': 1884, '분들': 1885, '딸아이': 1886, '치르다': 1887, '진료': 1888, '꼴': 1889, '넉': 1890, '고기': 1891, '환갑': 1892, '유독': 1893, '자유': 1894, '식품': 1895, '불공평하다': 1896, '꽃': 1897, '좁다': 1898, '막다': 1899, '지속': 1900, '수고': 1901, '효율': 1902, '보통': 1903, '망가지다': 1904, '망설이다': 1905, '천식': 1906, '스럽지': 1907, '형제': 1908, '복수': 1909, '식다': 1910, '전문': 1911, '무겁다': 1912, '철': 1913, '버스': 1914, '인기': 1915, '찾기': 1916, '까먹다': 1917, '위암': 1918, '방식': 1919, '뜻': 1920, '소심하다': 1921, '전체': 1922, '심심하다': 1923, '한결': 1924, '시각': 1925, '동창': 1926, '센터': 1927, '상품': 1928, '압박': 1929, '그나마': 1930, '목돈': 1931, '돕다': 1932, '너': 1933, '대표': 1934, '눈빛': 1935, '상관': 1936, '탈모': 1937, '일상생활': 1938, '별것': 1939, '희망이': 1940, '올라서다': 1941, '보라': 1942, '다섯': 1943, '오래되다': 1944, '사회생활': 1945, '따라가다': 1946, '일과': 1947, '병행': 1948, '놓이다': 1949, '친정': 1950, '장례식': 1951, '멍하다': 1952, '관계도': 1953, '피부': 1954, '강하다': 1955, '식당': 1956, '고집': 1957, '증거': 1958, '번째': 1959, '맞벌이': 1960, '어려움': 1961, '느리다': 1962, '잘살다': 1963, '외면': 1964, '버겁다': 1965, '날짜': 1966, '일정': 1967, '나머지': 1968, '스펙': 1969, '달이': 1970, '요': 1971, '염려': 1972, '난감하다': 1973, '고작': 1974, '만족하다': 1975, '보너스': 1976, '만큼은': 1977, '이해해': 1978, '더욱더': 1979, '이쁘다': 1980, '대처': 1981, '바': 1982, '명예퇴직': 1983, '타': 1984, '사려': 1985, '담당': 1986, '직무': 1987, '바치다': 1988, '날씨': 1989, '텔레비전': 1990, '보증': 1991, '사지': 1992, '어른': 1993, '운영': 1994, '연': 1995, '언제나': 1996, '온몸': 1997, '랑은': 1998, '기사': 1999, '다해': 2000, '근': 2001, '절약': 2002, '가라': 2003, '예약': 2004, '이기': 2005, '의논': 2006, '합병증': 2007, '차례': 2008, '참견': 2009, '허탈하다': 2010, '미워하다': 2011, '이제야': 2012, '이자': 2013, '병들다': 2014, '잠시': 2015, '높아지다': 2016, '숨기': 2017, '대들다': 2018, '효도': 2019, '낮아지다': 2020, '힘내다': 2021, '등록금': 2022, '존경': 2023, '핀잔': 2024, '간단하다': 2025, '제주도': 2026, '말투': 2027, '마감': 2028, '말실수': 2029, '진작': 2030, '대가': 2031, '착각': 2032, '화만': 2033, '도무지': 2034, '바르다': 2035, '판정': 2036, '살림': 2037, '나가야': 2038, '대단하다': 2039, '이웃': 2040, '대책': 2041, '역할': 2042, '슬슬': 2043, '외로움': 2044, '풀이': 2045, '말고는': 2046, '부': 2047, '죄책감': 2048, '복': 2049, '안쓰럽다': 2050, '타고': 2051, '발령': 2052, '주가': 2053, '막내': 2054, '남겨지다': 2055, '교육비': 2056, '여유도': 2057, '취향': 2058, '체': 2059, '더하다': 2060, '책임감': 2061, '상해': 2062, '헌신': 2063, '수정': 2064, '딸도': 2065, '한잔': 2066, '자괴': 2067, '병간호': 2068, '폐': 2069, '매사': 2070, '실': 2071, '입학': 2072, '대접': 2073, '기울이다': 2074, '주눅': 2075, '스타일': 2076, '뒤통수': 2077, '세대': 2078, '자르다': 2079, '부자': 2080, '단순하다': 2081, '지긋지긋하다': 2082, '으로의': 2083, '혜택': 2084, '창업': 2085, '돌아보다': 2086, '눈앞': 2087, '치가': 2088, '세다': 2089, '까지만': 2090, '유일하다': 2091, '신세': 2092, '피다': 2093, '소원': 2094, '출신': 2095, '국민연금': 2096, '넘치다': 2097, '예순': 2098, '당뇨병': 2099, '뜻대로': 2100, '돌아다니다': 2101, '음': 2102, '따지다': 2103, '전보': 2104, '개선': 2105, '재택근무': 2106, '허전하다': 2107, '흥미': 2108, '불행하다': 2109, '주더': 2110, '엄두': 2111, '자유롭다': 2112, '내색': 2113, '차려': 2114, '신기하다': 2115, '익숙하다': 2116, '매달': 2117, '명도': 2118, '최': 2119, '건물': 2120, '쓰기': 2121, '떨치다': 2122, '장기': 2123, '이끌다': 2124, '불이익': 2125, '트집': 2126, '헬스장': 2127, '재': 2128, '외국': 2129, '원만하다': 2130, '체육': 2131, '도둑': 2132, '닫다': 2133, '잘해야': 2134, '해주시': 2135, '구매': 2136, '이동': 2137, '뛰어나다': 2138, '마디': 2139, '데려오다': 2140, '글': 2141, '로운': 2142, '만으로': 2143, '워': 2144, '대견하다': 2145, '고등학생': 2146, '맺다': 2147, '몰다': 2148, '이별': 2149, '조만간': 2150, '징계': 2151, '웃음': 2152, '가져오다': 2153, '낯': 2154, '엊그제': 2155, '겉': 2156, '인상': 2157, '불쾌하다': 2158, '티브이': 2159, '낙': 2160, '거품': 2161, '애정': 2162, '해주': 2163, '발생': 2164, '가뜩이나': 2165, '저지르다': 2166, '척도': 2167, '에스': 2168, '잘생기다': 2169, '노릇': 2170, '지루하다': 2171, '모자라': 2172, '오라': 2173, '관해': 2174, '주니': 2175, '앞날': 2176, '한계': 2177, '기획': 2178, '해외여행': 2179, '독감': 2180, '계산': 2181, '중학교': 2182, '먹이다': 2183, '책상': 2184, '헷갈리다': 2185, '반장': 2186, '라고는': 2187, '장애': 2188, '명품': 2189, '남기다': 2190, '멋대로': 2191, '아등바등': 2192, '등급': 2193, '잔뜩': 2194, '쓴다': 2195, '시비': 2196, '쏟다': 2197, '부질없다': 2198, '통과': 2199, '뒤지다': 2200, '학점': 2201, '추가': 2202, '점심': 2203, '시부모': 2204, '기력': 2205, '빠듯해': 2206, '버려지다': 2207, '간식': 2208, '마주': 2209, '채용': 2210, '갈등': 2211, '실패': 2212, '전형': 2213, '매주': 2214, '타격': 2215, '출장': 2216, '그땐': 2217, '직장인': 2218, '선뜻': 2219, '대응': 2220, '성인': 2221, '부딪히다': 2222, '마누라': 2223, '도박': 2224, '벌이': 2225, '가리다': 2226, '기존': 2227, '게임기': 2228, '끔찍하다': 2229, '소화': 2230, '하고만': 2231, '으로서': 2232, '수준': 2233, '상관없다': 2234, '없애다': 2235, '인원': 2236, '학기': 2237, '뼈': 2238, '휴직': 2239, '부인': 2240, '어깨': 2241, '사이좋다': 2242, '캄캄하다': 2243, '체크': 2244, '농담': 2245, '생기지': 2246, '넘어서다': 2247, '알리': 2248, '공간': 2249, '해지': 2250, '주인': 2251, '계단': 2252, '고과': 2253, '간의': 2254, '대인': 2255, '따름': 2256, '현장': 2257, '한시름': 2258, '군': 2259, '행사': 2260, '고향': 2261, '연차': 2262, '부러워하다': 2263, '휴대폰': 2264, '피로': 2265, '전해': 2266, '드라마': 2267, '깨': 2268, '입맛': 2269, '간암': 2270, '예': 2271, '주장': 2272, '보채다': 2273, '이식': 2274, '도착': 2275, '회장': 2276, '머릿속': 2277, '민망하다': 2278, '사건': 2279, '까다롭다': 2280, '사내': 2281, '도망': 2282, '정해': 2283, '고장': 2284, '배우자': 2285, '구박': 2286, '내신': 2287, '항암': 2288, '공평하다': 2289, '수익률': 2290, '방학': 2291, '차마': 2292, '이든': 2293, '붙이다': 2294, '몰리다': 2295, '깎다': 2296, '안다': 2297, '마르다': 2298, '급식': 2299, '에서만': 2300, '팔다': 2301, '제도': 2302, '학벌': 2303, '일부': 2304, '만기': 2305, '의식': 2306, '내시': 2307, '러더': 2308, '비상': 2309, '상한': 2310, '공기': 2311, '콜레스테롤': 2312, '거고': 2313, '무작정': 2314, '보험금': 2315, '접근': 2316, '메뉴': 2317, '스마트폰': 2318, '기초': 2319, '리': 2320, '외톨이': 2321, '자살': 2322, '이익': 2323, '작업': 2324, '허망': 2325, '복용': 2326, '전문가': 2327, '우연히': 2328, '반성': 2329, '잔': 2330, '학창': 2331, '신경질': 2332, '되찾다': 2333, '수당': 2334, '재발': 2335, '빼': 2336, '에다': 2337, '연기': 2338, '수습': 2339, '단절': 2340, '하든': 2341, '별다르다': 2342, '쟤': 2343, '성적표': 2344, '지장': 2345, '벅차다': 2346, '휴식': 2347, '바닥': 2348, '얄밉다': 2349, '설거지': 2350, '동': 2351, '신발': 2352, '인연': 2353, '낯설다': 2354, '파다': 2355, '꼬박꼬박': 2356, '프러포즈': 2357, '늦잠': 2358, '치킨': 2359, '간질': 2360, '그이': 2361, '늘리다': 2362, '안전하다': 2363, '방향': 2364, '앞두다': 2365, '만남': 2366, '낙하산': 2367, '아이돌': 2368, '광고': 2369, '가져다주다': 2370, '횟수': 2371, '경로당': 2372, '지하철': 2373, '꽉': 2374, '동성애자': 2375, '일어나지': 2376, '사항': 2377, '여태껏': 2378, '그럭저럭': 2379, '움직': 2380, '깜빡': 2381, '이래서': 2382, '초등학교': 2383, '나오니': 2384, '퍼센트': 2385, '에라도': 2386, '다툼': 2387, '낮': 2388, '잘만': 2389, '둥': 2390, '간이': 2391, '아시': 2392, '성향': 2393, '일거리': 2394, '나은': 2395, '가수': 2396, '누락': 2397, '놀림': 2398, '무례하다': 2399, '어둡다': 2400, '일일이': 2401, '컨디션': 2402, '가치': 2403, '애쓰다': 2404, '체계': 2405, '얘길': 2406, '발전': 2407, '노래방': 2408, '적어도': 2409, '지난주': 2410, '소비': 2411, '인계': 2412, '조카': 2413, '학비': 2414, '정해진': 2415, '출금': 2416, '과를': 2417, '매달리다': 2418, '달래다': 2419, '리더': 2420, '연예인': 2421, '돌이키다': 2422, '공유': 2423, '빼놓다': 2424, '윗': 2425, '자제': 2426, '재수': 2427, '매년': 2428, '하루아침': 2429, '에서의': 2430, '신중하다': 2431, '작': 2432, '내심': 2433, '급': 2434, '열정': 2435, '정시': 2436, '임': 2437, '안나': 2438, '혼수': 2439, '활용': 2440, '마을': 2441, '고려': 2442, '큰소리': 2443, '삶다': 2444, '코': 2445, '짓다': 2446, '실직': 2447, '쓸모': 2448, '들리다': 2449, '교실': 2450, '혹': 2451, '불법': 2452, '마흔': 2453, '배달': 2454, '영영': 2455, '던지다': 2456, '어지럽다': 2457, '서른': 2458, '라네': 2459, '무능력하다': 2460, '주어지다': 2461, '제발': 2462, '정정': 2463, '막연하다': 2464, '야단': 2465, '진정하다': 2466, '경쟁률': 2467, '전날': 2468, '학년': 2469, '애지중지': 2470, '보살피다': 2471, '퉁': 2472, '마땅하다': 2473, '푸다': 2474, '사태': 2475, '은커녕': 2476, '주문': 2477, '흥분하다': 2478, '기념': 2479, '살날': 2480, '사르다': 2481, '툭하면': 2482, '만족': 2483, '외우다': 2484, '어머님': 2485, '유행': 2486, '만은': 2487, '고소하다': 2488, '직급': 2489, '대출받다': 2490, '넓다': 2491, '구체': 2492, '고정': 2493, '뿐이다': 2494, '영상': 2495, '쉰': 2496, '불안감': 2497, '열리다': 2498, '일어나서': 2499, '중소기업': 2500, '부도': 2501, '건드리다': 2502, '투병': 2503, '규칙': 2504, '떠들다': 2505, '누군지': 2506, '말썽': 2507, '다기': 2508, '코지': 2509, '입시': 2510, '평범하다': 2511, '다그치다': 2512, '오른': 2513, '여생': 2514, '빌다': 2515, '조깅': 2516, '백수': 2517, '자마자': 2518, '집착': 2519, '곤': 2520, '높이다': 2521, '가득하다': 2522, '뱃살': 2523, '정성': 2524, '보험료': 2525, '끌다': 2526, '놀이': 2527, '살갑': 2528, '비혼': 2529, '구조조정': 2530, '보장': 2531, '대고': 2532, '골': 2533, '대학생': 2534, '재테크': 2535, '메신저': 2536, '축복': 2537, '아야': 2538, '뜸': 2539, '기구': 2540, '만치': 2541, '오후': 2542, '국어': 2543, '더듬다': 2544, '영원하다': 2545, '꾸미다': 2546, '재혼': 2547, '깜깜': 2548, '죄송스럽다': 2549, '강도': 2550, '러시': 2551, '연인': 2552, '기념일': 2553, '깜짝': 2554, '금리': 2555, '충': 2556, '이리': 2557, '청춘': 2558, '전과': 2559, '배다': 2560, '비결': 2561, '등록': 2562, '주거': 2563, '넘어지다': 2564, '살라': 2565, '깨어나다': 2566, '보험사': 2567, '확률': 2568, '마음먹다': 2569, '초대': 2570, '겹': 2571, '만하': 2572, '라지': 2573, '손실': 2574, '무관심하다': 2575, '뵙다': 2576, '결혼기념일': 2577, '참담하다': 2578, '토': 2579, '낭비하다': 2580, '기껏': 2581, '장가': 2582, '귀가': 2583, '반영': 2584, '처': 2585, '결심': 2586, '이러니': 2587, '온갖': 2588, '무': 2589, '무거워': 2590, '자산': 2591, '안정감': 2592, '조마조마하다': 2593, '서툴다': 2594, '직속': 2595, '시달리다': 2596, '앞서다': 2597, '차분하다': 2598, '귀엽다': 2599, '한약': 2600, '제때': 2601, '둘이서': 2602, '슬픔': 2603, '발목': 2604, '씻다': 2605, '그간': 2606, '현금': 2607, '카톡': 2608, '조직': 2609, '목격': 2610, '맘대로': 2611, '단지': 2612, '마라톤': 2613, '펑펑': 2614, '조바심': 2615, '설마': 2616, '농사': 2617, '정밀': 2618, '미술': 2619, '차장': 2620, '하고도': 2621, '자세': 2622, '똑바로': 2623, '아버님': 2624, '몹시': 2625, '청': 2626, '인맥': 2627, '하소연': 2628, '몫': 2629, '첫째': 2630, '까진': 2631, '에서야': 2632, '수군거리다': 2633, '익숙해지다': 2634, '남동생': 2635, '이랑은': 2636, '여성': 2637, '주체': 2638, '벌어지다': 2639, '간병인': 2640, '시원하다': 2641, '여쭈다': 2642, '끼우다': 2643, '불평': 2644, '도중': 2645, '가벼워지다': 2646, '노산': 2647, '적어지다': 2648, '인제': 2649, '생명': 2650, '해소': 2651, '미팅': 2652, '분담': 2653, '강제': 2654, '불면증': 2655, '취하': 2656, '식이요법': 2657, '꾸리다': 2658, '이어지다': 2659, '사기꾼': 2660, '통증': 2661, '담다': 2662, '부다': 2663, '내시경': 2664, '괜': 2665, '보복': 2666, '의존': 2667, '역': 2668, '부족': 2669, '대서': 2670, '후유증': 2671, '태산': 2672, '개념': 2673, '인수': 2674, '올라오다': 2675, '서두르다': 2676, '나나': 2677, '낭비': 2678, '수영': 2679, '경': 2680, '면목': 2681, '거짓': 2682, '쓰레기': 2683, '한쪽': 2684, '원망하다': 2685, '충고': 2686, '비만': 2687, '건망증': 2688, '밀다': 2689, '한국': 2690, '결실': 2691, '튼튼하다': 2692, '거동': 2693, '들뜨다': 2694, '맞이': 2695, '골프': 2696, '늙은이': 2697, '면담': 2698, '고가': 2699, '고개': 2700, '피아노': 2701, '불구': 2702, '성장하다': 2703, '장만': 2704, '민폐': 2705, '독서': 2706, '수발': 2707, '주도': 2708, '냉장고': 2709, '교류': 2710, '암담하다': 2711, '반말': 2712, '화낼': 2713, '예산': 2714, '정규직': 2715, '찢어지다': 2716, '소음': 2717, '돌다': 2718, '호전': 2719, '종양': 2720, '더럽다': 2721, '홀로': 2722, '사촌': 2723, '레스토랑': 2724, '협상': 2725, '자연스럽다': 2726, '베풀다': 2727, '분해': 2728, '따라다니다': 2729, '평일': 2730, '벌이다': 2731, '마치다': 2732, '갇히다': 2733, '극적': 2734, '조사': 2735, '뵈다': 2736, '어쩜': 2737, '망정': 2738, '주제': 2739, '불안': 2740, '오래전': 2741, '불가능하다': 2742, '약도': 2743, '반드시': 2744, '취해': 2745, '구조': 2746, '업체': 2747, '조원': 2748, '비염': 2749, '증세': 2750, '꾸중': 2751, '에게서': 2752, '봄': 2753, '청년': 2754, '따라오다': 2755, '초반': 2756, '투정': 2757, '동시': 2758, '추다': 2759, '빵': 2760, '기만': 2761, '초': 2762, '형님': 2763, '물가': 2764, '권하다': 2765, '종류': 2766, '구직': 2767, '알바': 2768, '접다': 2769, '아줌마': 2770, '저금': 2771, '로또': 2772, '착실하다': 2773, '해나': 2774, '땀': 2775, '쓸데없다': 2776, '착잡하다': 2777, '선정': 2778, '요리사': 2779, '석': 2780, '흔하다': 2781, '여자애': 2782, '사랑받다': 2783, '최소한': 2784, '꽃다발': 2785, '커닝': 2786, '거부': 2787, '학폭위': 2788, '밤새': 2789, '양반': 2790, '친정엄마': 2791, '내정자': 2792, '닥치다': 2793, '제한': 2794, '각방': 2795, '온라인': 2796, '이제껏': 2797, '한지': 2798, '라며': 2799, '저렇다': 2800, '시력': 2801, '퍼트': 2802, '려': 2803, '턱': 2804, '십년': 2805, '데려가다': 2806, '체육대회': 2807, '수만': 2808, '양가': 2809, '엄': 2810, '거란': 2811, '조차도': 2812, '동반': 2813, '흔쾌하다': 2814, '정부': 2815, '취득': 2816, '졸라': 2817, '승진도': 2818, '위치': 2819, '상승': 2820, '거슬리다': 2821, '거울': 2822, '잔치': 2823, '끼어들다': 2824, '주어': 2825, '무능하다': 2826, '수학여행': 2827, '계': 2828, '모로': 2829, '음식점': 2830, '의심스럽다': 2831, '주신': 2832, '는커녕': 2833, '줍다': 2834, '모시': 2835, '단어': 2836, '고의': 2837, '발휘': 2838, '연락처': 2839, '지우다': 2840, '이라고는': 2841, '애교': 2842, '깨끗하다': 2843, '인턴': 2844, '살짝': 2845, '심리': 2846, '연극': 2847, '벗다': 2848, '지금껏': 2849, '고모': 2850, '악담': 2851, '이득': 2852, '건의': 2853, '보수': 2854, '쑤시다': 2855, '점심시간': 2856, '절실': 2857, '스무': 2858, '그랬더니': 2859, '척척': 2860, '마': 2861, '측': 2862, '전세': 2863, '순서': 2864, '퇴학': 2865, '표시': 2866, '협박': 2867, '음주': 2868, '파악': 2869, '키': 2870, '제공': 2871, '담당자': 2872, '개발': 2873, '낯선': 2874, '배우': 2875, '환멸감': 2876, '공지': 2877, '치면': 2878, '부양': 2879, '여가': 2880, '심란하다': 2881, '반기다': 2882, '정기': 2883, '단점': 2884, '양육': 2885, '지난달': 2886, '그날': 2887, '숙이다': 2888, '변명': 2889, '반항': 2890, '중인': 2891, '오기': 2892, '로부터': 2893, '돈독하다': 2894, '우린': 2895, '또한': 2896, '전전긍긍': 2897, '사적': 2898, '죄': 2899, '상위': 2900, '노트': 2901, '작가': 2902, '젊은이': 2903, '양심': 2904, '고독': 2905, '화분': 2906, '파혼': 2907, '차서': 2908, '수행평가': 2909, '오해해': 2910, '타고나다': 2911, '의치': 2912, '고지혈증': 2913, '위기': 2914, '지기': 2915, '내미다': 2916, '달리다': 2917, '의료': 2918, '섬': 2919, '지급': 2920, '시설': 2921, '표': 2922, '보호자': 2923, '배드민턴': 2924, '알리다': 2925, '으로가': 2926, '이며': 2927, '백신': 2928, '폭행': 2929, '경쟁자': 2930, '댄스': 2931, '답변': 2932, '고치': 2933, '착용': 2934, '흉': 2935, '달래': 2936, '편애': 2937, '소득': 2938, '말르다': 2939, '깨지다': 2940, '다만': 2941, '대학원': 2942, '무심하다': 2943, '저조하다': 2944, '더군다나': 2945, '일으키다': 2946, '학자금': 2947, '미련': 2948, '밝히다': 2949, '사망': 2950, '안해': 2951, '께서는': 2952, '잠그다': 2953, '노동': 2954, '심다': 2955, '돼지': 2956, '위협': 2957, '쓰리다': 2958, '빼앗다': 2959, '안중': 2960, '대기': 2961, '애매하다': 2962, '누': 2963, '판매': 2964, '사느랗다': 2965, '접촉': 2966, '자동차': 2967, '감추다': 2968, '한텐': 2969, '비우다': 2970, '다루다': 2971, '심사': 2972, '포함': 2973, '조율': 2974, '말리': 2975, '올려주다': 2976, '계기': 2977, '설계': 2978, '임플란트': 2979, '뜯다': 2980, '덧': 2981, '말고도': 2982, '외도': 2983, '무급': 2984, '때로는': 2985, '건네다': 2986, '메시지': 2987, '변경': 2988, '싹': 2989, '지나': 2990, '번거롭다': 2991, '빈': 2992, '죽이다': 2993, '곡': 2994, '요양': 2995, '야속하다': 2996, '변호사': 2997, '만이라도': 2998, '예방': 2999, '단짝': 3000, '썩': 3001, '타인': 3002, '도시': 3003, '향': 3004, '여든': 3005, '냥': 3006, '스터디': 3007, '달리기': 3008, '물이': 3009, '아부': 3010, '힘쓰다': 3011, '주부': 3012, '지옥': 3013, '예비': 3014, '명의': 3015, '진자': 3016, '에너지': 3017, '성도': 3018, '동의': 3019, '평균': 3020, '내려놓다': 3021, '봉사': 3022, '잔병치레': 3023, '녹내장': 3024, '출퇴근': 3025, '장거리': 3026, '안주': 3027, '이성': 3028, '이미지': 3029, '펼치다': 3030, '차질': 3031, '부업': 3032, '명문': 3033, '란': 3034, '주민': 3035, '활': 3036, '래서': 3037, '동창회': 3038, '간만': 3039, '폐지': 3040, '합의': 3041, '잡': 3042, '한정': 3043, '이벤트': 3044, '사위': 3045, '잔고': 3046, '답장': 3047, '노트북': 3048, '재료': 3049, '전반': 3050, '야간': 3051, '따라잡다': 3052, '장학금': 3053, '여럿': 3054, '추석': 3055, '거치다': 3056, '총각': 3057, '한평생': 3058, '얼떨떨하다': 3059, '붙잡다': 3060, '임원': 3061, '위주': 3062, '흘러가다': 3063, '장례': 3064, '제품': 3065, '켜다': 3066, '진절머리': 3067, '기미': 3068, '집주인': 3069, '의자': 3070, '쌀쌀': 3071, '출발': 3072, '어느새다': 3073, '능률': 3074, '명상': 3075, '장난감': 3076, '주도하다': 3077, '천만': 3078, '흡연': 3079, '알아듣다': 3080, '되돌리다': 3081, '목숨': 3082, '어떠하다': 3083, '여직원': 3084, '정책': 3085, '진실': 3086, '라니까': 3087, '손대다': 3088, '놔두다': 3089, '충당': 3090, '세계': 3091, '치기': 3092, '비위': 3093, '텃세': 3094, '복권': 3095, '월요일': 3096, '내려오다': 3097, '발뺌': 3098, '시스템': 3099, '층': 3100, '제자': 3101, '응급실': 3102, '신혼여행': 3103, '전원주택': 3104, '질리다': 3105, '닦달': 3106, '살아나다': 3107, '서글퍼지다': 3108, '안내': 3109, '에다가': 3110, '여력': 3111, '랄': 3112, '어딜': 3113, '노름': 3114, '관심사': 3115, '분하다': 3116, '매력': 3117, '어쩌겠어': 3118, '하루빨리': 3119, '손가락': 3120, '취': 3121, '보더': 3122, '성형': 3123, '부러지다': 3124, '혈당': 3125, '영양': 3126, '인걸': 3127, '품': 3128, '골다공증': 3129, '정리해고': 3130, '살펴보다': 3131, '주름': 3132, '틀니': 3133, '미국': 3134, '보호': 3135, '주택': 3136, '전이': 3137, '대장': 3138, '졸이다': 3139, '놀란': 3140, '유': 3141, '자취': 3142, '연장': 3143, '덥다': 3144, '번번이': 3145, '조치': 3146, '결핵': 3147, '노리다': 3148, '감량': 3149, '그룹': 3150, '사치': 3151, '중심': 3152, '모욕': 3153, '돌아서다': 3154, '조정': 3155, '흐름': 3156, '빠듯한데': 3157, '상당하다': 3158, '여윳돈': 3159, '임금': 3160, '트라우마': 3161, '시집': 3162, '가사': 3163, '직종': 3164, '안고': 3165, '단호': 3166, '사표': 3167, '디자인': 3168, '적지': 3169, '인재': 3170, '어기다': 3171, '가치관': 3172, '업다': 3173, '증': 3174, '중간고사': 3175, '바이러스': 3176, '울면': 3177, '공모전': 3178, '윗사람': 3179, '쑥스럽다': 3180, '자부': 3181, '뚱뚱하다': 3182, '밀리': 3183, '대수롭다': 3184, '귀농': 3185, '애도': 3186, '차지': 3187, '웃기다': 3188, '위험': 3189, '헤치다': 3190, '회원': 3191, '오늘이': 3192, '밑': 3193, '유능하다': 3194, '국내': 3195, '공격': 3196, '소모': 3197, '감각': 3198, '드라이브': 3199, '올': 3200, '커플': 3201, '반려견': 3202, '어디가': 3203, '고해': 3204, '작아지다': 3205, '잡일': 3206, '필기': 3207, '참가': 3208, '텅': 3209, '에야': 3210, '차이다': 3211, '희다': 3212, '시한': 3213, '선호': 3214, '룸메이트': 3215, '지고': 3216, '골치': 3217, '접': 3218, '파일': 3219, '재미없다': 3220, '잘나가다': 3221, '섣불리': 3222, '나야': 3223, '이참': 3224, '크기': 3225, '생색': 3226, '휴학': 3227, '떠올리다': 3228, '부지런하다': 3229, '나누기': 3230, '일지': 3231, '법도': 3232, '띄다': 3233, '처가': 3234, '목적': 3235, '문득': 3236, '뒤늦다': 3237, '소름': 3238, '찍': 3239, '케이크': 3240, '한시': 3241, '대면': 3242, '큰아들': 3243, '다짜고짜': 3244, '서먹해지다': 3245, '막무가내': 3246, '다짐': 3247, '판': 3248, '셈': 3249, '밤낮없이': 3250, '모이': 3251, '갖추다': 3252, '떼': 3253, '여러가지': 3254, '겨를': 3255, '모의고사': 3256, '학습': 3257, '와중': 3258, '에서부터': 3259, '나날': 3260, '무료': 3261, '두기': 3262, '나라고': 3263, '직설': 3264, '평온하다': 3265, '삼다': 3266, '틈': 3267, '회피': 3268, '굽다': 3269, '청혼': 3270, '기말고사': 3271, '적용': 3272, '두통': 3273, '들여다보다': 3274, '함': 3275, '언성': 3276, '주제가': 3277, '머리카락': 3278, '연세': 3279, '엉뚱하다': 3280, '안마': 3281, '경제력': 3282, '약물': 3283, '방치': 3284, '순위': 3285, '초등학생': 3286, '법적': 3287, '막말': 3288, '떼다': 3289, '까지의': 3290, '효자': 3291, '구석': 3292, '성급하다': 3293, '하객': 3294, '마침': 3295, '개다': 3296, '벽': 3297, '나약하다': 3298, '채팅': 3299, '알아채다': 3300, '가장이': 3301, '그치다': 3302, '헛된': 3303, '현상': 3304, '과로': 3305, '폭': 3306, '따끔하다': 3307, '몇몇': 3308, '장점': 3309, '아픔': 3310, '토막': 3311, '업계': 3312, '틈틈이': 3313, '어딘가': 3314, '동참': 3315, '일요일': 3316, '시더': 3317, '나아': 3318, '불륜': 3319, '카네이션': 3320, '어르신': 3321, '필수': 3322, '멋있다': 3323, '유전': 3324, '외국어': 3325, '욕설': 3326, '사생활': 3327, '삼촌': 3328, '어딨다': 3329, '노화': 3330, '염증': 3331, '인력': 3332, '노예': 3333, '풍족하다': 3334, '덮다': 3335, '알람': 3336, '중학생': 3337, '근사하다': 3338, '타박': 3339, '되풀이': 3340, '유리하다': 3341, '밤새다': 3342, '확정': 3343, '태': 3344, '종목': 3345, '쐬다': 3346, '투석': 3347, '공채': 3348, '하곤': 3349, '겨울': 3350, '오가다': 3351, '단단하다': 3352, '유럽': 3353, '재활': 3354, '팔이': 3355, '용품': 3356, '투성이': 3357, '구역': 3358, '검색': 3359, '화장': 3360, '감소': 3361, '위원회': 3362, '월': 3363, '우리나라': 3364, '문서': 3365, '틀다': 3366, '버티고': 3367, '동갑': 3368, '호의': 3369, '여름': 3370, '박히다': 3371, '오니': 3372, '맵다': 3373, '기계로': 3374, '해치다': 3375, '새삼': 3376, '게으르다': 3377, '스치다': 3378, '잠들다': 3379, '그다지': 3380, '맑다': 3381, '무얼': 3382, '갑갑하다': 3383, '이상은': 3384, '가다가': 3385, '관념': 3386, '마케팅': 3387, '찍히다': 3388, '씌우다': 3389, '누명': 3390, '자책': 3391, '문화': 3392, '맥주': 3393, '토익': 3394, '데리': 3395, '울리다': 3396, '마음껏': 3397, '납품': 3398, '끊어지다': 3399, '범인': 3400, '활발하다': 3401, '근육': 3402, '쫓아내다': 3403, '늘어놓다': 3404, '간절하다': 3405, '자상하다': 3406, '주고받다': 3407, '바깥': 3408, '가짜': 3409, '마당': 3410, '틀': 3411, '서운해하다': 3412, '달려오다': 3413, '톡': 3414, '상심': 3415, '축의금': 3416, '십만': 3417, '해대': 3418, '외부': 3419, '똑똑하다': 3420, '환불': 3421, '택시': 3422, '현': 3423, '어젯밤': 3424, '조르다': 3425, '전염병': 3426, '인성': 3427, '밤늦다': 3428, '민원': 3429, '틀어지다': 3430, '여행지': 3431, '일구다': 3432, '사별': 3433, '고급': 3434, '육체': 3435, '들려오다': 3436, '사주면': 3437, '유튜브': 3438, '치이다': 3439, '전념': 3440, '권고사직': 3441, '몇십': 3442, '좀처럼': 3443, '복지관': 3444, '가망': 3445, '문과': 3446, '하락': 3447, '한창': 3448, '데뷔': 3449, '어째': 3450, '일일': 3451, '차고': 3452, '병상': 3453, '꾹': 3454, '허덕이다': 3455, '고프다': 3456, '꼴다': 3457, '나이라': 3458, '저혈압': 3459, '당하': 3460, '방송': 3461, '인슐린': 3462, '누굴': 3463, '음성': 3464, '샤워': 3465, '유난히': 3466, '도시락': 3467, '해당': 3468, '지원이': 3469, '후의': 3470, '백만': 3471, '닿다': 3472, '꼴등': 3473, '춥다': 3474, '쓰레기통': 3475, '수록': 3476, '자극': 3477, '무의미하다': 3478, '반지': 3479, '생전': 3480, '어중간하다': 3481, '불행': 3482, '난처하다': 3483, '우정': 3484, '신장': 3485, '훈련': 3486, '작고': 3487, '신부': 3488, '사보다': 3489, '감염': 3490, '알레르기': 3491, '망': 3492, '대도': 3493, '우울': 3494, '자부심': 3495, '괜스레': 3496, '상식': 3497, '무력하다': 3498, '부어': 3499, '치명': 3500, '얼': 3501, '어쩌려': 3502, '넘겨주다': 3503, '심장마비': 3504, '만해': 3505, '덕이': 3506, '가보': 3507, '결재': 3508, '퍼지다': 3509, '정중하다': 3510, '사라': 3511, '이겠다': 3512, '자신만만하다': 3513, '덩달아': 3514, '인지도': 3515, '울적하다': 3516, '졸업식': 3517, '억': 3518, '상환': 3519, '다름없다': 3520, '육십이': 3521, '확장': 3522, '프로': 3523, '도울': 3524, '조그마하다': 3525, '꼬투리': 3526, '오전': 3527, '핵심': 3528, '증명': 3529, '잔액': 3530, '횡령': 3531, '서서': 3532, '칠십': 3533, '낙담': 3534, '왜냐면': 3535, '걘': 3536, '모시다': 3537, '량': 3538, '수면': 3539, '교회': 3540, '짝사랑': 3541, '앞서': 3542, '밀려오다': 3543, '가르다': 3544, '체험': 3545, '난폭하다': 3546, '던데': 3547, '토요일': 3548, '상금': 3549, '롭': 3550, '알뜰하다': 3551, '섞이다': 3552, '자리다': 3553, '훌쩍': 3554, '헛살았': 3555, '미혼': 3556, '훌륭하다': 3557, '항의': 3558, '독촉': 3559, '이래도': 3560, '봉사활동': 3561, '인스타그램': 3562, '이나마': 3563, '감시': 3564, '여섯': 3565, '인신공격': 3566, '바닷가': 3567, '당시': 3568, '독': 3569, '웃': 3570, '대상자': 3571, '야구': 3572, '새우다': 3573, '인공': 3574, '논': 3575, '시원섭섭하다': 3576, '완성': 3577, '지구': 3578, '려니': 3579, '쏙': 3580, '보약': 3581, '유방암': 3582, '심각해지다': 3583, '분장': 3584, '뒷': 3585, '담': 3586, '권태기': 3587, '기준': 3588, '앞길': 3589, '동업': 3590, '러닝머신': 3591, '방금': 3592, '장마': 3593, '비리': 3594, '근래': 3595, '구르다': 3596, '우기다': 3597, '위독하다': 3598, '첫날': 3599, '고역': 3600, '야채': 3601, '긁다': 3602, '째다': 3603, '모델': 3604, '공통': 3605, '숫자': 3606, '최신': 3607, '존댓말': 3608, '단순': 3609, '쫓겨나다': 3610, '부리고': 3611, '보탬': 3612, '코드': 3613, '운명': 3614, '괴로움': 3615, '헤매다': 3616, '종교': 3617, '휘': 3618, '죄다': 3619, '밤낮': 3620, '먹듯': 3621, '액수': 3622, '진통': 3623, '웃기': 3624, '응급': 3625, '빼먹다': 3626, '차근차근': 3627, '다소': 3628, '마트': 3629, '인형': 3630, '떡': 3631, '라곤': 3632, '둘째': 3633, '실행': 3634, '대판': 3635, '울컥': 3636, '사주지': 3637, '지식': 3638, '성별': 3639, '평상시': 3640, '내놓다': 3641, '과일': 3642, '필요성': 3643, '간신히': 3644, '떡볶이': 3645, '선고': 3646, '중독': 3647, '이신': 3648, '가출': 3649, '문화센터': 3650, '층간소음': 3651, '못자다': 3652, '벌레': 3653, '저만': 3654, '귓등': 3655, '일보': 3656, '혐오': 3657, '년도': 3658, '올바르다': 3659, '어필': 3660, '촉박하다': 3661, '황혼': 3662, '무려': 3663, '돈벌이': 3664, '분배': 3665, '한소리': 3666, '망신': 3667, '계시': 3668, '콘서트': 3669, '투': 3670, '특별': 3671, '상여금': 3672, '부부싸움': 3673, '만도': 3674, '미움': 3675, '소소하다': 3676, '믿어지다': 3677, '헬스클럽': 3678, '홍보': 3679, '리가': 3680, '도태': 3681, '가능성': 3682, '택배': 3683, '언행': 3684, '여야': 3685, '굴지': 3686, '해명': 3687, '빨래': 3688, '설': 3689, '방귀': 3690, '손목': 3691, '진': 3692, '가담': 3693, '면역': 3694, '신혼': 3695, '판이': 3696, '낮추다': 3697, '문의': 3698, '오시': 3699, '입덧': 3700, '이뤄지다': 3701, '일어나고': 3702, '회계': 3703, '당신': 3704, '몸매': 3705, '복도': 3706, '어지럽히다': 3707, '식히다': 3708, '못마땅하다': 3709, '빼앗기다': 3710, '헛소문': 3711, '빈자리': 3712, '생산': 3713, '지난날': 3714, '커피숍': 3715, '노고': 3716, '수월하다': 3717, '나잇': 3718, '공개': 3719, '곗돈': 3720, '엄격하다': 3721, '밟다': 3722, '떳떳하다': 3723, '후기': 3724, '중요': 3725, '참으로': 3726, '하기는': 3727, '평': 3728, '어긋나다': 3729, '웬만하다': 3730, '아저씨': 3731, '연습생': 3732, '뒷말': 3733, '발병': 3734, '염치': 3735, '수시로': 3736, '화장품': 3737, '강사': 3738, '돋다': 3739, '댁': 3740, '부잣집': 3741, '비행기': 3742, '처자': 3743, '자동화': 3744, '서먹하다': 3745, '폭락': 3746, '찬': 3747, '더니': 3748, '추': 3749, '공사': 3750, '절교': 3751, '밀고': 3752, '진찰': 3753, '힘없다': 3754, '더러': 3755, '정해지다': 3756, '일수록': 3757, '몸무게': 3758, '나로': 3759, '제시': 3760, '각종': 3761, '식장': 3762, '금도': 3763, '이상형': 3764, '생신': 3765, '따위': 3766, '주자': 3767, '깔보다': 3768, '식은땀': 3769, '브랜드': 3770, '오토바이': 3771, '위안': 3772, '행운': 3773, '지목': 3774, '덩어리': 3775, '웹툰': 3776, '서서히': 3777, '문제점': 3778, '점차': 3779, '도우': 3780, '집단': 3781, '물품': 3782, '날카롭다': 3783, '충돌': 3784, '직책': 3785, '설사': 3786, '흔들리다': 3787, '해약': 3788, '현명하다': 3789, '사면': 3790, '회비': 3791, '만사': 3792, '애초': 3793, '성의': 3794, '귀하다': 3795, '성인병': 3796, '승낙': 3797, '제자리': 3798, '딴': 3799, '늘어서다': 3800, '자도': 3801, '기증': 3802, '원수': 3803, '늦': 3804, '부턴': 3805, '갑질': 3806, '검토': 3807, '권리': 3808, '도로': 3809, '태우다': 3810, '늦추다': 3811, '부리': 3812, '이모': 3813, '미처': 3814, '소화도': 3815, '주의자': 3816, '패턴': 3817, '공허하다': 3818, '다인': 3819, '끼니': 3820, '이라곤': 3821, '가라앉다': 3822, '고양이': 3823, '번만': 3824, '험하다': 3825, '투명인간': 3826, '트러블': 3827, '도리': 3828, '보조': 3829, '예감': 3830, '심술': 3831, '비난': 3832, '경조사': 3833, '에나': 3834, '신다': 3835, '인테리어': 3836, '닦다': 3837, '풍경': 3838, '부유하다': 3839, '치과': 3840, '라야': 3841, '허약하다': 3842, '세심': 3843, '기약': 3844, '부딪치다': 3845, '이러하다': 3846, '중반': 3847, '접대': 3848, '불쑥': 3849, '희생양': 3850, '재무': 3851, '교차': 3852, '날로': 3853, '셨': 3854, '빨': 3855, '주임': 3856, '무책임하다': 3857, '캠핑': 3858, '친목': 3859, '비아': 3860, '갑작스레': 3861, '밤새우다': 3862, '익숙': 3863, '나인': 3864, '경찰서': 3865, '방황': 3866, '창고': 3867, '관리자': 3868, '백화점': 3869, '메일': 3870, '주먹': 3871, '간병': 3872, '일구': 3873, '해석': 3874, '조그만': 3875, '국민': 3876, '부치다': 3877, '예식장': 3878, '적절하다': 3879, '피로하다': 3880, '토로': 3881, '정밀검사': 3882, '남매': 3883, '똥': 3884, '나무라다': 3885, '투자가': 3886, '들르다': 3887, '통금': 3888, '상이': 3889, '알아내다': 3890, '전망': 3891, '외박': 3892, '갈리다': 3893, '요법': 3894, '빠듯하': 3895, '호감': 3896, '찌': 3897, '담기다': 3898, '침착하다': 3899, '후임': 3900, '체면': 3901, '바람나다': 3902, '일정하다': 3903, '엄연하다': 3904, '재취': 3905, '충전': 3906, '꿀': 3907, '누리': 3908, '만점': 3909, '리포트': 3910, '꼰대': 3911, '썩다': 3912, '잡기': 3913, '메': 3914, '접수': 3915, '유부': 3916, '습득': 3917, '쌩쌩하다': 3918, '젊음': 3919, '각오': 3920, '채소': 3921, '개운하다': 3922, '탈출': 3923, '근력': 3924, '유쾌하다': 3925, '체지방': 3926, '경영': 3927, '큰딸': 3928, '고발': 3929, '폭언': 3930, '낡다': 3931, '오로지': 3932, '제외': 3933, '내부': 3934, '빨르다': 3935, '부작용': 3936, '경치': 3937, '의학': 3938, '팍팍하다': 3939, '백혈병': 3940, '턱걸이': 3941, '자라': 3942, '편의점': 3943, '힐': 3944, '노출': 3945, '만으로는': 3946, '소금': 3947, '프로게이머': 3948, '공고': 3949, '멤버': 3950, '치솟다': 3951, '수중': 3952, '오래오래': 3953, '덜컥': 3954, '에가': 3955, '으로나': 3956, '걸치다': 3957, '직할': 3958, '율': 3959, '자가': 3960, '사시': 3961, '시기하다': 3962, '안이': 3963, '빠져나가다': 3964, '편찮다': 3965, '신혼집': 3966, '샘': 3967, '절제': 3968, '능숙하다': 3969, '쫓다': 3970, '싱숭생숭하다': 3971, '어마어마하다': 3972, '밖에는': 3973, '활기': 3974, '가든': 3975, '숱': 3976, '통제': 3977, '신용등급': 3978, '내겐': 3979, '지연': 3980, '만들어지다': 3981, '교제': 3982, '시계': 3983, '재력': 3984, '일반': 3985, '누르다': 3986, '금주': 3987, '정성껏': 3988, '보나': 3989, '담보': 3990, '빠뜨리다': 3991, '기타': 3992, '경사': 3993, '경청': 3994, '왕복': 3995, '몽땅': 3996, '나볼': 3997, '하얘지다': 3998, '부상': 3999, '포트폴리오': 4000, '제법': 4001, '깨닫다': 4002, '오락가락': 4003, '꼬박': 4004, '도구': 4005, '규제': 4006, '용이': 4007, '정신과': 4008, '대박': 4009, '맞서다': 4010, '간염': 4011, '하얗다': 4012, '치사하다': 4013, '음료수': 4014, '밤잠': 4015, '설치다': 4016, '화상': 4017, '아르바이트생': 4018, '산부인과': 4019, '야식': 4020, '최소': 4021, '계약서': 4022, '오진': 4023, '예고': 4024, '의무': 4025, '무마': 4026, '일석이조': 4027, '진전': 4028, '뇌출혈': 4029, '상부': 4030, '서랍': 4031, '선후배': 4032, '자퇴': 4033, '기록': 4034, '서비스': 4035, '꼬이다': 4036, '막내아들': 4037, '축구': 4038, '저리': 4039, '복습': 4040, '자칫하면': 4041, '칼': 4042, '굶다': 4043, '불가피하다': 4044, '바늘': 4045, '만지다': 4046, '중환자실': 4047, '악성': 4048, '사드': 4049, '움': 4050, '연속': 4051, '기피': 4052, '죽지': 4053, '체질': 4054, '비밀번호': 4055, '몰두하다': 4056, '강남': 4057, '배경': 4058, '당선': 4059, '재검사': 4060, '에게라도': 4061, '까딱': 4062, '개업': 4063, '차원': 4064, '번듯하다': 4065, '아마도': 4066, '차차': 4067, '고소': 4068, '자립하다': 4069, '찢다': 4070, '매다': 4071, '영역': 4072, '리지': 4073, '납득': 4074, '제라': 4075, '기관': 4076, '밖에도': 4077, '하교': 4078, '노리': 4079, '명단': 4080, '쉬쉬': 4081, '수단': 4082, '서울대': 4083, '저기': 4084, '액': 4085, '서먹서먹하다': 4086, '어쩐지': 4087, '톡방': 4088, '쫓기다': 4089, '배고프다': 4090, '빈곤하다': 4091, '씹다': 4092, '져서': 4093, '밝아지다': 4094, '어가': 4095, '휴일': 4096, '실업자': 4097, '아침밥': 4098, '털': 4099, '해먹': 4100, '소주': 4101, '헛': 4102, '뻥': 4103, '창창하다': 4104, '청약': 4105, '내보내다': 4106, '찜찜하다': 4107, '자로': 4108, '아흔': 4109, '나위': 4110, '묵다': 4111, '렀': 4112, '옷차림': 4113, '감히': 4114, '감쪽': 4115, '운동화': 4116, '병실': 4117, '범죄': 4118, '강박': 4119, '코로나바이러스': 4120, '사무직': 4121, '일진': 4122, '대장암': 4123, '사직서': 4124, '예물': 4125, '동자': 4126, '더부룩하다': 4127, '벗': 4128, '몰려오다': 4129, '뛰어들다': 4130, '뚜렷하다': 4131, '성사': 4132, '슬럼프': 4133, '적령': 4134, '너무나도': 4135, '용': 4136, '뽑히다': 4137, '본가': 4138, '바라지': 4139, '꾸지람': 4140, '프레': 4141, '테이': 4142, '션': 4143, '언쟁': 4144, '밀': 4145, '번의': 4146, '절': 4147, '드러나다': 4148, '골골': 4149, '키도': 4150, '주택연금': 4151, '도록': 4152, '만큼만': 4153, '쌀': 4154, '빠듯': 4155, '알려지다': 4156, '그러나': 4157, '원통': 4158, '바다': 4159, '사가': 4160, '만회': 4161, '사랑스럽다': 4162, '인색하다': 4163, '수상하다': 4164, '병마': 4165, '내려앉다': 4166, '과속': 4167, '벌금': 4168, '여행가': 4169, '뇌': 4170, '요실금': 4171, '부서장': 4172, '졸리다': 4173, '얇다': 4174, '비정상': 4175, '소질': 4176, '유난': 4177, '비록': 4178, '직위': 4179, '한가하다': 4180, '가구': 4181, '길거리': 4182, '악착같이': 4183, '맛집': 4184, '경비': 4185, '갑': 4186, '제약': 4187, '완주': 4188, '스르': 4189, '예금': 4190, '둔하다': 4191, '깨우다': 4192, '묵살': 4193, '아이스크림': 4194, '만들기': 4195, '오줌': 4196, '이웃집': 4197, '속박': 4198, '뺨': 4199, '빵집': 4200, '정당하다': 4201, '사전': 4202, '뒷산': 4203, '기세': 4204, '안남다': 4205, '민감하다': 4206, '가발': 4207, '어쩌': 4208, '가래': 4209, '성과급': 4210, '리도': 4211, '조퇴': 4212, '햇빛': 4213, '위약금': 4214, '구입': 4215, '아름답다': 4216, '구한': 4217, '면박': 4218, '부인과': 4219, '동거': 4220, '인격': 4221, '안일하다': 4222, '승무원': 4223, '반도': 4224, '는걸': 4225, '시큰둥하다': 4226, '진도': 4227, '팀워크': 4228, '툭': 4229, '수령': 4230, '젠데': 4231, '공인': 4232, '린': 4233, '정서': 4234, '상쾌하다': 4235, '알아차리다': 4236, '극단': 4237, '피드백': 4238, '처분': 4239, '답안': 4240, '춤추다': 4241, '지불': 4242, '겉모습': 4243, '사나': 4244, '가을': 4245, '진솔하다': 4246, '쉬엄쉬엄': 4247, '전공자': 4248, '절반': 4249, '병세': 4250, '하나같이': 4251, '임해': 4252, '염세': 4253, '임대료': 4254, '졸': 4255, '금요일': 4256, '별문제': 4257, '압류': 4258, '강의': 4259, '외톨': 4260, '결론': 4261, '테니스': 4262, '방이': 4263, '스테이크': 4264, '카카오': 4265, '당번': 4266, '여건': 4267, '어두워지다': 4268, '과자': 4269, '최악': 4270, '멍청하다': 4271, '산재': 4272, '일기': 4273, '우릴': 4274, '포': 4275, '마찰': 4276, '버럭': 4277, '장래': 4278, '질책': 4279, '안절부절': 4280, '폐가': 4281, '불안정하다': 4282, '오타': 4283, '코앞': 4284, '언짢다': 4285, '나날이': 4286, '바르게': 4287, '휘두르다': 4288, '교묘하다': 4289, '협조': 4290, '기부': 4291, '배제': 4292, '가계': 4293, '정치': 4294, '정체': 4295, '온대': 4296, '사이트': 4297, '등수': 4298, '아랫사람': 4299, '사유': 4300, '너그럽다': 4301, '분양': 4302, '도입': 4303, '말년': 4304, '서고': 4305, '론': 4306, '치열하다': 4307, '외제': 4308, '시국': 4309, '이중': 4310, '맞춤법': 4311, '적적하다': 4312, '뜬금없이': 4313, '쇠약하다': 4314, '복구': 4315, '기일': 4316, '백내장': 4317, '승인': 4318, '약사': 4319, '깔끔하다': 4320, '침침하다': 4321, '수리': 4322, '일시': 4323, '결제': 4324, '실례': 4325, '입금': 4326, '마저도': 4327, '계모임': 4328, '얼어붙다': 4329, '물리치료': 4330, '슈퍼': 4331, '초음파': 4332, '클럽': 4333, '약점': 4334, '중도': 4335, '연고': 4336, '오백만': 4337, '얻어먹다': 4338, '이민': 4339, '검소': 4340, '지방간': 4341, '금융': 4342, '툴툴대': 4343, '교과서': 4344, '다독이다': 4345, '절대로': 4346, '어쩌라고': 4347, '발언': 4348, '원장': 4349, '이따가': 4350, '상속': 4351, '쏘다': 4352, '요가': 4353, '불합리': 4354, '끌리다': 4355, '후반': 4356, '드물다': 4357, '섞다': 4358, '깁스': 4359, '드레스': 4360, '전신': 4361, '튀다': 4362, '붙이': 4363, '운전면허': 4364, '오죽하다': 4365, '켜': 4366, '전셋집': 4367, '소고기': 4368, '금세': 4369, '동물': 4370, '고만': 4371, '휴지': 4372, '연구': 4373, '이장': 4374, '연휴': 4375, '송금': 4376, '세트': 4377, '결혼식장': 4378, '타령': 4379, '치우치다': 4380, '스킨십': 4381, '등등': 4382, '활기차다': 4383, '떠보다': 4384, '사회인': 4385, '전업': 4386, '소리치다': 4387, '용다': 4388, '학급': 4389, '해롭다': 4390, '만화': 4391, '왜냐하면': 4392, '획기': 4393, '허심': 4394, '탄회': 4395, '자진': 4396, '듬직하다': 4397, '걱정거리': 4398, '신지': 4399, '더디다': 4400, '미끄러지다': 4401, '위자료': 4402, '추측': 4403, '노년기': 4404, '장애인': 4405, '자격지심': 4406, '청원': 4407, '게을리': 4408, '열등감': 4409, '겨': 4410, '화기': 4411, '순번': 4412, '여동생': 4413, '남고': 4414, '시누이': 4415, '영정사진': 4416, '사십': 4417, '지저분하다': 4418, '받치다': 4419, '진즉': 4420, '기복': 4421, '부드럽다': 4422, '오늘내일': 4423, '명령': 4424, '골병': 4425, '구두쇠': 4426, '단시간': 4427, '혼수상태': 4428, '야심': 4429, '갈아입다': 4430, '노크': 4431, '왕래': 4432, '깨뜨리다': 4433, '교장': 4434, '업도': 4435, '노망': 4436, '온통': 4437, '급성': 4438, '심근경색': 4439, '화려하다': 4440, '살얼음': 4441, '모범': 4442, '디자이너': 4443, '강릉': 4444, '먹어주다': 4445, '달성': 4446, '생일도': 4447, '상냥하다': 4448, '인복': 4449, '검': 4450, '고혈압약': 4451, '볶음': 4452, '입자': 4453, '타지': 4454, '유명': 4455, '되돌아보다': 4456, '구가': 4457, '글씨': 4458, '떨어뜨리다': 4459, '버느': 4460, '정원': 4461, '빌라': 4462, '다잡다': 4463, '전염': 4464, '패닉': 4465, '격리': 4466, '지라': 4467, '조사해': 4468, '태연하다': 4469, '지점': 4470, '간소': 4471, '리더십': 4472, '시간대': 4473, '감격': 4474, '짜증스럽다': 4475, '수포': 4476, '입지': 4477, '도둑질': 4478, '오디션': 4479, '요통': 4480, '당기다': 4481, '낌새': 4482, '유튜버': 4483, '잘되지': 4484, '매니저': 4485, '강력하다': 4486, '리스트': 4487, '감성': 4488, '선언': 4489, '정직하다': 4490, '고지식하다': 4491, '곱': 4492, '관둘': 4493, '전액': 4494, '소풍': 4495, '솔선수범': 4496, '캐나다': 4497, '고서': 4498, '카메라': 4499, '순종': 4500, '채도': 4501, '살수': 4502, '두운': 4503, '사내연애': 4504, '그야': 4505, '중국': 4506, '가불': 4507, '몰리': 4508, '평균수명': 4509, '에어컨': 4510, '날씬하다': 4511, '침대': 4512, '유치원': 4513, '주네': 4514, '출세': 4515, '매진': 4516, '교통': 4517, '바탕': 4518, '조작': 4519, '투덜거리다': 4520, '호강': 4521, '안보': 4522, '로움': 4523, '하여간': 4524, '저항': 4525, '쪼들리다': 4526, '집의': 4527, '커리어': 4528, '어지르다': 4529, '시원찮다': 4530, '꿍꿍': 4531, '요즈음': 4532, '다수': 4533, '손편지': 4534, '독하다': 4535, '도라지': 4536, '식사량': 4537, '황금': 4538, '따갑다': 4539, '서로서로': 4540, '잇속': 4541, '전치': 4542, '하마터면': 4543, '몸살': 4544, '겸': 4545, '실컷': 4546, '멍하니': 4547, '개입': 4548, '명인': 4549, '창피해': 4550, '인스턴트': 4551, '구속': 4552, '대적': 4553, '메스껍다': 4554, '굴복': 4555, '죄인': 4556, '징그럽다': 4557, '친언니': 4558, '순하다': 4559, '악감': 4560, '시니어': 4561, '증권': 4562, '빈말': 4563, '도우미': 4564, '천': 4565, '예체능': 4566, '범위': 4567, '경과': 4568, '권고': 4569, '배분': 4570, '확보': 4571, '오거': 4572, '녀': 4573, '퍼주': 4574, '분만': 4575, '창문': 4576, '반려동물': 4577, '인들': 4578, '휴대전화': 4579, '이에요': 4580, '씀씀이': 4581, '불신': 4582, '대꾸': 4583, '또다시': 4584, '화병': 4585, '시즌': 4586, '짐작': 4587, '대형': 4588, '머': 4589, '뇌경색': 4590, '연령': 4591, '툴툴거리': 4592, '한없이': 4593, '콤플렉스': 4594, '특기': 4595, '조직검사': 4596, '이구나': 4597, '은사': 4598, '뒷받침': 4599, '휠체어': 4600, '허물': 4601, '흔적': 4602, '흐뭇하다': 4603, '굴': 4604, '대중교통': 4605, '술술': 4606, '무장': 4607, '자원': 4608, '사직': 4609, '중단': 4610, '공통점': 4611, '시급': 4612, '열기': 4613, '부디': 4614, '황': 4615, '캐릭터': 4616, '어학': 4617, '등하교': 4618, '영희': 4619, '일흔': 4620, '두근거리다': 4621, '탕진': 4622, '방관': 4623, '다정다감하다': 4624, '안전': 4625, '쏟아지다': 4626, '장면': 4627, '실습': 4628, '변': 4629, '합병': 4630, '파탄': 4631, '반년': 4632, '염': 4633, '보증금': 4634, '보양식': 4635, '겉도': 4636, '비타민': 4637, '치마': 4638, '축': 4639, '호흡': 4640, '단련하다': 4641, '이명': 4642, '공장': 4643, '지면': 4644, '뚝': 4645, '가나': 4646, '누리다': 4647, '의대': 4648, '악': 4649, '탕': 4650, '비실': 4651, '만큼의': 4652, '침': 4653, '뱉다': 4654, '협업': 4655, '분류': 4656, '열심': 4657, '배부르다': 4658, '움츠리다': 4659, '제거': 4660, '심리치료': 4661, '치고는': 4662, '뮤지컬': 4663, '스스럼없이': 4664, '말대꾸': 4665, '국가': 4666, '끝장': 4667, '폭발': 4668, '모질다': 4669, '말걸': 4670, '명복': 4671, '낫더': 4672, '뚫리다': 4673, '수십': 4674, '셀': 4675, '궁리': 4676, '아이야': 4677, '숨쉬기': 4678, '전화번호': 4679, '투기': 4680, '달력': 4681, '호흡기': 4682, '고열': 4683, '폐경': 4684, '통계': 4685, '꾸리': 4686, '미용': 4687, '풍요롭': 4688, '여부': 4689, '어린이집': 4690, '감원': 4691, '법원': 4692, '한바탕': 4693, '곧잘': 4694, '덜하다': 4695, '치주염': 4696, '싹싹하다': 4697, '자연스레': 4698, '장기간': 4699, '회사원': 4700, '동결': 4701, '어련하다': 4702, '킬로그램': 4703, '볕': 4704, '업종': 4705, '아홉': 4706, '줄줄이': 4707, '철수': 4708, '뜻밖': 4709, '감싸다': 4710, '품질': 4711, '농구': 4712, '단골': 4713, '십오': 4714, '위선': 4715, '압력': 4716, '생생하다': 4717, '추궁': 4718, '실종': 4719, '자시다': 4720, '분할': 4721, '물리': 4722, '수년': 4723, '늦둥이': 4724, '투표': 4725, '선임': 4726, '절도': 4727, '양도': 4728, '식도': 4729, '본격': 4730, '분실': 4731, '엮': 4732, '궁': 4733, '덩': 4734, '식탁': 4735, '사돈': 4736, '승승장구': 4737, '잇몸': 4738, '이슈': 4739, '순수하다': 4740, '어도': 4741, '무렵': 4742, '틀어박히다': 4743, '일억': 4744, '넣기': 4745, '넘어오다': 4746, '모조리': 4747, '홈쇼핑': 4748, '학창시절': 4749, '정반대': 4750, '불임': 4751, '공휴일': 4752, '아두': 4753, '제자리걸음': 4754, '리기': 4755, '계약금': 4756, '셋': 4757, '태권도': 4758, '태풍': 4759, '과중': 4760, '사두': 4761, '유망': 4762, '꺾다': 4763, '기저귀': 4764, '솔로': 4765, '충성': 4766, '뒷담화': 4767, '가시다': 4768, '설립': 4769, '시시콜콜': 4770, '정신없이': 4771, '출하': 4772, '착취': 4773, '독서실': 4774, '은혜': 4775, '신약': 4776, '불투명하다': 4777, '박탈': 4778, '멍': 4779, '붙들다': 4780, '만큼이나': 4781, '연말': 4782, '질서': 4783, '단계': 4784, '면회': 4785, '헤아리다': 4786, '가뿐하다': 4787, '부축': 4788, '미지수': 4789, '달도': 4790, '본받다': 4791, '문밖': 4792, '새벽같이': 4793, '의뢰': 4794, '종': 4795, '치레': 4796, '아이템': 4797, '풀칠': 4798, '맘껏': 4799, '열중': 4800, '보청기': 4801, '제빵사': 4802, '비어': 4803, '무안하다': 4804, '선생': 4805, '결단': 4806, '섬세하다': 4807, '마는': 4808, '맛없다': 4809, '일절': 4810, '악순환': 4811, '분발': 4812, '혈액': 4813, '남자에게': 4814, '신물': 4815, '퍼뜨린': 4816, '세지': 4817, '항공': 4818, '불량': 4819, '품다': 4820, '모태': 4821, '완쾌': 4822, '무관심': 4823, '제작': 4824, '신신당부': 4825, '불경기': 4826, '코피': 4827, '현기증': 4828, '흉하다': 4829, '우연': 4830, '간직': 4831, '직전': 4832, '아무렴': 4833, '개인주의': 4834, '상치': 4835, '셔': 4836, '제사': 4837, '가리키다': 4838, '회': 4839, '고비': 4840, '영문': 4841, '건축': 4842, '연결': 4843, '수상': 4844, '기여': 4845, '여간': 4846, '믿음직하다': 4847, '스트레칭': 4848, '총무': 4849, '고용': 4850, '커플링': 4851, '계열': 4852, '화난': 4853, '깊이': 4854, '마구': 4855, '난임': 4856, '가시': 4857, '병과': 4858, '뚫다': 4859, '빈번': 4860, '실리다': 4861, '계좌': 4862, '번호': 4863, '플레이': 4864, '시집가다': 4865, '우려': 4866, '종이': 4867, '진술': 4868, '상가': 4869, '팔지': 4870, '마음속': 4871, '수시': 4872, '단정': 4873, '구분': 4874, '수행': 4875, '어림': 4876, '서질': 4877, '머무르다': 4878, '수험생': 4879, '매점': 4880, '호기심': 4881, '뇌수막염': 4882, '기기': 4883, '앞가림': 4884, '롯': 4885, '각': 4886, '경계': 4887, '심장병': 4888, '방심하다': 4889, '생리': 4890, '하반기': 4891, '남녀': 4892, '갓난아기': 4893, '규율': 4894, '뛰어다니다': 4895, '까칠하다': 4896, '아가씨': 4897, '놨': 4898, '무릎관절': 4899, '자격': 4900, '구경': 4901, '어미': 4902, '귀로': 4903, '진하다': 4904, '투덜대다': 4905, '이과': 4906, '탈퇴': 4907, '신용': 4908, '맞장구': 4909, '진저리': 4910, '얕다': 4911, '꾸짖다': 4912, '묵묵하다': 4913, '해방': 4914, '고도': 4915, '이따': 4916, '정신병원': 4917, '실천': 4918, '관계없이': 4919, '신문': 4920, '팔십': 4921, '그로': 4922, '충실하다': 4923, '미흡하다': 4924, '예정일': 4925, '자서': 4926, '긴급하다': 4927, '제왕절개': 4928, '뇌졸중': 4929, '순식간': 4930, '비롯': 4931, '힐링': 4932, '우울함': 4933, '차곡차곡': 4934, '불황': 4935, '드러내다': 4936, '종합': 4937, '연연하다': 4938, '솜씨': 4939, '가해': 4940, '산소': 4941, '외동': 4942, '합의금': 4943, '영정': 4944, '면허': 4945, '개도': 4946, '편견': 4947, '소릴': 4948, '점검': 4949, '람': 4950, '붓기': 4951, '영수증': 4952, '내쫓다': 4953, '빨다': 4954, '합리': 4955, '얼다': 4956, '평판': 4957, '반납': 4958, '향상': 4959, '설비': 4960, '등교': 4961, '샐러드': 4962, '고문': 4963, '시아버지': 4964, '별별': 4965, '어느덧다': 4966, '횡단보도': 4967, '유통': 4968, '돌파구': 4969, '바다로': 4970, '장녀': 4971, '베': 4972, '침울하다': 4973, '후원': 4974, '작당': 4975, '노조': 4976, '유머': 4977, '사과받다': 4978, '나대다': 4979, '분노하다': 4980, '상장': 4981, '두근두근': 4982, '쥐다': 4983, '장모님': 4984, '경찰관': 4985, '놨더': 4986, '부추기다': 4987, '차량': 4988, '이해도': 4989, '즐거움': 4990, '수락': 4991, '세운': 4992, '빈혈': 4993, '기러기': 4994, '따라서': 4995, '부리면': 4996, '상습': 4997, '동서': 4998, '낚시': 4999, '재건축': 5000, '친딸': 5001, '입대': 5002, '출석': 5003, '생선': 5004, '애로': 5005, '어휴': 5006, '찾아다니다': 5007, '번지': 5008, '에이': 5009, '덕택': 5010, '비운': 5011, '금고': 5012, '휩쓸다': 5013, '양육비': 5014, '천사': 5015, '벼르': 5016, '감수': 5017, '관광': 5018, '가누다': 5019, '골반': 5020, '붓다': 5021, '모처럼': 5022, '기립': 5023, '몹쓸': 5024, '근무시간': 5025, '우승': 5026, '파고': 5027, '사오': 5028, '몰입': 5029, '가운데': 5030, '빈털터리': 5031, '최씨': 5032, '으로부터': 5033, '주머니': 5034, '왕년': 5035, '실험': 5036, '청첩장': 5037, '긴장도': 5038, '이루어지다': 5039, '전만': 5040, '음주운전': 5041, '캐': 5042, '매몰': 5043, '파스타': 5044, '꼼짝': 5045, '도르다': 5046, '거짓말쟁이': 5047, '사가다': 5048, '반고': 5049, '편안함': 5050, '다단계': 5051, '궤양': 5052, '욱해': 5053, '두루': 5054, '숨통': 5055, '신규': 5056, '큰소리치다': 5057, '한의원': 5058, '임대': 5059, '운동장': 5060, '차일피일': 5061, '잠수': 5062, '추슬러': 5063, '권위': 5064, '계발': 5065, '해오': 5066, '아주머니': 5067, '선지': 5068, '매형': 5069, '시큰거리다': 5070, '차단': 5071, '웨딩드레스': 5072, '코스': 5073, '하나로': 5074, '정신병': 5075, '넓히다': 5076, '법률': 5077, '충분': 5078, '일기장': 5079, '견제': 5080, '이냐': 5081, '노하우': 5082, '모레': 5083, '움츠러들다': 5084, '폐렴': 5085, '대뜸': 5086, '어기': 5087, '건너다': 5088, '얼떨결': 5089, '차용': 5090, '증도': 5091, '이따금': 5092, '무신경': 5093, '배치': 5094, '형수': 5095, '실기': 5096, '살찌다': 5097, '동영상': 5098, '처사': 5099, '과학': 5100, '잠자다': 5101, '수급': 5102, '양다리': 5103, '거니': 5104, '인거': 5105, '흉터': 5106, '발달': 5107, '서러움': 5108, '임시': 5109, '킬로': 5110, '생애': 5111, '보물찾기': 5112, '쇠': 5113, '저렴하다': 5114, '진실하다': 5115, '의사소통': 5116, '채택': 5117, '불규칙하다': 5118, '다급하다': 5119, '실시': 5120, '경쾌하다': 5121, '완화': 5122, '갈피': 5123, '솟구치다': 5124, '멍울': 5125, '헛수고': 5126, '나이다': 5127, '무게': 5128, '들이밀다': 5129, '뇌물': 5130, '마킹': 5131, '전략': 5132, '상품권': 5133, '갈구다': 5134, '주선': 5135, '어엿하다': 5136, '만행': 5137, '평화롭다': 5138, '무지': 5139, '마음잡다': 5140, '공과금': 5141, '복리': 5142, '후생': 5143, '족보': 5144, '꾼': 5145, '동원': 5146, '방과': 5147, '채널': 5148, '간경변증': 5149, '유사하다': 5150, '구성': 5151, '어수선하다': 5152, '해지니': 5153, '게시판': 5154, '성추행': 5155, '헛돈': 5156, '퇴행': 5157, '때때로': 5158, '알파벳': 5159, '애애': 5160, '대안': 5161, '자본': 5162, '임용고시': 5163, '이보': 5164, '오피스텔': 5165, '급등': 5166, '자랑거리': 5167, '조기': 5168, '타일러': 5169, '미묘하다': 5170, '청해': 5171, '과민': 5172, '저염식': 5173, '삼성': 5174, '그토록': 5175, '가관': 5176, '끊임없다': 5177, '구석구석': 5178, '서지': 5179, '진영': 5180, '이를': 5181, '마이너스': 5182, '접시': 5183, '시험지': 5184, '본체': 5185, '위층': 5186, '보듬다': 5187, '가급적': 5188, '남인': 5189, '처남': 5190, '절친': 5191, '가계부': 5192, '장려': 5193, '시청': 5194, '역전': 5195, '스레': 5196, '혈관': 5197, '인문': 5198, '시치미': 5199, '건성': 5200, '주저앉다': 5201, '앉히다': 5202, '증가': 5203, '또는': 5204, '구글': 5205, '있냔': 5206, '찜질': 5207, '평탄하다': 5208, '쪽지': 5209, '두서': 5210, '권한': 5211, '기우': 5212, '생소하다': 5213, '주차': 5214, '무니': 5215, '유출': 5216, '천장': 5217, '경멸': 5218, '월말': 5219, '떠들썩하다': 5220, '소문나다': 5221, '제보': 5222, '화끈하다': 5223, '부풀리다': 5224, '고자질': 5225, '두드리다': 5226, '안녕': 5227, '코인': 5228, '자잘하다': 5229, '산모': 5230, '훈훈하다': 5231, '쓴소리': 5232, '꾀병': 5233, '부린다': 5234, '자율학습': 5235, '뿌리다': 5236, '채점': 5237, '역량': 5238, '수법': 5239, '스페셜리스트': 5240, '자릿수': 5241, '장도': 5242, '폐인': 5243, '파산하다': 5244, '호소': 5245, '구질구질하다': 5246, '자그마하다': 5247, '뼈마디': 5248, '바이오': 5249, '이치': 5250, '게시': 5251, '가루': 5252, '낙심': 5253, '생존': 5254, '준우승': 5255, '편도': 5256, '스팸': 5257, '성차별': 5258, '금지': 5259, '절박': 5260, '반신반의': 5261, '허투루': 5262, '각박하다': 5263, '부탁드리다': 5264, '알콩달콩': 5265, '레벨': 5266, '가이드라인': 5267, '전문성': 5268, '지능': 5269, '선상': 5270, '조심성': 5271, '마땅치': 5272, '일치': 5273, '닭': 5274, '서든': 5275, '도서관': 5276, '치졸하다': 5277, '기출': 5278, '육아휴직': 5279, '달이다': 5280, '화면': 5281, '허비하다': 5282, '그러기에': 5283, '철학': 5284, '소정': 5285, '회한': 5286, '초콜릿': 5287, '초월': 5288, '도가니탕': 5289, '헛되': 5290, '쥐꼬리': 5291, '교환': 5292, '모범생': 5293, '대우받다': 5294, '다야': 5295, '뒤치다꺼리': 5296, '오냐': 5297, '성전환': 5298, '부응': 5299, '불리하다': 5300, '너무도': 5301, '물르다': 5302, '배송': 5303, '방도': 5304, '우승하다': 5305, '소변': 5306, '수저': 5307, '꿋꿋': 5308, '암투': 5309, '일가': 5310, '차트': 5311, '역효과': 5312, '늘그막': 5313, '자수': 5314, '떡하니': 5315, '울화': 5316, '치밀': 5317, '쌤': 5318, '정지': 5319, '동동': 5320, '비중': 5321, '대화방': 5322, '미대': 5323, '천생연분': 5324, '한판': 5325, '잔업': 5326, '퇴근길': 5327, '단위': 5328, '이비인후과': 5329, '앱': 5330, '네일아트': 5331, '한몫': 5332, '극': 5333, '안기다': 5334, '삼일': 5335, '외적': 5336, '가꾸다': 5337, '투명': 5338, '주기도': 5339, '설렁설렁': 5340, '월등하다': 5341, '낯가림': 5342, '뾰족': 5343, '해달': 5344, '음란물': 5345, '청와대': 5346, '축제': 5347, '난대': 5348, '을해': 5349, '부족함': 5350, '다음주': 5351, '도장': 5352, '찍기': 5353, '서인': 5354, '파': 5355, '정학': 5356, '조처': 5357, '쥐': 5358, '분도': 5359, '틀림없다': 5360, '천지': 5361, '불참': 5362, '가득': 5363, '찌질하다': 5364, '소가': 5365, '순환': 5366, '사연': 5367, '걸어오다': 5368, '열세': 5369, '돌': 5370, '상실하다': 5371, '자물쇠': 5372, '박수': 5373, '오직': 5374, '이점': 5375, '의연하다': 5376, '십견': 5377, '은행가': 5378, '증오': 5379, '심리테스트': 5380, '관두': 5381, '묘': 5382, '이서': 5383, '쓸데없이': 5384, '휴양지': 5385, '찢기다': 5386, '감회': 5387, '성화': 5388, '허다': 5389, '호텔': 5390, '달달': 5391, '자제력': 5392, '의외로': 5393, '극심하다': 5394, '적성검사': 5395, '연루': 5396, '저건': 5397, '툴툴거려': 5398, '학대': 5399, '가만두다': 5400, '헛디디다': 5401, '아파해': 5402, '덴': 5403, '고기만': 5404, '남성': 5405, '커버': 5406, '싱겁다': 5407, '중절': 5408, '수술실': 5409, '대학병원': 5410, '허사': 5411, '해둘걸': 5412, '매너': 5413, '갈비찜': 5414, '모면': 5415, '운전자': 5416, '추스른다': 5417, '뻗다': 5418, '면역성': 5419, '명세서': 5420, '가만': 5421, '한도': 5422, '초과': 5423, '통쾌하다': 5424, '기관지염': 5425, '풀어지다': 5426, '전화기': 5427, '어젠': 5428, '공책': 5429, '형아': 5430, '미영': 5431, '공경': 5432, '침체': 5433, '일자': 5434, '급락': 5435, '마음가짐': 5436, '무대': 5437, '무턱': 5438, '트로트': 5439, '둘걸': 5440, '분석': 5441, '통일': 5442, '별도': 5443, '위조': 5444, '에까지': 5445, '발길': 5446, '그랬다고': 5447, '에서라도': 5448, '웬만큼': 5449, '귀지': 5450, '잡무': 5451, '재고': 5452, '피고': 5453, '장담': 5454, '뭣': 5455, '문병': 5456, '부터가': 5457, '월간': 5458, '입히다': 5459, '흘러나오다': 5460, '물류': 5461, '쩔쩔매다': 5462, '예쁘장하다': 5463, '위험부담': 5464, '위장': 5465, '사교': 5466, '달콤하다': 5467, '마카롱': 5468, '신축': 5469, '오픈': 5470, '급감': 5471, '화하다': 5472, '파킨슨병': 5473, '커뮤니케이션': 5474, '또박또박': 5475, '지게': 5476, '체육관': 5477, '성희롱': 5478, '침묵': 5479, '말수': 5480, '열흘': 5481, '사주': 5482, '홀랑': 5483, '메우다': 5484, '계곡': 5485, '형식': 5486, '슬쩍': 5487, '주방': 5488, '위생': 5489, '약골': 5490, '삐': 5491, '근본': 5492, '소년원': 5493, '수사': 5494, '분노조절': 5495, '뇌리': 5496, '테스트': 5497, '손찌검': 5498, '끓이다': 5499, '골다': 5500, '우르르': 5501, '도나': 5502, '거더': 5503, '문구': 5504, '동성': 5505, '타의': 5506, '하란': 5507, '팔면': 5508, '보건소': 5509, '징조': 5510, '구성원': 5511, '대변': 5512, '혈안': 5513, '뻣뻣하다': 5514, '다름없이': 5515, '양말': 5516, '분풀이': 5517, '빛': 5518, '경직': 5519, '고구마': 5520, '헛산': 5521, '계주': 5522, '험악하다': 5523, '거두다': 5524, '합심': 5525, '유도': 5526, '아쉬움': 5527, '놨는데': 5528, '만끽': 5529, '철회': 5530, '설치': 5531, '버팀목': 5532, '지정': 5533, '과실': 5534, '수기': 5535, '정장': 5536, '산후조리원': 5537, '한탄': 5538, '여겨지다': 5539, '불확실하다': 5540, '우량': 5541, '수도권': 5542, '우수': 5543, '섣부르다': 5544, '절차': 5545, '수의사': 5546, '빈약하다': 5547, '오붓하다': 5548, '태평하다': 5549, '피시방': 5550, '오염': 5551, '우애': 5552, '결석': 5553, '실업계': 5554, '신부전': 5555, '부적합하다': 5556, '규모': 5557, '코로': 5558, '강압': 5559, '공예': 5560, '다나': 5561, '하체': 5562, '한껏': 5563, '서러워지다': 5564, '납부': 5565, '가늠': 5566, '자궁': 5567, '은행권': 5568, '책정': 5569, '치도': 5570, '방출': 5571, '깨달': 5572, '포장': 5573, '환승': 5574, '자재': 5575, '모진': 5576, '공로': 5577, '지지리': 5578, '보시': 5579, '물정': 5580, '암울하다': 5581, '여자라서': 5582, '손발': 5583, '오천만': 5584, '휴무': 5585, '싹싹': 5586, '유형': 5587, '실체': 5588, '꿇다': 5589, '으로선': 5590, '죗값': 5591, '수긍': 5592, '친오빠': 5593, '나들이': 5594, '초초해': 5595, '시술': 5596, '클리': 5597, '닉': 5598, '유급': 5599, '무감각': 5600, '경기도': 5601, '삐지다': 5602, '넘어뜨리다': 5603, '바둑': 5604, '팔자': 5605, '게이머': 5606, '웬': 5607, '방역': 5608, '오가면': 5609, '국': 5610, '현지': 5611, '맑은': 5612, '밥값': 5613, '팍팍': 5614, '집문서': 5615, '십자수': 5616, '들러붙다': 5617, '자기계발': 5618, '관할': 5619, '천만다행': 5620, '명소': 5621, '별명': 5622, '세기': 5623, '십억이': 5624, '겁쟁이': 5625, '시샘': 5626, '육십오': 5627, '어쨌다': 5628, '되새기다': 5629, '삼십분': 5630, '막중': 5631, '속셈': 5632, '교통비': 5633, '단속': 5634, '메달': 5635, '머신': 5636, '뿌리': 5637, '피자': 5638, '샌드위치': 5639, '올려놓다': 5640, '죽겠네': 5641, '갈수': 5642, '진의': 5643, '몰상식하다': 5644, '경제활동': 5645, '딸내미': 5646, '대보다': 5647, '외근': 5648, '찌개': 5649, '끝내주다': 5650, '자인': 5651, '벗겨지다': 5652, '무심코': 5653, '실로': 5654, '슥': 5655, '양일': 5656, '번갈아': 5657, '약국': 5658, '호통': 5659, '구상': 5660, '귀촌': 5661, '한단': 5662, '복합': 5663, '덤벙거리다': 5664, '덤덤하다': 5665, '이래저래': 5666, '상무': 5667, '허탈': 5668, '시르다': 5669, '피아니스트': 5670, '이어도': 5671, '여리다': 5672, '응나': 5673, '성질': 5674, '미경': 5675, '융자': 5676, '깨끗이': 5677, '각각': 5678, '사백오십': 5679, '사백십': 5680, '예단': 5681, '특정': 5682, '축소': 5683, '약자': 5684, '팔팔하다': 5685, '배역': 5686, '키로': 5687, '그릇': 5688, '비서': 5689, '회포': 5690, '깔다': 5691, '전원': 5692, '분리수거': 5693, '한밤중': 5694, '출근길': 5695, '클래식': 5696, '꼴찌': 5697, '신어': 5698, '캠프': 5699, '비판': 5700, '김씨': 5701, '전역': 5702, '야자': 5703, '주인공': 5704, '놨어': 5705, '괴팍하다': 5706, '마중': 5707, '경품': 5708, '이랬는데': 5709, '추진': 5710, '풍부하다': 5711, '뒷전': 5712, '총': 5713, '악기': 5714, '어쩌다가': 5715, '지수': 5716, '수련': 5717, '결과물': 5718, '떼쓰다': 5719, '독차지': 5720, '우여곡절': 5721, '불성실하다': 5722, '일손': 5723, '건조하다': 5724, '아무나': 5725, '줄곧': 5726, '웅': 5727, '삭히다': 5728, '메모': 5729, '계획성': 5730, '기능': 5731, '채식': 5732, '경매': 5733, '준걸': 5734, '전학생': 5735, '공대': 5736, '섭취': 5737, '비법': 5738, '성숙하다': 5739, '대야': 5740, '관여': 5741, '정식': 5742, '삼키다': 5743, '정신건강': 5744, '완료': 5745, '가라앉히다': 5746, '생활고': 5747, '운용': 5748, '신들리다': 5749, '투고': 5750, '스마트': 5751, '오십이': 5752, '주책': 5753, '구니': 5754, '탐색': 5755, '소비자': 5756, '엄하': 5757, '간접흡연': 5758, '사무': 5759, '그대': 5760, '로고': 5761, '바퀴': 5762, '파견': 5763, '묻히다': 5764, '투철': 5765, '밥상': 5766, '논리': 5767, '반박': 5768, '박스': 5769, '리어카': 5770, '낭송': 5771, '신용카드': 5772, '호상': 5773, '중성': 5774, '껄끄러워': 5775, '맨': 5776, '공적': 5777, '승률': 5778, '참고서': 5779, '일주년': 5780, '암기': 5781, '어안': 5782, '벙벙하다': 5783, '홧김': 5784, '빠릿빠릿': 5785, '월차': 5786, '적응도': 5787, '나다니다': 5788, '버벅거렸어': 5789, '스카우트': 5790, '제의': 5791, '의학과': 5792, '용종': 5793, '칸': 5794, '골탕': 5795, '작물': 5796, '교대': 5797, '일급': 5798, '비관': 5799, '재판': 5800, '증인': 5801, '증언': 5802, '치질': 5803, '목발': 5804, '예식': 5805, '흥미롭다': 5806, '시가': 5807, '상대로': 5808, '성장': 5809, '도모': 5810, '창': 5811, '살길': 5812, '즈음': 5813, '취할': 5814, '유서': 5815, '빠듯할': 5816, '빙판': 5817, '내력': 5818, '독박': 5819, '기안': 5820, '명확하다': 5821, '라나': 5822, '일쑤': 5823, '지린다': 5824, '팔찌': 5825, '인센티브': 5826, '감사패': 5827, '동조': 5828, '게이': 5829, '쿵쿵': 5830, '미꾸라지': 5831, '과음': 5832, '폴립': 5833, '요건': 5834, '균형': 5835, '라디오': 5836, '출산율': 5837, '슈퍼맨': 5838, '강인하다': 5839, '가습기': 5840, '상일': 5841, '여운': 5842, '재개발': 5843, '탑': 5844, '단벌': 5845, '신사': 5846, '혀': 5847, '그러다가': 5848, '시행': 5849, '매끄럽다': 5850, '갈아': 5851, '끙끙대다': 5852, '종식': 5853, '산업': 5854, '당혹': 5855, '스물': 5856, '대의': 5857, '스케줄': 5858, '그러하다': 5859, '정답': 5860, '불과하다': 5861, '장시간': 5862, '소망': 5863, '형성': 5864, '구도': 5865, '고액': 5866, '항심': 5867, '용법': 5868, '지망': 5869, '잡지': 5870, '자소': 5871, '물욕': 5872, '힘겹다': 5873, '백조': 5874, '볼일': 5875, '하진': 5876, '위염': 5877, '댓글': 5878, '대한민국': 5879, '태블릿': 5880, '잔병': 5881, '비즈니스': 5882, '질린다': 5883, '라기보다는': 5884, '깍': 5885, '청구': 5886, '친절': 5887, '운동신경': 5888, '비율': 5889, '찌르다': 5890, '비정규직': 5891, '도해': 5892, '공포': 5893, '수혜': 5894, '조달': 5895, '역다': 5896, '쇼크': 5897, '사망률': 5898, '새마을금고': 5899, '비대': 5900, '이빨': 5901, '십대': 5902, '초밥': 5903, '외할머니': 5904, '좌': 5905, '필요없다': 5906, '새치기': 5907, '홍삼': 5908, '진액': 5909, '재정상': 5910, '양쪽': 5911, '과격하다': 5912, '형사고소': 5913, '새엄마': 5914, '번드르르하다': 5915, '오월': 5916, '강습': 5917, '훈수': 5918, '차근차근하다': 5919, '오류': 5920, '공략': 5921, '실비': 5922, '사업실패': 5923, '감축': 5924, '나뭇잎': 5925, '찬성': 5926, '독려': 5927, '식욕': 5928, '친분': 5929, '풍기': 5930, '구청': 5931, '모교': 5932, '필라테스': 5933, '봉지': 5934, '고심': 5935, '상견례': 5936, '땅값': 5937, '성폭행': 5938, '속물': 5939, '세부': 5940, '합세': 5941, '사교육': 5942, '과감': 5943, '그런': 5944, '중견': 5945, '호캉스': 5946, '자욱하다': 5947, '피우지': 5948, '위계': 5949, '공기업': 5950, '병동': 5951, '프랜차이즈': 5952, '사흘': 5953, '심기': 5954, '병일': 5955, '문신': 5956, '통풍': 5957, '어나': 5958, '일종': 5959, '입상': 5960, '신형': 5961, '친엄마': 5962, '표창장': 5963, '추세': 5964, '무리다': 5965, '녹초': 5966, '사오다': 5967, '폭음': 5968, '엎': 5969, '모함': 5970, '주정': 5971, '심호흡': 5972, '폐결핵': 5973, '울렁거리다': 5974, '돌이': 5975, '무색': 5976, '밸': 5977, '향수': 5978, '이끼': 5979, '용납': 5980, '거뜬하다': 5981, '본적': 5982, '거금': 5983, '이하': 5984, '살걸': 5985, '연관': 5986, '군살': 5987, '성취': 5988, '주저': 5989, '빈정대다': 5990, '단백질': 5991, '놀이동산': 5992, '안색': 5993, '건너가다': 5994, '엇': 5995, '일생': 5996, '염색': 5997, '이메일': 5998, '컵': 5999, '담그다': 6000, '으로서의': 6001, '배탈': 6002, '짖다': 6003, '원자': 6004, '탄탄하다': 6005, '부산': 6006, '바리스타': 6007, '리모컨': 6008, '편의': 6009, '디저트': 6010, '학우': 6011, '하다못해': 6012, '재작년': 6013, '댓': 6014, '사심': 6015, '끌어안다': 6016, '보신': 6017, '정직': 6018, '몰골': 6019, '평생토록': 6020, '전쟁': 6021, '시집살이': 6022, '벨': 6023, '지팡이': 6024, '이쯤': 6025, '무역': 6026, '나락': 6027, '눈뜨다': 6028, '엎어지다': 6029, '자포자기': 6030, '말주변': 6031, '실내': 6032, '협심증': 6033, '오십오': 6034, '프로그래밍': 6035, '타박상': 6036, '관계자': 6037, '다그': 6038, '캄캄해지다': 6039, '껄': 6040, '쿠키': 6041, '쌍둥이': 6042, '온화하다': 6043, '교체': 6044, '두시': 6045, '혼미하다': 6046, '복통': 6047, '체증': 6048, '흥청망청': 6049, '싸움질': 6050, '전적': 6051, '때론': 6052, '틈틈하다': 6053, '헐뜯다': 6054, '건방지다': 6055, '제삼자': 6056, '물러서다': 6057, '전시회': 6058, '장비': 6059, '제로': 6060, '잠적': 6061, '교사': 6062, '개미': 6063, '어처구니': 6064, '꺼': 6065, '억지': 6066, '유전자': 6067, '방안': 6068, '연가': 6069, '근원': 6070, '이동해': 6071, '권력': 6072, '더불다': 6073, '벙어리': 6074, '낮잠': 6075, '뉘우치다': 6076, '인공수정': 6077, '김장': 6078, '킬로나': 6079, '차분해지다': 6080, '구인': 6081, '퍼뜨리': 6082, '아찔하다': 6083, '전복죽': 6084, '급격하다': 6085, '똑소리': 6086, '보도': 6087, '중압감': 6088, '과로사': 6089, '컵라면': 6090, '절단': 6091, '근황': 6092, '인적': 6093, '인정이': 6094, '삭감': 6095, '본': 6096, '폐해': 6097, '술버릇': 6098, '냉정하다': 6099, '어금니': 6100, '마취': 6101, '모자': 6102, '슬리퍼': 6103, '달아나다': 6104, '이외': 6105, '훈육': 6106, '나앉다': 6107, '노숙자': 6108, '세탁기': 6109, '사교육비': 6110, '배웅': 6111, '주간': 6112, '단풍': 6113, '사모님': 6114, '단둘': 6115, '준비물': 6116, '못지않다': 6117, '만두': 6118, '정돈': 6119, '전기': 6120, '수군대다': 6121, '시간표': 6122, '와전': 6123, '덥석': 6124, '이성애자': 6125, '호응': 6126, '트렌드': 6127, '께선': 6128, '대물리다': 6129, '거여': 6130, '률': 6131, '더라도': 6132, '마땅': 6133, '익히다': 6134, '도수': 6135, '오래도록': 6136, '조롱': 6137, '고독사': 6138, '말단': 6139, '배정': 6140, '물질': 6141, '울화통': 6142, '정산': 6143, '친화력': 6144, '막걸리': 6145, '부가': 6146, '에게까지': 6147, '껍데기': 6148, '요금': 6149, '기름': 6150, '알코올': 6151, '분리': 6152, '기반': 6153, '사하다': 6154, '숭숭': 6155, '신가': 6156, '점잖다': 6157, '가격표': 6158, '엉엉': 6159, '회로': 6160, '장인': 6161, '이해력': 6162, '맛보다': 6163, '시일': 6164, '곰팡이': 6165, '원룸': 6166, '건네주다': 6167, '피겨': 6168, '남남': 6169, '원활하다': 6170, '용도': 6171, '연배': 6172, '희귀': 6173, '에서까지': 6174, '둘러대다': 6175, '걸음': 6176, '외톨이야': 6177, '지체': 6178, '딩크족': 6179, '부끄러움': 6180, '인증': 6181, '한문': 6182, '풍': 6183, '겉보기': 6184, '간부': 6185, '숙지': 6186, '서핑': 6187, '답지': 6188, '외딴': 6189, '수금': 6190, '꼬치꼬치': 6191, '환절기': 6192, '어김없이': 6193, '주변인': 6194, '내리막': 6195, '이체': 6196, '사도': 6197, '안경': 6198, '이해관계': 6199, '조교': 6200, '얹다': 6201, '부시': 6202, '딸리다': 6203, '무기한': 6204, '세뱃돈': 6205, '학생회': 6206, '매장': 6207, '먹히다': 6208, '인내심': 6209, '냉면': 6210, '강행': 6211, '선의': 6212, '썩이다': 6213, '응답': 6214, '양치질': 6215, '중재': 6216, '무과': 6217, '조이다': 6218, '종합병원': 6219, '김치': 6220, '겸손하다': 6221, '뚝뚝': 6222, '북받치다': 6223, '엄만데': 6224, '분기': 6225, '소도': 6226, '즉각': 6227, '풍요': 6228, '왕': 6229, '미끄럽다': 6230, '일어서다': 6231, '가압류': 6232, '흥얼거리다': 6233, '할인': 6234, '들보': 6235, '한결같이': 6236, '교재': 6237, '들통': 6238, '산더미': 6239, '홍보팀': 6240, '공익': 6241, '유익하다': 6242, '견적': 6243, '일리': 6244, '출품': 6245, '해제': 6246, '하늘나라': 6247, '정민': 6248, '나뉘다': 6249, '소독': 6250, '이주': 6251, '주무시다': 6252, '달려가다': 6253, '녹즙': 6254, '찾아내다': 6255, '고리타분하다': 6256, '밝혀지다': 6257, '소사': 6258, '보이스피싱': 6259, '귀중하다': 6260, '차로': 6261, '옆구리': 6262, '손길': 6263, '발등': 6264, '제멋대로': 6265, '조리': 6266, '차라': 6267, '현직': 6268, '가식': 6269, '뇌종양': 6270, '화요일': 6271, '심장질환': 6272, '허가': 6273, '컴': 6274, '플레인': 6275, '자문': 6276, '소송': 6277, '골절': 6278, '소유': 6279, '막심': 6280, '투잡': 6281, '구강': 6282, '부재': 6283, '쏠쏠하다': 6284, '행': 6285, '이용자': 6286, '특수': 6287, '끝내기': 6288, '양성': 6289, '기름값': 6290, '변기': 6291, '매도': 6292, '설교': 6293, '벌벌': 6294, '롤모델': 6295, '잡아먹다': 6296, '전교': 6297, '거액': 6298, '개강': 6299, '유지비': 6300, '아사코': 6301, '한국인': 6302, '대충대충': 6303, '계정': 6304, '노부': 6305, '부위': 6306, '망치': 6307, '이율': 6308, '볼걸': 6309, '벌점': 6310, '좀더': 6311, '발효': 6312, '열악하다': 6313, '양해': 6314, '별수': 6315, '아낌없다': 6316, '학력': 6317, '어눌하다': 6318, '증시': 6319, '곱씹다': 6320, '박람회': 6321, '흠칫': 6322, '조목조목': 6323, '변비': 6324, '융통성': 6325, '성하다': 6326, '저리다': 6327, '주치의': 6328, '교우': 6329, '중풍': 6330, '인쇄': 6331, '인쇄물': 6332, '무언': 6333, '컨설턴트': 6334, '허황': 6335, '팬': 6336, '학부모': 6337, '명예': 6338, '협동': 6339, '트레이너': 6340, '모나': 6341, '일차': 6342, '객관': 6343, '대략': 6344, '엑스레이': 6345, '순은': 6346, '중개사': 6347, '비추다': 6348, '형도': 6349, '악몽': 6350, '무산': 6351, '으로라도': 6352, '특강': 6353, '체지방률': 6354, '서너': 6355, '매매': 6356, '납': 6357, '슬기롭다': 6358, '분량': 6359, '불리다': 6360, '실업': 6361, '주사기': 6362, '얌체': 6363, '가두다': 6364, '바위': 6365, '시련': 6366, '거꾸로': 6367, '장사치': 6368, '떠돌다': 6369, '부숴': 6370, '쪼개다': 6371, '공부량': 6372, '혼전': 6373, '남아나다': 6374, '편집': 6375, '샴푸': 6376, '벼랑': 6377, '도자기': 6378, '으리': 6379, '공동': 6380, '타자': 6381, '번다': 6382, '허구': 6383, '티비': 6384, '쪼': 6385, '기보': 6386, '언어': 6387, '중요시': 6388, '비명': 6389, '본부장': 6390, '별의별': 6391, '놀랍다': 6392, '진상': 6393, '수요일': 6394, '빛나다': 6395, '불똥': 6396, '가하다': 6397, '외형': 6398, '더치페이': 6399, '콜센터': 6400, '종아리': 6401, '앞뒤': 6402, '잡곡': 6403, '분통': 6404, '각별': 6405, '찌그러지다': 6406, '과잉': 6407, '도리어': 6408, '욱': 6409, '기억나다': 6410, '남일': 6411, '과부': 6412, '것일': 6413, '노쇠하다': 6414, '밀가루': 6415, '얼버무리다': 6416, '쇼핑몰': 6417, '위원': 6418, '여덟': 6419, '신분증': 6420, '소모품': 6421, '꼬리': 6422, '똑': 6423, '간경화': 6424, '값지다': 6425, '정형외과': 6426, '오락': 6427, '술집': 6428, '수라도': 6429, '대머리': 6430, '충치': 6431, '차오르다': 6432, '게임방': 6433, '방편': 6434, '취준생': 6435, '순탄': 6436, '참나': 6437, '체험학습': 6438, '무의미': 6439, '소수자': 6440, '적자': 6441, '보직': 6442, '새아버지': 6443, '필': 6444, '채근하듯': 6445, '우습다': 6446, '동떨어지다': 6447, '싸구려': 6448, '차보': 6449, '이왕': 6450, '단조롭다': 6451, '템포': 6452, '초연': 6453, '두르다': 6454, '저녁식사': 6455, '편일': 6456, '체육복': 6457, '굽신거릴': 6458, '토라': 6459, '청천벽력': 6460, '효용': 6461, '통한': 6462, '부고': 6463, '일기예보': 6464, '뵀었거': 6465, '한치': 6466, '생태계': 6467, '정본': 6468, '감감': 6469, '무소식': 6470, '초년': 6471, '지레': 6472, '자발': 6473, '괜시리': 6474, '울음소리': 6475, '그리기': 6476, '만화가': 6477, '변심': 6478, '장군': 6479, '항일': 6480, '텃밭': 6481, '바짝': 6482, '지혜': 6483, '트리': 6484, '지향성': 6485, '가가': 6486, '수지': 6487, '성찰': 6488, '식감': 6489, '백미': 6490, '패기': 6491, '사그라지다': 6492, '서주': 6493, '노인성': 6494, '폐업': 6495, '섭외': 6496, '유의': 6497, '벼락치기': 6498, '뭣하': 6499, '꿈구': 6500, '나타': 6501, '악성종양': 6502, '젊은것': 6503, '차비': 6504, '독신': 6505, '곧장': 6506, '백해무익하다': 6507, '푸대접': 6508, '전자': 6509, '폭등': 6510, '피부색': 6511, '우스꽝스럽다': 6512, '주관성': 6513, '편도선': 6514, '행여': 6515, '세고': 6516, '순진무구': 6517, '한마음': 6518, '다이야': 6519, '기해': 6520, '거구': 6521, '부끄럼': 6522, '수석': 6523, '주춤': 6524, '위태롭거': 6525, '수유': 6526, '틴트': 6527, '도안': 6528, '탄생': 6529, '위대하다': 6530, '꿈틀': 6531, '쌀밥': 6532, '징크스': 6533, '보류': 6534, '파가': 6535, '사물': 6536, '재수술': 6537, '태클': 6538, '플루': 6539, '베이비박스': 6540, '발톱': 6541, '무좀': 6542, '균': 6543, '눌리': 6544, '주중': 6545, '대수': 6546, '대표이사': 6547, '반의': 6548, '서일': 6549, '거길': 6550, '킬로미터': 6551, '남부럽다': 6552, '관문': 6553, '갸': 6554, '팔십이': 6555, '짙다': 6556, '푸른': 6557, '굴레': 6558, '찌뿌둥': 6559, '공업고등학교': 6560, '리조트': 6561, '이용권': 6562, '파워포인트': 6563, '색깔': 6564, '막내딸': 6565, '사납다': 6566, '이백': 6567, '특징': 6568, '동정': 6569, '결백': 6570, '조급': 6571, '몆': 6572, '마사지': 6573, '블라우스': 6574, '글렀': 6575, '근거': 6576, '들으랬더': 6577, '아물다': 6578, '성경': 6579, '구절': 6580, '읊는다든': 6581, '시합': 6582, '고스': 6583, '세련': 6584, '미화': 6585, '장어': 6586, '공정하다': 6587, '측은': 6588, '완벽': 6589, '겨워': 6590, '순산': 6591, '이내': 6592, '유투버': 6593, '합주': 6594, '실만': 6595, '시세': 6596, '출국': 6597, '쉬이': 6598, '이주나': 6599, '간사하다': 6600, '출연': 6601, '갑상선': 6602, '역사': 6603, '풀기': 6604, '딛다': 6605, '사수자리': 6606, '수의': 6607, '유언': 6608, '유품': 6609, '친부모': 6610, '헛수': 6611, '무기력증': 6612, '성소수자': 6613, '마자': 6614, '일용직': 6615, '굴더': 6616, '이송': 6617, '다단계판매': 6618, '비자': 6619, '자매': 6620, '견해': 6621, '서슴지': 6622, '물산': 6623, '악쓰다': 6624, '및': 6625, '도운': 6626, '기름기': 6627, '대니': 6628, '피티': 6629, '작은딸': 6630, '차림새': 6631, '학구': 6632, '잠자코': 6633, '말아먹다': 6634, '상실': 6635, '온돌': 6636, '핵전쟁': 6637, '멸망하다': 6638, '공황': 6639, '옮는': 6640, '케이스': 6641, '노동청': 6642, '사량': 6643, '편리하다': 6644, '정성은': 6645, '절로': 6646, '성관계': 6647, '귀신': 6648, '자빠지다': 6649, '낙방': 6650, '쏜살같다': 6651, '우아하다': 6652, '거실': 6653, '약식': 6654, '편중': 6655, '갑자': 6656, '피트니스': 6657, '스위스': 6658, '편집자': 6659, '법정': 6660, '지상권': 6661, '토지': 6662, '부지': 6663, '떠나오다': 6664, '중시': 6665, '부와': 6666, '생활기록부': 6667, '치의': 6668, '명백하다': 6669, '소관': 6670, '종인': 6671, '독신자': 6672, '쳇바퀴': 6673, '빈둥거리': 6674, '중세': 6675, '정신질환': 6676, '미스코리아': 6677, '구장': 6678, '팔십오': 6679, '구십': 6680, '삐뚤다': 6681, '빼뚤': 6682, '굴욕': 6683, '동방예의지국': 6684, '눈총': 6685, '아가서': 6686, '언급': 6687, '이의': 6688, '초췌하다': 6689, '재계약': 6690, '어여쁘다': 6691, '장하다': 6692, '폭로': 6693, '교육부': 6694, '왈가': 6695, '왈부': 6696, '국문과': 6697, '타이밍': 6698, '납입': 6699, '교감': 6700, '중요성': 6701, '한해': 6702, '뒷모습': 6703, '로맨틱': 6704, '먹고다': 6705, '시기심': 6706, '갉아먹다': 6707, '어리석다': 6708, '노쇠': 6709, '막냇동생': 6710, '간편하다': 6711, '상호': 6712, '여주': 6713, '윤리관': 6714, '불친절하다': 6715, '나폴레옹': 6716, '돈대': 6717, '폐경기': 6718, '병인': 6719, '신분': 6720, '떠밀다': 6721, '대학교수': 6722, '치더': 6723, '아프리카': 6724, '우두커니': 6725, '늠름하다': 6726, '힌트': 6727, '십상': 6728, '연초': 6729, '전립선암': 6730, '배아': 6731, '번하다': 6732, '타계': 6733, '둘리': 6734, '괴사': 6735, '용무': 6736, '매정하다': 6737, '감흥': 6738, '새끼': 6739, '연식': 6740, '흉내': 6741, '통역': 6742, '발인': 6743, '무수': 6744, '봉급': 6745, '전산': 6746, '서준': 6747, '직시': 6748, '외동아들': 6749, '시름시름': 6750, '폭우': 6751, '구서': 6752, '용소': 6753, '쓸개': 6754, '로스쿨': 6755, '억이': 6756, '찔리다': 6757, '경향': 6758, '초청': 6759, '잠잠하다': 6760, '시말서': 6761, '과오': 6762, '호주머니': 6763, '앨': 6764, '길들이다': 6765, '커트라인': 6766, '대체로': 6767, '낫질': 6768, '우대': 6769, '전전': 6770, '들락날락': 6771, '사우나': 6772, '유진': 6773, '차선': 6774, '튀어나오다': 6775, '두고두고': 6776, '공공': 6777, '근로': 6778, '무직': 6779, '싸가지': 6780, '어두울': 6781, '유심': 6782, '무단': 6783, '결근': 6784, '강': 6785, '하제': 6786, '치사': 6787, '동일하다': 6788, '강점': 6789, '유발': 6790, '거일': 6791, '상함': 6792, '보호대': 6793, '사이더': 6794, '후보자': 6795, '건달': 6796, '난관': 6797, '국문학': 6798, '머피': 6799, '법칙': 6800, '스포츠': 6801, '일정량': 6802, '굶주리다': 6803, '구걸': 6804, '숙취': 6805, '장난스럽다': 6806, '돈값': 6807, '업적': 6808, '하원': 6809, '영화감독': 6810, '생인': 6811, '뇌척수막': 6812, '닫히다': 6813, '자투리': 6814, '춤': 6815, '요가랑': 6816, '밀치다': 6817, '장본': 6818, '딱지': 6819, '식충이': 6820, '혈당량': 6821, '졸지': 6822, '정수기': 6823, '매니큐어': 6824, '곤란': 6825, '치료법': 6826, '모색': 6827, '소집': 6828, '공연': 6829, '분쟁': 6830, '개그': 6831, '통지서': 6832, '동선': 6833, '젓다': 6834, '감고': 6835, '들추다': 6836, '베다': 6837, '엠비티아이': 6838, '축가': 6839, '방비': 6840, '승급': 6841, '판별': 6842, '검버섯': 6843, '기재': 6844, '복달': 6845, '연수': 6846, '매라': 6847, '호언': 6848, '중고차': 6849, '바로잡다': 6850, '닥달해': 6851, '처세술': 6852, '매스미디어': 6853, '웨이': 6854, '맨몸': 6855, '임상시험': 6856, '소지도': 6857, '해독': 6858, '주스': 6859, '찰': 6860, '헤픈': 6861, '입실': 6862, '여보': 6863, '순이': 6864, '메르스': 6865, '음치': 6866, '총명하다': 6867, '툴툴거린': 6868, '눈초리': 6869, '화질': 6870, '카피라이터': 6871, '몸담': 6872, '로간': 6873, '타깃': 6874, '병력': 6875, '한적하다': 6876, '난동': 6877, '배타': 6878, '이탈리아': 6879, '가세': 6880, '매운탕': 6881, '뀌': 6882, '떼돈': 6883, '안구': 6884, '렌즈': 6885, '가증': 6886, '회전목마': 6887, '요리조리': 6888, '워진': 6889, '재건': 6890, '공손하다': 6891, '달랄': 6892, '꼬마': 6893, '넘겨짚다': 6894, '실업률': 6895, '바치': 6896, '방방': 6897, '대감': 6898, '울화병': 6899, '리마': 6900, '득달': 6901, '달려들다': 6902, '수로': 6903, '재검': 6904, '노심초사': 6905, '헛구역질': 6906, '속인': 6907, '쿠션': 6908, '편식': 6909, '한결같다': 6910, '입력': 6911, '시차': 6912, '소행': 6913, '맛탕': 6914, '일찍이': 6915, '스테로이드': 6916, '안압': 6917, '전향': 6918, '진동': 6919, '구비': 6920, '과식': 6921, '완벽주의자': 6922, '아낌없이': 6923, '대범하다': 6924, '쪼르르': 6925, '지사': 6926, '페이퍼': 6927, '쬐다': 6928, '물약': 6929, '곱절': 6930, '시행착오': 6931, '뽀삐': 6932, '쌍방': 6933, '몸조심': 6934, '파노라마': 6935, '임종': 6936, '모녀': 6937, '돌변': 6938, '도도': 6939, '본전': 6940, '저하': 6941, '군인': 6942, '물병': 6943, '대학자': 6944, '깡통': 6945, '따로따로': 6946, '우러러': 6947, '유기견': 6948, '한국어': 6949, '부방': 6950, '휴업': 6951, '본사': 6952, '스토커': 6953, '낙도': 6954, '더치': 6955, '페이': 6956, '허비': 6957, '았': 6958, '격차': 6959, '샘플': 6960, '채취': 6961, '계로': 6962, '이정': 6963, '누운': 6964, '공과': 6965, '쟁쟁': 6966, '주목': 6967, '진실로': 6968, '실직자': 6969, '저주받다': 6970, '불구자': 6971, '민주': 6972, '스쿼트': 6973, '본드': 6974, '혼도': 6975, '한파': 6976, '운동량': 6977, '급전': 6978, '전시': 6979, '불쾌감': 6980, '일면': 6981, '사자': 6982, '수임료': 6983, '유치하다': 6984, '지렁이': 6985, '상조': 6986, '외환위기': 6987, '무덤': 6988, '보안': 6989, '어른스럽다': 6990, '면도': 6991, '폰': 6992, '지대': 6993, '환상': 6994, '간략하다': 6995, '전분': 6996, '반품': 6997, '하므다': 6998, '미용실': 6999, '독후감': 7000, '족쇄': 7001, '산송장': 7002, '융통': 7003, '시긴': 7004, '살피다': 7005, '밖엔': 7006, '당직': 7007, '서거': 7008, '들려주다': 7009, '유리': 7010, '인품': 7011, '모양새': 7012, '의혹': 7013, '무난': 7014, '태만': 7015, '꾀다': 7016, '바들바들': 7017, '중증': 7018, '평화': 7019, '잇따르다': 7020, '계산기': 7021, '마구잡이': 7022, '선수': 7023, '월요병': 7024, '여자아이': 7025, '장보고': 7026, '태교': 7027, '햄버거': 7028, '불철': 7029, '주야': 7030, '비닐하우스': 7031, '침해': 7032, '석류': 7033, '엘리베이터': 7034, '의기양양하다': 7035, '북': 7036, '자질': 7037, '실장': 7038, '노약': 7039, '자석': 7040, '지탄': 7041, '팝콘': 7042, '산후': 7043, '대사': 7044, '증후군': 7045, '씩씩하다': 7046, '퇴짜': 7047, '용지': 7048, '무효표': 7049, '싸매다': 7050, '시돈': 7051, '담벼락': 7052, '변덕': 7053, '페루': 7054, '안데스': 7055, '문명': 7056, '복직': 7057, '들들': 7058, '볶다': 7059, '당국': 7060, '가이드': 7061, '복종': 7062, '마마': 7063, '원어민': 7064, '영어학원': 7065, '산산조각': 7066, '소요': 7067, '밭농사': 7068, '과시': 7069, '무통': 7070, '닳다': 7071, '강좌': 7072, '삐친': 7073, '특이': 7074, '망가뜨렸거': 7075, '때우다': 7076, '예치': 7077, '윽박': 7078, '에게나': 7079, '전등': 7080, '허례': 7081, '허식': 7082, '생략': 7083, '매각': 7084, '비겁': 7085, '갓': 7086, '처럼은': 7087, '난장판': 7088, '주무': 7089, '매상': 7090, '최우': 7091, '원기준': 7092, '꼼지락': 7093, '웅장': 7094, '하청': 7095, '학교행사': 7096, '중점': 7097, '치고받다': 7098, '개판': 7099, '불만족': 7100, '스릴러': 7101, '카페나': 7102, '아보': 7103, '번꼴': 7104, '쩍거려': 7105, '동경': 7106, '오백': 7107, '바지': 7108, '금메달': 7109, '반경': 7110, '짝꿍': 7111, '살인': 7112, '난이': 7113, '응모': 7114, '친근하다': 7115, '구제': 7116, '불능': 7117, '러닝': 7118, '약주': 7119, '사발': 7120, '백세': 7121, '재산세': 7122, '구억': 7123, '종부세': 7124, '주차장': 7125, '신건': 7126, '꼬아': 7127, '하단': 7128, '외양': 7129, '어깨동무': 7130, '달랑': 7131, '더위': 7132, '폭탄': 7133, '만료': 7134, '블랙박스': 7135, '두껍다': 7136, '직계': 7137, '자손': 7138, '자제시키다': 7139, '제만': 7140, '격하': 7141, '배변': 7142, '패드': 7143, '만인': 7144, '만드': 7145, '상세': 7146, '이돈': 7147, '칼슘': 7148, '시간제': 7149, '난거지': 7150, '초인종': 7151, '캐비닛': 7152, '울고불고': 7153, '저절로': 7154, '어지러워지다': 7155, '관점': 7156, '실질': 7157, '고삼': 7158, '보건': 7159, '뻘쭘해': 7160, '장례비용': 7161, '이왕이면': 7162, '헤어스타일': 7163, '물혹': 7164, '티켓': 7165, '십일이': 7166, '비일비재하다': 7167, '손색': 7168, '맹세': 7169, '태희': 7170, '찌릿하': 7171, '경련': 7172, '헛수고더': 7173, '낙서': 7174, '피임': 7175, '백삼십': 7176, '썻어': 7177, '바닥나다': 7178, '으쓱': 7179, '텅텅': 7180, '가르침': 7181, '조곤조곤': 7182, '가분': 7183, '판막': 7184, '회의실': 7185, '설마설마': 7186, '짜이다': 7187, '오자': 7188, '묘사': 7189, '동지': 7190, '놀이터': 7191, '베이비': 7192, '붐': 7193, '고리': 7194, '장황하다': 7195, '다한': 7196, '가산': 7197, '청심환': 7198, '된거': 7199, '인게': 7200, '임산부': 7201, '줏대': 7202, '옮': 7203, '종업': 7204, '경위': 7205, '평점': 7206, '생강차': 7207, '모피': 7208, '갈비': 7209, '수액': 7210, '젤': 7211, '경운기': 7212, '길가': 7213, '다운': 7214, '대작': 7215, '따오다': 7216, '건단': 7217, '준치': 7218, '미로': 7219, '지워지다': 7220, '식후': 7221, '사죄': 7222, '착': 7223, '달라붙다': 7224, '용감하다': 7225, '꽂히다': 7226, '감독': 7227, '오손도손': 7228, '십일': 7229, '컨닝': 7230, '하기야': 7231, '무어': 7232, '기혼': 7233, '유라': 7234, '애정도': 7235, '굴렸': 7236, '애먼': 7237, '하찮다': 7238, '오르간': 7239, '악보': 7240, '지휘자': 7241, '배낭여행': 7242, '권장': 7243, '나가시': 7244, '급우': 7245, '나시': 7246, '내외': 7247, '오순도순': 7248, '출전': 7249, '주얼리': 7250, '파기': 7251, '끈끈': 7252, '개개인': 7253, '끝내': 7254, '일박': 7255, '이일': 7256, '콕': 7257, '소꿉친구': 7258, '유세': 7259, '악착': 7260, '오십만': 7261, '아마추어': 7262, '오케스트라': 7263, '연주': 7264, '추태': 7265, '결별': 7266, '까지나': 7267, '합리화': 7268, '기념품': 7269, '만주': 7270, '애통하다': 7271, '종신': 7272, '손글씨': 7273, '예외': 7274, '미숙': 7275, '내장': 7276, '되라셔': 7277, '민망': 7278, '지난해': 7279, '택': 7280, '나머진': 7281, '휴게실': 7282, '심심': 7283, '첫인상': 7284, '대성공': 7285, '면지': 7286, '원형탈모': 7287, '자궁암': 7288, '소박하다': 7289, '아웅': 7290, '신생': 7291, '옛말': 7292, '속닥거리다': 7293, '부부인': 7294, '아려': 7295, '대부': 7296, '삼억': 7297, '꽃집': 7298, '합격자': 7299, '유용하다': 7300, '읽히다': 7301, '초보': 7302, '병풍': 7303, '칫솔': 7304, '계란': 7305, '백지상태': 7306, '저셔': 7307, '요플레': 7308, '전수': 7309, '밤길': 7310, '놀래다': 7311, '지주': 7312, '시사': 7313, '다큐멘터리': 7314, '설날': 7315, '이신가': 7316, '일부분': 7317, '줄라': 7318, '직성': 7319, '댕': 7320, '이친': 7321, '고갈': 7322, '골로': 7323, '창구': 7324, '보아': 7325, '뺨치': 7326, '훤': 7327, '칠하다': 7328, '허기지다': 7329, '장미': 7330, '청순': 7331, '철렁': 7332, '거보': 7333, '악플': 7334, '이기심': 7335, '축하파티': 7336, '남발': 7337, '꽂다': 7338, '난방': 7339, '잡아떼다': 7340, '처럼만': 7341, '검도': 7342, '뒹굴뒹굴': 7343, '독지가': 7344, '블로그': 7345, '평가절하': 7346, '푸념': 7347, '일사병': 7348, '다지': 7349, '에러': 7350, '방울': 7351, '측정': 7352, '할껄': 7353, '본국': 7354, '무더위': 7355, '젖다': 7356, '수완': 7357, '월급쟁이': 7358, '먹거리': 7359, '뜬눈': 7360, '다달이': 7361, '아인': 7362, '황상': 7363, '지방도': 7364, '헤딩': 7365, '짱': 7366, '검수': 7367, '오르락내리락': 7368, '영화관': 7369, '궤도': 7370, '외국인': 7371, '동성연애': 7372, '생물학자': 7373, '뿐더러': 7374, '나주': 7375, '둔화': 7376, '소설': 7377, '방과후': 7378, '엉': 7379, '겁결': 7380, '군무원': 7381, '기입': 7382, '논쟁': 7383, '싱가포르': 7384, '한사코': 7385, '셨는데': 7386, '체인점': 7387, '우후죽순': 7388, '다분하다': 7389, '예방주사': 7390, '방사선': 7391, '도구로': 7392, '물주': 7393, '메세지': 7394, '아웃백': 7395, '당화혈색소': 7396, '옥상': 7397, '못내': 7398, '원피스': 7399, '판결': 7400, '회상': 7401, '에피소드': 7402, '종속': 7403, '짚다': 7404, '기획서': 7405, '틀려먹다': 7406, '기생충': 7407, '사회면': 7408, '가려움증': 7409, '복부': 7410, '단것': 7411, '악질': 7412, '태만하다': 7413, '억제': 7414, '요로결석': 7415, '빈부격차': 7416, '수면제': 7417, '팔짝': 7418, '추첨': 7419, '토론': 7420, '뛰놀다': 7421, '해볼껄': 7422, '코골': 7423, '어지럼증': 7424, '베트남': 7425, '치아': 7426, '자산운용': 7427, '몆년': 7428, '반주': 7429, '가운': 7430, '우기': 7431, '설정': 7432, '바가지': 7433, '동굴': 7434, '고착': 7435, '부금': 7436, '굳히다': 7437, '점주': 7438, '장터': 7439, '금값': 7440, '입양아': 7441, '에서나': 7442, '냉담하다': 7443, '자명종': 7444, '더러워지다': 7445, '언론': 7446, '부적': 7447, '뱀': 7448, '다이나믹듀오': 7449, '거도': 7450, '피지': 7451, '걸레': 7452, '짜지다': 7453, '의외': 7454, '조종': 7455, '동사무소': 7456, '만큼도': 7457, '하고야': 7458, '양로원': 7459, '더구나': 7460, '다다르다': 7461, '고령': 7462, '랬': 7463, '반발': 7464, '대드': 7465, '타트': 7466, '체리': 7467, '복제': 7468, '보자기': 7469, '입수': 7470, '세네': 7471, '강원도': 7472, '시급하다': 7473, '자리야': 7474, '구색': 7475, '직기': 7476, '유책': 7477, '목전': 7478, '조산': 7479, '융화': 7480, '알뜰살뜰': 7481, '두둑': 7482, '활황': 7483, '손흥민': 7484, '항목': 7485, '운세': 7486, '무상': 7487, '할당량': 7488, '활동량': 7489, '피치': 7490, '출시': 7491, '살일': 7492, '미적지근하다': 7493, '영문학': 7494, '십여': 7495, '의상': 7496, '데인': 7497, '빠듯하거': 7498, '해충': 7499, '병중': 7500, '헬스': 7501, '대항': 7502, '어린이': 7503, '안내서': 7504, '농락': 7505, '변덕쟁이': 7506, '사신': 7507, '해피엔딩': 7508, '아리송하다': 7509, '수직': 7510, '응시': 7511, '족구': 7512, '자립': 7513, '모카': 7514, '이기만': 7515, '기수': 7516, '피씨': 7517, '대립': 7518, '하염없이': 7519, '반려자': 7520, '엽기': 7521, '돈줄': 7522, '려면': 7523, '오일': 7524, '핏줄': 7525, '할당': 7526, '인명': 7527, '재천': 7528, '옆반': 7529, '펜': 7530, '퍼뜨렸어': 7531, '툴툴': 7532, '의적': 7533, '짊어져': 7534, '간수': 7535, '징징대다': 7536, '퍼먹': 7537, '견': 7538, '시중': 7539, '약정': 7540, '근절': 7541, '희미하다': 7542, '과민반응': 7543, '욱했어': 7544, '미세먼지': 7545, '칠천만': 7546, '샤프': 7547, '걜': 7548, '벌컥': 7549, '에펠탑': 7550, '런던': 7551, '시계탑': 7552, '그리스도': 7553, '정의롭': 7554, '임용': 7555, '선본': 7556, '외할아버지': 7557, '부여': 7558, '콘텐츠': 7559, '숨죽': 7560, '등지': 7561, '정규': 7562, '하고의': 7563, '퍼': 7564, '화창하다': 7565, '모형': 7566, '내뱉다': 7567, '쥐구멍': 7568, '배출': 7569, '유산균': 7570, '법무': 7571, '작문': 7572, '어간': 7573, '새내기': 7574, '축축': 7575, '분식집': 7576, '야외': 7577, '지위': 7578, '발레': 7579, '뒤따르다': 7580, '망언': 7581, '그릴': 7582, '고함': 7583, '고위': 7584, '공직자': 7585, '청탁': 7586, '한국말': 7587, '라든가': 7588, '열렬하다': 7589, '유입': 7590, '복강': 7591, '체액': 7592, '축적': 7593, '철야': 7594, '미안': 7595, '냉': 7596, '록': 7597, '걸어가다': 7598, '짜릿하다': 7599, '앞서서': 7600, '마상': 7601, '쇼핑중독': 7602, '가전제품': 7603, '바랬는데': 7604, '선하다': 7605, '양약': 7606, '버거운': 7607, '슈퍼마켓': 7608, '다녀가다': 7609, '허수아비': 7610, '클래스': 7611, '저걸': 7612, '왜소하다': 7613, '실속': 7614, '표면': 7615, '수면시간': 7616, '표기': 7617, '갑상샘': 7618, '사이즈': 7619, '등쌀': 7620, '실무': 7621, '골칫': 7622, '외교': 7623, '외교관': 7624, '동문': 7625, '사경': 7626, '무력감': 7627, '화환': 7628, '담담하다': 7629, '호기롭': 7630, '기막히다': 7631, '반등': 7632, '파운데이션': 7633, '팔뚝': 7634, '세수': 7635, '밥맛': 7636, '짠하다': 7637, '태아': 7638, '나이트클럽': 7639, '울음': 7640, '외향': 7641, '역무': 7642, '치유': 7643, '하와이': 7644, '응낙': 7645, '당구': 7646, '워질': 7647, '복용량': 7648, '성분': 7649, '시안': 7650, '고사하고': 7651, '업로드': 7652, '뛰어넘다': 7653, '행세': 7654, '부터도': 7655, '감정노동': 7656, '노동조합': 7657, '응대': 7658, '새집': 7659, '느릿느릿': 7660, '추스': 7661, '퇴보하다': 7662, '퇴보': 7663, '누군데': 7664, '냉전': 7665, '비웃음': 7666, '쓰래': 7667, '어지간하다': 7668, '개별': 7669, '내진': 7670, '헛되이': 7671, '알코올중독': 7672, '부음': 7673, '허덕거리다': 7674, '입담': 7675, '생머리': 7676, '변동': 7677, '프랑스': 7678, '복기': 7679, '속사정': 7680, '부간': 7681, '의하다': 7682, '안개': 7683, '싸인': 7684, '법인': 7685, '식비': 7686, '하녀': 7687, '상담사': 7688, '이리저리': 7689, '피부염': 7690, '결절': 7691, '무르': 7692, '향기롭다': 7693, '반전': 7694, '오차': 7695, '점장님': 7696, '선처': 7697, '시신': 7698, '어번': 7699, '파벌': 7700, '거주': 7701, '기획사': 7702, '입양': 7703, '혈연': 7704, '기적처럼': 7705, '아침식사': 7706, '나무': 7707, '더미': 7708, '혈색': 7709, '끝없이': 7710, '묵묵': 7711, '내정': 7712, '명함': 7713, '엠아르아': 7714, '생사': 7715, '금일봉': 7716, '쉅': 7717, '나래': 7718, '기관지': 7719, '가트': 7720, '오신': 7721, '미모': 7722, '조폭': 7723, '단원': 7724, '던': 7725, '방지': 7726, '목걸이': 7727, '자라나다': 7728, '출가': 7729, '궁핍하다': 7730, '실시간': 7731, '회선': 7732, '천구백': 7733, '이십일': 7734, '화투': 7735, '뽑기': 7736, '메뚜기': 7737, '글쓰기': 7738, '계약해지': 7739, '껏': 7740, '알코올중독자': 7741, '질부': 7742, '물러나다': 7743, '포인트': 7744, '들쭉날쭉': 7745, '가주': 7746, '붉다': 7747, '반점': 7748, '저작물': 7749, '커리큘럼': 7750, '롯데': 7751, '월드': 7752, '광주': 7753, '지루함': 7754, '권리금': 7755, '박도': 7756, '가정부': 7757, '복잡': 7758, '전출': 7759, '흑': 7760, '갑지': 7761, '신용하': 7762, '공약': 7763, '동분서주': 7764, '최고급': 7765, '누우': 7766, '실의': 7767, '잠기다': 7768, '휙': 7769, '살랑': 7770, '채권': 7771, '자루': 7772, '썰매': 7773, '청사진': 7774, '모의': 7775, '손잡다': 7776, '일체': 7777, '손수레': 7778, '갓길': 7779, '이승': 7780, '등골': 7781, '서늘하다': 7782, '실랑이': 7783, '가요': 7784, '포교': 7785, '신념': 7786, '언닌': 7787, '베프': 7788, '몸종': 7789, '무임': 7790, '승차': 7791, '흠집': 7792, '그린': 7793, '죽마고우': 7794, '전락': 7795, '싸': 7796, '배반': 7797, '뒤로': 7798, '아슬아슬하다': 7799, '손상': 7800, '시신경': 7801, '쎄다': 7802, '발걸음': 7803, '귀인': 7804, '운수': 7805, '쭉쭉': 7806, '의젓하다': 7807, '목구멍': 7808, '보스': 7809, '체통': 7810, '하여금': 7811, '애틋하다': 7812, '은행원': 7813, '모의투자': 7814, '작작하다': 7815, '손가락질': 7816, '들러리': 7817, '혁신': 7818, '어렵사리': 7819, '친우': 7820, '이차': 7821, '세계대전': 7822, '배경인': 7823, '나치': 7824, '따끔': 7825, '가쁘': 7826, '왈칵': 7827, '봉투': 7828, '애완동물': 7829, '밤샘': 7830, '잠재우다': 7831, '발품': 7832, '쑤다': 7833, '도망치다': 7834, '점심식사': 7835, '치약': 7836, '아나운서': 7837, '침수': 7838, '터전': 7839, '뜨겁다': 7840, '캠핑카': 7841, '날카로워지다': 7842, '나일': 7843, '주요': 7844, '극진하다': 7845, '억하심정': 7846, '특근': 7847, '섬유': 7848, '유연제': 7849, '피신': 7850, '쫓아오다': 7851, '뽀뽀': 7852, '홈페이지': 7853, '어휘': 7854, '비틀': 7855, '원점': 7856, '동글동글': 7857, '팔고': 7858, '유행어': 7859, '명감': 7860, '크림': 7861, '얼음': 7862, '괘씸': 7863, '객': 7864, '돌침대': 7865, '시위': 7866, '소나타': 7867, '그랜저': 7868, '책임자': 7869, '금은': 7870, '체념하다': 7871, '라던가': 7872, '적극성': 7873, '엠티': 7874, '사막': 7875, '우물가': 7876, '아쿠아': 7877, '로빅': 7878, '남하': 7879, '차주': 7880, '시들하다': 7881, '어린시절': 7882, '무서움': 7883, '파트': 7884, '치근대다': 7885, '대리인': 7886, '사들이다': 7887, '동학': 7888, '행렬': 7889, '야말로': 7890, '떠다니다': 7891, '어머': 7892, '닌데': 7893, '연하': 7894, '복층': 7895, '테라스': 7896, '통지': 7897, '푼돈': 7898, '맹장': 7899, '소수만': 7900, '정보라': 7901, '노안': 7902, '알맞다': 7903, '은둔': 7904, '불로': 7905, '날벼락': 7906, '막둥이': 7907, '유지시': 7908, '성문': 7909, '나태하다': 7910, '창밖': 7911, '피시': 7912, '화제': 7913, '여당': 7914, '정치인': 7915, '퍼뜨릴까': 7916, '대식': 7917, '뜨끔하다': 7918, '위인': 7919, '삐뚤어지다': 7920, '사만': 7921, '프로포즈': 7922, '사먹다': 7923, '천이': 7924, '래서야': 7925, '대로는': 7926, '생채기': 7927, '곪아': 7928, '재물': 7929, '치부': 7930, '백지장': 7931, '불의': 7932, '새아빠': 7933, '자만하다': 7934, '종말': 7935, '현관문': 7936, '거르': 7937, '사로자다': 7938, '원자력': 7939, '닥치': 7940, '임박': 7941, '올케': 7942, '수많다': 7943, '깜박깜박': 7944, '해짐': 7945, '잊힌': 7946, '동고동락': 7947, '베짱이': 7948, '발음': 7949, '병색': 7950, '완연': 7951, '가령': 7952, '물음': 7953, '제하': 7954, '틈나다': 7955, '아른거리다': 7956, '싸고돌다': 7957, '무용지물': 7958, '사망자': 7959, '삼십오': 7960, '어째서': 7961, '청결': 7962, '가랬는데': 7963, '열한': 7964, '시인': 7965, '몸싸움': 7966, '으로까지': 7967, '낄낄대다': 7968, '표절': 7969, '긋다': 7970, '단합': 7971, '상품화': 7972, '어림없다': 7973, '대졸': 7974, '간판': 7975, '화살': 7976, '랍시고': 7977, '찌뿌둥해': 7978, '패거리': 7979, '우두머리': 7980, '자글자글': 7981, '비로소': 7982, '조가': 7983, '플러스': 7984, '앙갚음': 7985, '온천': 7986, '냉대': 7987, '동력': 7988, '하루걸러': 7989, '투덕거릴': 7990, '의식주': 7991, '사로잡히다': 7992, '초점': 7993, '영양사': 7994, '적응력': 7995, '사진작가': 7996, '본기': 7997, '갑상샘암': 7998, '살균제': 7999, '피상': 8000, '부패': 8001, '편두통': 8002, '상도': 8003, '참을성': 8004, '결코': 8005, '스승': 8006, '곳곳': 8007, '예술': 8008, '임무': 8009, '집사': 8010, '고약하다': 8011, '내다보다': 8012, '친아빠': 8013, '허벅지': 8014, '돼지고기': 8015, '가정사': 8016, '감옥': 8017, '걸남': 8018, '습성': 8019, '버르장머리': 8020, '철면피': 8021, '불화': 8022, '남자라면': 8023, '상급자': 8024, '돈일': 8025, '전해질': 8026, '대내': 8027, '고교생': 8028, '장학': 8029, '찹찹하다': 8030, '원만': 8031, '과언': 8032, '늘어지다': 8033, '증진': 8034, '세균': 8035, '보석': 8036, '엑셀': 8037, '밸런스': 8038, '들끓다': 8039, '금제': 8040, '파전': 8041, '배터리': 8042, '방전': 8043, '후각': 8044, '낫기': 8045, '오르내리다': 8046, '끈': 8047, '주민등록': 8048, '차후': 8049, '재판매': 8050, '탱탱하다': 8051, '거슬러': 8052, '리액션': 8053, '휘감다': 8054, '천벌': 8055, '사륜': 8056, '안산': 8057, '숙소': 8058, '강화하다': 8059, '툴툴댔거': 8060, '앤': 8061, '한달음': 8062, '본의': 8063, '건설업': 8064, '차수': 8065, '심리학': 8066, '머물다': 8067, '지민': 8068, '올가을': 8069, '채진': 8070, '첩': 8071, '불사': 8072, '도주': 8073, '먹이': 8074, '단보': 8075, '심사숙고': 8076, '반문': 8077, '모호하다': 8078, '손버릇': 8079, '자기방어': 8080, '중턱': 8081, '팔짱': 8082, '시냐': 8083, '즙': 8084, '동등': 8085, '리스크': 8086, '배상도': 8087, '뎌': 8088, '산걸': 8089, '방면': 8090, '문외한': 8091, '줄넘기': 8092, '개정': 8093, '과대': 8094, '싯': 8095, '장모': 8096, '과학자': 8097, '내려지다': 8098, '점포': 8099, '일임': 8100, '이용도': 8101, '난이도': 8102, '태동': 8103, '툴툴댔어': 8104, '경고': 8105, '아사': 8106, '꽁무니': 8107, '피크': 8108, '추후': 8109, '과만': 8110, '더럽히다': 8111, '지하': 8112, '액정': 8113, '깨트린': 8114, '서면': 8115, '가슴속': 8116, '잊혀지다': 8117, '잠꼬대': 8118, '체감': 8119, '업자': 8120, '조성': 8121, '알차다': 8122, '안하무인': 8123, '삼지': 8124, '각서': 8125, '봉인': 8126, '영화배우': 8127, '남김없이': 8128, '시종': 8129, '존대': 8130, '짤릴까봐': 8131, '인식': 8132, '시험관': 8133, '공평': 8134, '서프라이즈': 8135, '퍼뜨려': 8136, '볼꼴': 8137, '발짝': 8138, '자판기': 8139, '이시고': 8140, '재무제표': 8141, '멀미': 8142, '실정': 8143, '봉양': 8144, '촛불': 8145, '웨딩홀': 8146, '허니문': 8147, '군것질': 8148, '칼로리': 8149, '얽히다': 8150, '단물': 8151, '행적': 8152, '확연': 8153, '결격': 8154, '장수': 8155, '규정': 8156, '꽃병': 8157, '거처': 8158, '전송': 8159, '비일비재': 8160, '멍청이': 8161, '무선': 8162, '이어폰': 8163, '만으론': 8164, '식인': 8165, '의류': 8166, '윤택': 8167, '경위서': 8168, '맥북': 8169, '기절': 8170, '싸하다': 8171, '개살구': 8172, '리라': 8173, '수학과': 8174, '융합': 8175, '학문': 8176, '브리핑': 8177, '통원': 8178, '우물쭈물': 8179, '찬사': 8180, '답례': 8181, '처녀': 8182, '개학': 8183, '아비': 8184, '심리상담': 8185, '완강': 8186, '삭막하다': 8187, '설령': 8188, '농어촌': 8189, '마리': 8190, '스파게티': 8191, '팔다리': 8192, '다솜': 8193, '소희': 8194, '논란': 8195, '모집': 8196, '기류': 8197, '구급차': 8198, '로써': 8199, '자동': 8200, '꿈속': 8201, '남친': 8202, '선도': 8203, '까닥': 8204, '복를': 8205, '낙인찍히다': 8206, '막노동': 8207, '범주': 8208, '확고하다': 8209, '건드': 8210, '짜장면': 8211, '오순도순하다': 8212, '간당간당': 8213, '무일푼': 8214, '같이만': 8215, '도덕': 8216, '더욱이': 8217, '호불호': 8218, '수제': 8219, '비누': 8220, '재결합': 8221, '우쭐대다': 8222, '해둘': 8223, '해하': 8224, '러신': 8225, '여사': 8226, '뻐근하다': 8227, '주된': 8228, '혼쭐': 8229, '화방': 8230, '대장염': 8231, '자만': 8232, '사유재산': 8233, '적폐': 8234, '빌붙다': 8235, '전담': 8236, '망막': 8237, '병약하다': 8238, '어쩌겠다': 8239, '비합리적': 8240, '헛거': 8241, '꺼림칙하다': 8242, '뭉술': 8243, '기다림': 8244, '안락하다': 8245, '선사': 8246, '무식하다': 8247, '부수입': 8248, '씨아이': 8249, '겹친': 8250, '얹혀살다': 8251, '백일': 8252, '조마조마': 8253, '위궤양': 8254, '천하': 8255, '샌들': 8256, '퍼뜨리면': 8257, '부조': 8258, '요구사항': 8259, '정착': 8260, '삐걱': 8261, '손사래': 8262, '야유회': 8263, '요긴': 8264, '이세': 8265, '주례': 8266, '메이커': 8267, '공세': 8268, '워킹': 8269, '세로': 8270, '띄우다': 8271, '수영장': 8272, '휴강': 8273, '해마다': 8274, '기죽다': 8275, '그나저나': 8276, '쫓아가다': 8277, '신혼부부': 8278, '자그마치': 8279, '삼백만': 8280, '진취': 8281, '논의': 8282, '되레': 8283, '떨어트렸으': 8284, '미필': 8285, '군필': 8286, '사대': 8287, '치자': 8288, '휴게': 8289, '전무': 8290, '엄습해': 8291, '어설프다': 8292, '화끈': 8293, '명동': 8294, '친구사이': 8295, '기상': 8296, '맨발': 8297, '격일': 8298, '안면': 8299, '차감': 8300, '목욕탕': 8301, '뒷정리': 8302, '관광지': 8303, '발리다': 8304, '뻘뻘': 8305, '통탄': 8306, '엄수': 8307, '말더': 8308, '첫사랑': 8309, '둘러보다': 8310, '후보': 8311, '차기': 8312, '에요': 8313, '숙면': 8314, '열자': 8315, '결승': 8316, '진출': 8317, '위원장': 8318, '벽지': 8319, '저택': 8320, '건축물': 8321, '농사짓다': 8322, '적반하장': 8323, '한때': 8324, '허위': 8325, '내쉬다': 8326, '굴렸다': 8327, '믹스': 8328, '대시': 8329, '격투기': 8330, '꿀꺽': 8331, '영민': 8332, '언론사': 8333, '각기': 8334, '매월': 8335, '베이비부머': 8336, '병가': 8337, '지로': 8338, '거린': 8339, '최저생계비': 8340, '특약': 8341, '수산시장': 8342, '신선하다': 8343, '직도': 8344, '만취': 8345, '문책': 8346, '재수없다': 8347, '치루길': 8348, '외손녀': 8349, '괴리감': 8350, '십억': 8351, '운동복': 8352, '먼일': 8353, '산악회': 8354, '헉헉대다': 8355, '힘차다': 8356, '나마': 8357, '그딴': 8358, '박약하다': 8359, '거해': 8360, '적합하다': 8361, '젖병': 8362, '쇼': 8363, '스키': 8364, '비속어': 8365, '단번': 8366, '펀드매니저': 8367, '대다수': 8368, '쑥떡': 8369, '창의': 8370, '멱살': 8371, '보온병': 8372, '까탈': 8373, '잡아당기다': 8374, '후줄근하다': 8375, '감겨': 8376, '교무': 8377, '산악': 8378, '지피다': 8379, '국회의원': 8380, '추근대다': 8381, '이론': 8382, '출입': 8383, '명부': 8384, '적히다': 8385, '트릴': 8386, '부침개': 8387, '감개': 8388, '성당': 8389, '에서까지도': 8390, '격의': 8391, '딱딱하다': 8392, '파괴': 8393, '나아가다': 8394, '당일': 8395, '엇갈리다': 8396, '최우수상': 8397, '팔리다': 8398, '한턱': 8399, '큰집': 8400, '두절': 8401, '장인어른': 8402, '고꾸라지다': 8403, '실었는데': 8404, '혼사': 8405, '헤엄': 8406, '상극': 8407, '처참하다': 8408, '뒷방': 8409, '구덩이': 8410, '산채': 8411, '천문학': 8412, '홀라당': 8413, '꼬면': 8414, '만반': 8415, '갈팡질팡': 8416, '콧물': 8417, '어리바리하다': 8418, '은인': 8419, '회식비': 8420, '신작': 8421, '십년지기': 8422, '양수': 8423, '프리랜서': 8424, '민간': 8425, '헌': 8426, '난도': 8427, '애착': 8428, '보유': 8429, '경리': 8430, '내과': 8431, '과민성': 8432, '헐다': 8433, '똑바르다': 8434, '황무지': 8435, '재주': 8436, '도산': 8437, '쇠고기': 8438, '넓어지다': 8439, '삼겹살': 8440, '마켓': 8441, '속세': 8442, '슬러지': 8443, '퍼붓다': 8444, '버니': 8445, '거역': 8446, '당일치기': 8447, '예시': 8448, '수치심': 8449, '응징': 8450, '집수': 8451, '리해': 8452, '대주': 8453, '코딩': 8454, '걷어차다': 8455, '친한척': 8456, '어떤': 8457, '지우개': 8458, '트로피': 8459, '학군': 8460, '타협': 8461, '제조': 8462, '조제': 8463, '불가하다': 8464, '전면': 8465, '건들': 8466, '만족감': 8467, '사십이': 8468, '메다': 8469, '관리인': 8470, '머나멀다': 8471, '소장': 8472, '신병': 8473, '이도': 8474, '갑각류': 8475, '콩': 8476, '고물': 8477, '흐리다': 8478, '태인': 8479, '육아법': 8480, '타이어': 8481, '펑크': 8482, '쓸리다': 8483, '저급하다': 8484, '퇴임': 8485, '전조': 8486, '부질': 8487, '단결': 8488, '미스터리': 8489, '장르': 8490, '제트': 8491, '허울': 8492, '논술': 8493, '곤충': 8494, '채집': 8495, '장단점': 8496, '독해': 8497, '우엉': 8498, '맞대다': 8499, '백업': 8500, '퇴': 8501, '행성': 8502, '물티슈': 8503, '패': 8504, '라켓': 8505, '팔씨름': 8506, '가중': 8507, '볼품': 8508, '계속드': 8509, '으로부터도': 8510, '요지': 8511, '환경미화원': 8512, '앤데': 8513, '소지': 8514, '이든지': 8515, '원활': 8516, '잇다': 8517, '졸다': 8518, '헬기': 8519, '위험수위': 8520, '백두산': 8521, '배움': 8522, '덕인': 8523, '사고방식': 8524, '욱하': 8525, '홈': 8526, '트레이닝': 8527, '식물인간': 8528, '오버': 8529, '드림': 8530, '카': 8531, '끌': 8532, '눈감다': 8533, '굽히다': 8534, '무뎌': 8535, '협의': 8536, '비공개': 8537, '백일이': 8538, '흉보다': 8539, '종잣돈': 8540, '설계서': 8541, '군소리': 8542, '또다른': 8543, '발송': 8544, '내란': 8545, '제철': 8546, '유채꽃': 8547, '벚꽃': 8548, '어쩌란': 8549, '유령': 8550, '빈손': 8551, '아버': 8552, '소품': 8553, '잡아내다': 8554, '승소': 8555, '쌤통': 8556, '미용사': 8557, '수건': 8558, '오피스': 8559, '외상': 8560, '피땀': 8561, '데이터': 8562, '일전': 8563, '불멍': 8564, '모기지론': 8565, '독약': 8566, '친밀하다': 8567, '도리도': 8568, '어쩐': 8569, '살로': 8570, '계급': 8571, '파손': 8572, '군중': 8573, '정통': 8574, '대자보': 8575, '국가고시': 8576, '고배': 8577, '한턱내다': 8578, '멋': 8579, '부하라': 8580, '부사': 8581, '소설가': 8582, '호주': 8583, '애기': 8584, '동양인': 8585, '딴지': 8586, '위임장': 8587, '혹은': 8588, '아이스': 8589, '코디': 8590, '색감': 8591, '굿': 8592, '즈': 8593, '세관': 8594, '어쩌냐': 8595, '밤중': 8596, '에서조차': 8597, '둥글둥글하다': 8598, '얼마간': 8599, '토사': 8600, '곽란': 8601, '보관': 8602, '제이': 8603, '작곡': 8604, '군말': 8605, '정적': 8606, '법대': 8607, '쏟아내다': 8608, '금실': 8609, '견고하다': 8610, '살피': 8611, '첫걸음': 8612, '교과': 8613, '수강': 8614, '창피': 8615, '물불': 8616, '우월하다': 8617, '경쟁심': 8618, '자고만': 8619, '살다보면': 8620, '사채': 8621, '사업자': 8622, '은연중': 8623, '사고뭉치': 8624, '빨갛다': 8625, '하반신': 8626, '상급': 8627, '제테크': 8628, '노무사': 8629, '가정불화': 8630, '수억': 8631, '할부': 8632, '안과': 8633, '의절': 8634, '금수': 8635, '보전': 8636, '고대': 8637, '번번하다': 8638, '노령': 8639, '한구석': 8640, '더없이': 8641, '대외': 8642, '민우': 8643, '덜렁대다': 8644, '목도': 8645, '안정화': 8646, '수영모': 8647, '임도': 8648, '담화': 8649, '흐트러져': 8650, '성장기': 8651, '고달프다': 8652, '지침': 8653, '아홉시': 8654, '농약': 8655, '크릴': 8656, '오일이': 8657, '매스컴': 8658, '추출': 8659, '용매': 8660, '회수': 8661, '인파': 8662, '달걀': 8663, '견과류': 8664, '틀어주다': 8665, '지향': 8666, '인물': 8667, '빗': 8668, '어그러지다': 8669, '다혈질': 8670, '거저': 8671, '의아': 8672, '국토': 8673, '대장정': 8674, '따내다': 8675, '작심삼일': 8676, '말귀': 8677, '사오정': 8678, '사방': 8679, '둘러싸이다': 8680, '정육면체': 8681, '연상녀': 8682, '들고나다': 8683, '파트너': 8684, '하나라': 8685, '야무지다': 8686, '와르르': 8687, '살바': 8688, '머슴': 8689, '앓이': 8690, '트림': 8691, '뀔': 8692, '삭제': 8693, '트이다': 8694, '빗대다': 8695, '들것': 8696, '실전': 8697, '영심': 8698, '툴툴대다': 8699, '동일': 8700, '수립': 8701, '쌓이네': 8702, '곱슬곱슬하다': 8703, '대걸레': 8704, '자랑거리다': 8705, '단말': 8706, '해산물': 8707, '인간미': 8708, '오른쪽': 8709, '안쪽': 8710, '바른길': 8711, '대접받다': 8712, '처신': 8713, '구부리다': 8714, '다급해지다': 8715, '콩나물': 8716, '선풍기': 8717, '틀어놓다': 8718, '재롱': 8719, '농촌': 8720, '번역': 8721, '말좀': 8722, '아궁이': 8723, '굴뚝': 8724, '엉터리': 8725, '쟁이': 8726, '말론': 8727, '버킷리스트': 8728, '모니터': 8729, '어저께': 8730, '손수': 8731, '부속': 8732, '암만': 8733, '금단현상': 8734, '짐짝': 8735, '심각': 8736, '호': 8737, '음악회': 8738, '빡빡': 8739, '애하': 8740, '매물': 8741, '검증': 8742, '준수': 8743, '스런': 8744, '깐깐하다': 8745, '춧': 8746, '구멍': 8747, '정비': 8748, '다물다': 8749, '서슴없이': 8750, '비겁하다': 8751, '투입': 8752, '수칙': 8753, '라니깐': 8754, '며느라': 8755, '가량': 8756, '아드님': 8757, '왼쪽': 8758, '안건': 8759, '눈물나다': 8760, '이억': 8761, '장본인': 8762, '도달': 8763, '애경': 8764, '진척': 8765, '까맣다': 8766, '토익시험': 8767, '환하다': 8768, '휴대': 8769, '미비하다': 8770, '지도사': 8771, '흥이': 8772, '원본': 8773, '잔뇨감': 8774, '퇴화': 8775, '예측': 8776, '공단': 8777, '가까스로': 8778, '빠져나오다': 8779, '사치하다': 8780, '떤다': 8781, '효': 8782, '바자회': 8783, '오메가': 8784, '불결하다': 8785, '삼시': 8786, '길길이': 8787, '날뛰다': 8788, '화내': 8789, '부근': 8790, '가줄': 8791, '초록색': 8792, '티셔츠': 8793, '게걸': 8794, '밑바탕': 8795, '내려다보다': 8796, '공금': 8797, '낭비벽': 8798, '초코': 8799, '출렁': 8800, '거렸': 8801, '식성': 8802, '전교생': 8803, '이삼일': 8804, '일거수일투족': 8805, '대모': 8806, '취지': 8807, '로망': 8808, '부정맥': 8809, '무인도': 8810, '도끼': 8811, '말끝': 8812, '얼룩': 8813, '툴툴대는': 8814, '업주': 8815, '용어': 8816, '툴툴거리더': 8817, '소방관': 8818, '툴툴대기': 8819, '대규모': 8820, '집회': 8821, '이례': 8822, '처우': 8823, '다스리다': 8824, '근거리': 8825, '소수': 8826, '감염병': 8827, '임원진': 8828, '이마': 8829, '눈가': 8830, '전략기획': 8831, '발치': 8832, '이민하': 8833, '공항': 8834, '완고하다': 8835, '후식': 8836, '터치': 8837, '면제': 8838, '수동': 8839, '노려보다': 8840, '선곡': 8841, '잠복': 8842, '조로': 8843, '각질': 8844, '계절': 8845, '정황': 8846, '설레임': 8847, '습기': 8848, '호스피스': 8849, '초경': 8850, '과체중': 8851, '담양': 8852, '이모작': 8853, '허튼': 8854, '시점': 8855, '미라': 8856, '웨어': 8857, '공수도': 8858, '요소': 8859, '탁월하다': 8860, '분별': 8861, '인턴십': 8862, '편파': 8863, '전용': 8864, '정의': 8865, '외치다': 8866, '때매': 8867, '쌀쌀하다': 8868, '사립학교': 8869, '정교': 8870, '확산': 8871, '삼사십': 8872, '로맨스': 8873, '예매': 8874, '분열': 8875, '아웃': 8876, '시늉': 8877, '속초': 8878, '기어이': 8879, '멀뚱멀뚱': 8880, '비키다': 8881, '고래고래': 8882, '복귀': 8883, '간혹': 8884, '혼하': 8885, '칠십이': 8886, '환영': 8887, '최상': 8888, '불과': 8889, '전의': 8890, '촬영': 8891, '오리엔테이션': 8892, '부단하다': 8893, '대학가': 8894, '컷': 8895, '여지': 8896, '옥수수': 8897, '휘었다': 8898, '수없이': 8899, '먼지': 8900, '알선': 8901, '시끌벅적하다': 8902, '부모뻘': 8903, '부둥켜안다': 8904, '라이딩': 8905, '세대차이': 8906, '바꿔치다': 8907, '병시': 8908, '비치다': 8909, '배당': 8910, '관리사': 8911, '매뉴얼': 8912, '정독': 8913, '하나님': 8914, '기성세대': 8915, '잔잔하다': 8916, '해물': 8917, '랴': 8918, '편입': 8919, '인심': 8920, '일률': 8921, '방석': 8922, '아래': 8923, '갈기갈기': 8924, '다른사람': 8925, '노발': 8926, '대발': 8927, '박봉': 8928, '만만': 8929, '부품': 8930, '줄어드': 8931, '현식': 8932, '비수': 8933, '일반인': 8934, '냅다': 8935, '탁구': 8936, '철도': 8937, '앙금': 8938, '떨구다': 8939, '훈계': 8940, '주관': 8941, '자막': 8942, '빵점': 8943, '빗다': 8944, '방탄소년단': 8945, '구실': 8946, '아이엠': 8947, '에프': 8948, '희끗': 8949, '역류성': 8950, '식도염': 8951, '캐러멜': 8952, '마키아토': 8953, '유행병': 8954, '외지': 8955, '질도': 8956, '외제차': 8957, '불가능': 8958, '짤려': 8959, '소인배': 8960, '가죽공예': 8961, '퀼팅': 8962, '궁전': 8963, '떄': 8964, '햄스터': 8965, '젓갈': 8966, '류': 8967, '수나': 8968, '냉랭하다': 8969, '욕구불만': 8970, '도벽': 8971, '안남': 8972, '올인': 8973, '김치찌개': 8974, '흩어지다': 8975, '등산로': 8976, '산행': 8977, '생필품': 8978, '여느': 8979, '뇌혈관': 8980, '심부전증': 8981, '개인정보': 8982, '바이어': 8983, '후딱': 8984, '순이익': 8985, '가물': 8986, '수험': 8987, '소셜': 8988, '페이지': 8989, '전단지': 8990, '보드': 8991, '지문': 8992, '사월': 8993, '일억이': 8994, '공경심': 8995, '야박하다': 8996, '지자체': 8997, '토지대장': 8998, '글자': 8999, '미숙아': 9000, '할증': 9001, '료': 9002, '문장': 9003, '크리스마스': 9004, '껌': 9005, '패치': 9006, '야위다': 9007, '복지사': 9008, '인부': 9009, '전립선': 9010, '흠': 9011, '웹서핑': 9012, '부적절하다': 9013, '비뇨기': 9014, '술벗': 9015, '넌지시': 9016, '밭': 9017, '수확': 9018, '경솔하다': 9019, '비행청소년': 9020, '어우러지다': 9021, '주먹다짐': 9022, '앞일': 9023, '곤혹': 9024, '절감': 9025, '에스프레소': 9026, '이기주의': 9027, '조신': 9028, '공백': 9029, '냉동': 9030, '문뜩': 9031, '막바지': 9032, '덜덜': 9033, '불공정': 9034, '가계비': 9035, '서점': 9036, '유괴': 9037, '이사장': 9038, '차려입다': 9039, '학폭': 9040, '위도': 9041, '전직': 9042, '찻잔': 9043, '출판사': 9044, '욕구': 9045, '복숭아': 9046, '난해하다': 9047, '줌바': 9048, '중위': 9049, '번개': 9050, '협력': 9051, '노련': 9052, '미가': 9053, '미심': 9054, '쩍더': 9055, '끝일': 9056, '압수': 9057, '암벽': 9058, '어쨌든': 9059, '맘속': 9060, '멘탈': 9061, '돋보기': 9062, '부랴부랴': 9063, '어딘': 9064, '찝찝하다': 9065, '청력': 9066, '삼고': 9067, '구심': 9068, '집요하다': 9069, '도박중독': 9070, '움직임': 9071, '키스': 9072, '불미': 9073, '방광암': 9074, '림프샘': 9075, '항해': 9076, '함흥차사': 9077, '타입': 9078, '놀걸': 9079, '매체': 9080, '룰': 9081, '뒤엎': 9082, '시지': 9083, '스리': 9084, '위급하다': 9085, '상온': 9086, '버벅거린': 9087, '매너리즘': 9088, '직문': 9089, '차일': 9090, '엉거주춤': 9091, '이력': 9092, '축구선수': 9093, '어쩌자': 9094, '일주': 9095, '크루즈': 9096, '알바생': 9097, '시시각각': 9098, '장단': 9099, '요일': 9100, '꾸역꾸역': 9101, '시원시원하다': 9102, '회칙': 9103, '놀이기구': 9104, '경식': 9105, '나이키': 9106, '버는': 9107, '불량하다': 9108, '속임수': 9109, '투어': 9110, '까봐': 9111, '나흘': 9112, '젠틀': 9113, '아토피': 9114, '핼쑥': 9115, '보신탕': 9116, '증상만': 9117, '라인': 9118, '조촐하다': 9119, '부실하다': 9120, '탁': 9121, '겨자': 9122, '노동부': 9123, '삐쩍': 9124, '패스트푸드': 9125, '상벌': 9126, '세워지다': 9127, '충족': 9128, '허리띠': 9129, '무지개다리': 9130, '외아들': 9131, '질의': 9132, '퉁퉁': 9133, '창작': 9134, '뒤끝': 9135, '직후': 9136, '체력장': 9137, '홍수': 9138, '싱글벙글': 9139, '이천팔': 9140, '모기지': 9141, '야뇨증': 9142, '푸셔': 9143, '수백': 9144, '제삿날': 9145, '소속': 9146, '보충': 9147, '살찐': 9148, '미미하다': 9149, '교외': 9150, '아래층': 9151, '작품': 9152, '감상': 9153, '굴다': 9154, '으로써': 9155, '사례': 9156, '족족': 9157, '솔로인': 9158, '청계산': 9159, '벤치': 9160, '어처구니없다': 9161, '불필요하다': 9162, '뒷일': 9163, '맞힌': 9164, '늘씬하다': 9165, '돋보이다': 9166, '미네': 9167, '파산': 9168, '편협': 9169, '인터뷰': 9170, '사치품': 9171, '공정': 9172, '다과': 9173, '난소암': 9174, '선량하다': 9175, '시민': 9176, '무릅쓰': 9177, '실족': 9178, '주연': 9179, '채운': 9180, '봉변': 9181, '가족사진': 9182, '진중하다': 9183, '술수': 9184, '밤하늘': 9185, '반짝이다': 9186, '징징거리다': 9187, '뛰어오다': 9188, '도난': 9189, '신부전증': 9190, '미덕': 9191, '껄끄러우': 9192, '박다': 9193, '가책': 9194, '당사자': 9195, '천대': 9196, '어평생': 9197, '앞장서다': 9198, '영혼': 9199, '미지근하다': 9200, '고충': 9201, '버젓이': 9202, '육십만원': 9203, '가만있다': 9204, '허드': 9205, '렛': 9206, '불입': 9207, '묶이다': 9208, '경비원': 9209, '국산': 9210, '방사': 9211, '능': 9212, '아누': 9213, '패션': 9214, '인스턴트식품': 9215, '시라': 9216, '이삼십': 9217, '감점': 9218, '팩': 9219, '진가': 9220, '천원': 9221, '누적': 9222, '과금': 9223, '롤': 9224, '정나미': 9225, '조종사': 9226, '행방': 9227, '일당': 9228, '깃': 9229, '육신': 9230, '식모': 9231, '십구': 9232, '헛소리': 9233, '예습': 9234, '품목': 9235, '구식': 9236, '유물': 9237, '친지': 9238, '수명': 9239, '얌전하다': 9240, '수강생': 9241, '안이하다': 9242, '막대': 9243, '미디어': 9244, '이던': 9245, '요령': 9246, '피팅': 9247, '참혹하다': 9248, '틱': 9249, '요술': 9250, '공주': 9251, '한일': 9252, '단조': 9253, '고요함': 9254, '드세다': 9255, '마시기': 9256, '조선': 9257, '잔해': 9258, '우왕좌왕': 9259, '가스': 9260, '부들': 9261, '초행길': 9262, '가점': 9263, '뚜렷': 9264, '담요': 9265, '행실': 9266, '토악질': 9267, '탄력': 9268, '강화': 9269, '복학': 9270, '빗집': 9271, '알더': 9272, '덕목': 9273, '미성년': 9274, '유머러스하다': 9275, '교내': 9276, '그다음': 9277, '주얼': 9278, '데이': 9279, '반바지': 9280, '박카스': 9281, '채권자': 9282, '어머님께': 9283, '쑥': 9284, '수술대': 9285, '애니': 9286, '고교': 9287, '문고': 9288, '저장': 9289, '운반': 9290, '삐그덕거릴까': 9291, '구나': 9292, '성가': 9293, '분과': 9294, '싼값': 9295, '아이러니': 9296, '미관': 9297, '이거지': 9298, '군다': 9299, '생동감': 9300, '주년': 9301, '감명': 9302, '사교성': 9303, '배구': 9304, '연명': 9305, '어깃장': 9306, '시중금리': 9307, '알거지': 9308, '뱀술': 9309, '미신': 9310, '인건비': 9311, '핀': 9312, '중매': 9313, '개설': 9314, '결리다': 9315, '떨떠름하다': 9316, '사이클': 9317, '택했어': 9318, '모금': 9319, '선글라스': 9320, '경황': 9321, '강탈': 9322, '불효': 9323, '위아래': 9324, '빈도': 9325, '그제야': 9326, '입막음': 9327, '속기': 9328, '개수': 9329, '고향이': 9330, '단란': 9331, '안지': 9332, '합치': 9333, '통근': 9334, '폐품': 9335, '팔천': 9336, '통째': 9337, '화합': 9338, '놨거': 9339, '이맘때': 9340, '초임': 9341, '사천': 9342, '돕기': 9343, '단장': 9344, '주름살': 9345, '응그': 9346, '깨끗해지다': 9347, '짓궂다': 9348, '엘': 9349, '자백': 9350, '선별': 9351, '턱턱': 9352, '조각': 9353, '이십여': 9354, '사물함': 9355, '골프채': 9356, '보강': 9357, '분출': 9358, '보내오다': 9359, '기승': 9360, '일대': 9361, '둔감하다': 9362, '찬밥': 9363, '더하기': 9364, '그러냬': 9365, '번복': 9366, '극성': 9367, '애프터눈': 9368, '특허': 9369, '족저': 9370, '근막': 9371, '격해지다': 9372, '점도': 9373, '착잡': 9374, '모텔': 9375, '드나들다': 9376, '타당': 9377, '버는데': 9378, '기지': 9379, '국경': 9380, '분간': 9381, '불편': 9382, '홈트': 9383, '진부하다': 9384, '희로애락': 9385, '전국': 9386, '답사': 9387, '강매': 9388, '손재주': 9389, '악행': 9390, '간지럽다': 9391, '커다랗다': 9392, '팁': 9393, '적임': 9394, '활약': 9395, '알기': 9396, '예방접종': 9397, '통통하다': 9398, '쌍': 9399, '형평성': 9400, '유방': 9401, '민간요법': 9402, '수줍음': 9403, '내막': 9404, '명순': 9405, '내규': 9406, '의무감': 9407, '납작하다': 9408, '둥글다': 9409, '동기부여': 9410, '가안': 9411, '기정': 9412, '애비': 9413, '프린터': 9414, '연대': 9415, '형체': 9416, '미수': 9417, '유산소운동': 9418, '채식주의자': 9419, '컨설팅': 9420, '척해': 9421, '빠듯할까': 9422, '쪽방': 9423, '수첩': 9424, '저녁밥': 9425, '버벅거렸더': 9426, '편법': 9427, '활달': 9428, '여파': 9429, '공공장소': 9430, '부주의': 9431, '스카웃': 9432, '사의': 9433, '될런': 9434, '헬스뿐': 9435, '시렁': 9436, '파쇄': 9437, '솟다': 9438, '색도': 9439, '볼링': 9440, '현미': 9441, '근교': 9442, '못줄': 9443, '신입생': 9444, '회유': 9445, '인큐베이터': 9446, '유명인': 9447, '세련되다': 9448, '해체': 9449, '빵빵': 9450, '뻥튀기': 9451, '나신': 9452, '천사처럼': 9453, '뒷이야기': 9454, '내숭': 9455, '일제': 9456, '부유': 9457, '뀌어': 9458, '빼기': 9459, '하트': 9460, '돌연사': 9461, '중대하다': 9462, '피싱': 9463, '식견': 9464, '특성화고': 9465, '행복감': 9466, '느': 9467, '교통혼잡': 9468, '핵가족': 9469, '대가족': 9470, '깜빡깜빡': 9471, '캥거루': 9472, '거미줄': 9473, '나은지': 9474, '분전': 9475, '학': 9476, '습량': 9477, '통신비': 9478, '아득해지다': 9479, '다가서다': 9480, '쌈짓돈': 9481, '수평': 9482, '택했': 9483, '실격': 9484, '작자': 9485, '보건복지부': 9486, '떄문': 9487, '항시': 9488, '환급금': 9489, '글로벌': 9490, '가려지다': 9491, '이의신청': 9492, '조상': 9493, '무지하다': 9494, '저축량': 9495, '그까짓': 9496, '가혹하다': 9497, '신문지': 9498, '낯빛': 9499, '철부지': 9500, '복인': 9501, '타오': 9502, '어보': 9503, '후분': 9504, '반하다': 9505, '보완': 9506, '초래': 9507, '처량하다': 9508, '효능': 9509, '한옆': 9510, '새해': 9511, '식대': 9512, '정상화': 9513, '작별': 9514, '벌칙': 9515, '통폐합': 9516, '건다': 9517, '지독하다': 9518, '선천': 9519, '절절': 9520, '연구원': 9521, '화상회의': 9522, '집들이': 9523, '구십오': 9524, '자장면': 9525, '검산': 9526, '약학': 9527, '수집': 9528, '산지': 9529, '친한친구': 9530, '차가워지다': 9531, '높이': 9532, '패딩': 9533, '재킷': 9534, '팍': 9535, '김태희': 9536, '전지현': 9537, '오뚝하다': 9538, '트와이스': 9539, '나연': 9540, '골고루': 9541, '월드컵': 9542, '변치': 9543, '혹사': 9544, '민수': 9545, '포상': 9546, '박동': 9547, '흙': 9548, '다시금': 9549, '잡다하다': 9550, '일감': 9551, '아우': 9552, '자게': 9553, '영리': 9554}\n"]}],"source":["print(tokenizer.word_index)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hC7JKBnGlOhz","outputId":"b084fe6a-7bdf-4ee3-e1bb-40f47a702ac8"},"outputs":[{"name":"stdout","output_type":"stream","text":["단어 집합(vocabulary)의 크기 : 9554\n","등장 빈도가 3번 이하인 희귀 단어의 수: 5191\n","단어 집합에서 희귀 단어의 비율: 54.33326355453213\n","전체 등장 빈도에서 희귀 단어 등장 빈도 비율: 2.1873000421107895\n"]}],"source":["threshold = 4\n","total_cnt = len(tokenizer.word_index) # 단어의 수\n","rare_cnt = 0 # 등장 빈도수가 threshold보다 작은 단어의 개수를 카운트\n","total_freq = 0 # 훈련 데이터의 전체 단어 빈도수 총 합\n","rare_freq = 0 # 등장 빈도수가 threshold보다 작은 단어의 등장 빈도수의 총 합\n","\n","# 단어와 빈도수의 쌍(pair)을 key와 value로 받는다.\n","for key, value in tokenizer.word_counts.items():\n","    total_freq = total_freq + value\n","\n","    # 단어의 등장 빈도수가 threshold보다 작으면\n","    if(value < threshold):\n","        rare_cnt = rare_cnt + 1\n","        rare_freq = rare_freq + value\n","\n","print('단어 집합(vocabulary)의 크기 :',total_cnt)\n","print('등장 빈도가 %s번 이하인 희귀 단어의 수: %s'%(threshold - 1, rare_cnt))\n","print(\"단어 집합에서 희귀 단어의 비율:\", (rare_cnt / total_cnt)*100)\n","print(\"전체 등장 빈도에서 희귀 단어 등장 빈도 비율:\", (rare_freq / total_freq)*100)"]},{"cell_type":"markdown","metadata":{"id":"NwYHGHRmlZPu"},"source":["등장 빈도가 threshold 값인 4회 미만. 즉, 3회 이하인 단어들은 단어 집합에서 무려 절반 을 차지. 하지만, 실제로 훈련 데이터에서 등장 빈도로 차지하는 비중은 상대적으로 매우 적은 수치인 2.18%밖에 되지\b 않음. 등장 빈도가 3회 이하인 단어들은 자연어 처리에서 별로 중요하지 않다고 생각. 그래서 이 단어들은 정수 인코딩 과정에서 배제."]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"synwbGp7lT9T","outputId":"b7aef90c-acaa-464b-a9e4-ae826be7f94d"},"outputs":[{"name":"stdout","output_type":"stream","text":["단어 집합의 크기 : 4364\n"]}],"source":["# 전체 단어 개수 중 빈도수 3이하인 단어는 제거.\n","# 0번 패딩 토큰을 고려하여 + 1\n","vocab_size = total_cnt - rare_cnt + 1\n","print('단어 집합의 크기 :',vocab_size)\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"dV8gzGoRlmrb"},"outputs":[],"source":["tokenizer = Tokenizer(vocab_size) \n","tokenizer.fit_on_texts(X_train)\n","X_train = tokenizer.texts_to_sequences(X_train)\n","X_test = tokenizer.texts_to_sequences(X_test)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WC9dYIwElonV","outputId":"9fedfdac-3bac-461b-daef-fa8cf4bb3ebd"},"outputs":[{"name":"stdout","output_type":"stream","text":["[[525, 71, 39, 1011, 5], [169, 47, 246, 84, 18, 25, 20, 65], [678, 330, 1107, 33, 1, 17, 1029, 107, 87, 97, 515, 93, 40, 530, 315, 1, 141, 27, 4, 7, 265]]\n"]}],"source":["print(X_train[:3])"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"pMzKptvYmvPp"},"outputs":[],"source":["y_train = np.array(train_data['label'])\n","y_test = np.array(test_data['label'])"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"o2-K3594mrlm"},"outputs":[],"source":["drop_train = [index for index, sentence in enumerate(X_train) if len(sentence) < 1]"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"k3Vl5jIGm5Fu","outputId":"4911cd00-436b-4ff0-f06a-9625cec4ff9b"},"outputs":[{"name":"stdout","output_type":"stream","text":["33469\n","33469\n"]},{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/numpy/lib/function_base.py:4454: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.\n","  arr = asarray(arr)\n"]}],"source":["# 빈 샘플들을 제거\n","X_train = np.delete(X_train, drop_train, axis=0)\n","y_train = np.delete(y_train, drop_train, axis=0)\n","print(len(X_train))\n","print(len(y_train))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":315},"id":"-KmFwwK2m7DE","outputId":"b022222d-ad46-4ad7-9aa8-9308a2bfb12b"},"outputs":[{"name":"stdout","output_type":"stream","text":["채팅의 최대 길이 : 40\n","채팅의 평균 길이 : 10.687591502584482\n"]},{"data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["print('채팅의 최대 길이 :',max(len(review) for review in X_train))\n","print('채팅의 평균 길이 :',sum(map(len, X_train))/len(X_train))\n","plt.hist([len(review) for review in X_train], bins=50)\n","plt.xlabel('length of samples')\n","plt.ylabel('number of samples')\n","plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Qk91PHJKnIkA"},"outputs":[],"source":["def below_threshold_len(max_len, nested_list):\n","  count = 0\n","  for sentence in nested_list:\n","    if(len(sentence) <= max_len):\n","        count = count + 1\n","  print('전체 샘플 중 길이가 %s 이하인 샘플의 비율: %s'%(max_len, (count / len(nested_list))*100))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"U61XGpT4nMyP","outputId":"fe3ecbb5-f12a-4fbc-94e4-acca9f5dfe4d"},"outputs":[{"name":"stdout","output_type":"stream","text":["전체 샘플 중 길이가 20 이하인 샘플의 비율: 98.40449371059786\n"]}],"source":["max_len = 20\n","below_threshold_len(max_len, X_train)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"WiVkxOZSnQ55"},"outputs":[],"source":["X_train = pad_sequences(X_train, maxlen=max_len)\n","X_test = pad_sequences(X_test, maxlen=max_len)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PkYpCk5roFE7","outputId":"d8ff8850-25bf-492f-f980-9d6da70496d0"},"outputs":[{"data":{"text/plain":["array([[   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,\n","           0,    0,    0,    0,  525,   71,   39, 1011,    5],\n","       [   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,\n","           0,  169,   47,  246,   84,   18,   25,   20,   65],\n","       [ 330, 1107,   33,    1,   17, 1029,  107,   87,   97,  515,   93,\n","          40,  530,  315,    1,  141,   27,    4,    7,  265],\n","       [   0,    0,    0,    0,    0,    0,    0,    0,    0,    0,  710,\n","          36,  481, 1530,  125,   18,   12,  141,   49,   15],\n","       [   8,   94, 1194,  684, 1607,   65,   34,  179,   21,  503,   57,\n","        3839,  311,  228,  126,  791,    4,  163,   16,  316]],\n","      dtype=int32)"]},"execution_count":266,"metadata":{},"output_type":"execute_result"}],"source":["X_train[:5]"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sEniCRu4oBpq","outputId":"580168a1-cc1f-4cef-cf47-06b23d68fa36"},"outputs":[{"data":{"text/plain":["array([1, 0, 1, 1, 0])"]},"execution_count":267,"metadata":{},"output_type":"execute_result"}],"source":["y_train[:5]"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1ilXfVWBn3SI","outputId":"2ce4beb8-422d-44d6-c91a-d1455ce6b114"},"outputs":[{"name":"stdout","output_type":"stream","text":["33469\n","5104\n","33469\n","5104\n"]}],"source":["print(len(X_train))\n","print(len(X_test))\n","print(len(y_train))\n","print(len(y_test))"]},{"cell_type":"markdown","metadata":{"id":"GkWZ-pn4nYpJ"},"source":["# LSTM 을이용한 분류"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7HxhvsIunVXV","outputId":"c835b8bf-1b26-4ce3-a0b8-d5af439367dd"},"outputs":[{"name":"stdout","output_type":"stream","text":["Epoch 1/15\n","415/419 [============================>.] - ETA: 0s - loss: 0.3519 - acc: 0.8546\n","Epoch 1: val_acc improved from -inf to 0.88393, saving model to best_model.h5\n","419/419 [==============================] - 11s 8ms/step - loss: 0.3517 - acc: 0.8546 - val_loss: 0.2995 - val_acc: 0.8839\n","Epoch 2/15\n","419/419 [==============================] - ETA: 0s - loss: 0.2808 - acc: 0.8895\n","Epoch 2: val_acc improved from 0.88393 to 0.88647, saving model to best_model.h5\n","419/419 [==============================] - 3s 6ms/step - loss: 0.2808 - acc: 0.8895 - val_loss: 0.2876 - val_acc: 0.8865\n","Epoch 3/15\n","414/419 [============================>.] - ETA: 0s - loss: 0.2645 - acc: 0.8955\n","Epoch 3: val_acc improved from 0.88647 to 0.88841, saving model to best_model.h5\n","419/419 [==============================] - 3s 6ms/step - loss: 0.2647 - acc: 0.8954 - val_loss: 0.3007 - val_acc: 0.8884\n","Epoch 4/15\n","419/419 [==============================] - ETA: 0s - loss: 0.2540 - acc: 0.9018\n","Epoch 4: val_acc did not improve from 0.88841\n","419/419 [==============================] - 3s 6ms/step - loss: 0.2540 - acc: 0.9018 - val_loss: 0.2822 - val_acc: 0.8883\n","Epoch 5/15\n","417/419 [============================>.] - ETA: 0s - loss: 0.2428 - acc: 0.9065\n","Epoch 5: val_acc did not improve from 0.88841\n","419/419 [==============================] - 3s 6ms/step - loss: 0.2427 - acc: 0.9065 - val_loss: 0.2919 - val_acc: 0.8827\n","Epoch 6/15\n","414/419 [============================>.] - ETA: 0s - loss: 0.2330 - acc: 0.9117\n","Epoch 6: val_acc did not improve from 0.88841\n","419/419 [==============================] - 3s 6ms/step - loss: 0.2334 - acc: 0.9116 - val_loss: 0.3004 - val_acc: 0.8857\n","Epoch 7/15\n","417/419 [============================>.] - ETA: 0s - loss: 0.2231 - acc: 0.9147\n","Epoch 7: val_acc did not improve from 0.88841\n","419/419 [==============================] - 3s 6ms/step - loss: 0.2231 - acc: 0.9147 - val_loss: 0.2858 - val_acc: 0.8878\n","Epoch 8/15\n","415/419 [============================>.] - ETA: 0s - loss: 0.2133 - acc: 0.9184\n","Epoch 8: val_acc improved from 0.88841 to 0.88915, saving model to best_model.h5\n","419/419 [==============================] - 3s 6ms/step - loss: 0.2128 - acc: 0.9186 - val_loss: 0.3060 - val_acc: 0.8892\n","Epoch 8: early stopping\n"]}],"source":["from tensorflow.keras.layers import Embedding, Dense, LSTM\n","from tensorflow.keras.models import Sequential\n","from tensorflow.keras.models import load_model\n","from tensorflow.keras.callbacks import EarlyStopping, ModelCheckpoint\n","\n","embedding_dim = 100\n","hidden_units = 128\n","\n","model = Sequential()\n","model.add(Embedding(vocab_size, embedding_dim))\n","model.add(LSTM(hidden_units))\n","model.add(Dense(1, activation='sigmoid'))\n","\n","es = EarlyStopping(monitor='val_loss', mode='min', verbose=1, patience=4)\n","mc = ModelCheckpoint('best_model.h5', monitor='val_acc', mode='max', verbose=1, save_best_only=True)\n","\n","model.compile(optimizer='rmsprop', loss='binary_crossentropy', metrics=['acc'])\n","history = model.fit(X_train, y_train, epochs=15, callbacks=[es, mc], batch_size=64, validation_split=0.2)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KQRNwkSzqggF","outputId":"3b5ff693-65cd-4c9c-d361-f41a2c15e075"},"outputs":[{"name":"stdout","output_type":"stream","text":["160/160 [==============================] - 1s 3ms/step - loss: 0.2773 - acc: 0.8948\n","\n"," 테스트 정확도: 0.8948\n"]}],"source":["loaded_model = load_model('best_model.h5')\n","print(\"\\n 테스트 정확도: %.4f\" % (loaded_model.evaluate(X_test, y_test)[1]))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"8i-JZ0T_qn2W"},"outputs":[],"source":["def sentiment_predict(new_sentence):\n","  new_sentence = re.sub(r'[^ㄱ-ㅎㅏ-ㅣ가-힣 ]','', new_sentence)\n","  new_sentence = okt.morphs(new_sentence, stem=True) # 토큰화\n","  new_sentence = [word for word in new_sentence if not word in stopwords] # 불용어 제거\n","  encoded = tokenizer.texts_to_sequences([new_sentence]) # 정수 인코딩\n","  pad_new = pad_sequences(encoded, maxlen = max_len) # 패딩\n","  score = float(loaded_model.predict(pad_new)) # 예측\n","  if(score > 0.5):\n","    print(\"{:.2f}% 확률로 기쁨 입니다.\\n\".format(score * 100))\n","  else:\n","    print(\"{:.2f}% 확률로 부정 입니다.\\n\".format((1 - score) * 100))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HdfaaqCqqwee","outputId":"52a332f2-3cbe-4803-ecda-95e009e1def8"},"outputs":[{"name":"stdout","output_type":"stream","text":["97.15% 확률로 부정 입니다.\n","\n"]}],"source":["sentiment_predict('정말 죽고싶어요.')"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"euWuV8MBqy2y","outputId":"01baaf6e-0a12-4c4d-9cd2-3e6cee73c201"},"outputs":[{"name":"stdout","output_type":"stream","text":["95.52% 확률로 기쁨 입니다.\n","\n"]}],"source":["sentiment_predict('오늘은 날씨가 정말 맑네요!')"]},{"cell_type":"markdown","metadata":{"id":"lO6W2uyMq8Dm"},"source":["# 틀린 예측"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Cx795zrGq4f-","outputId":"291ae2f8-2e93-4846-b9e6-eb5e23dabd6a"},"outputs":[{"name":"stdout","output_type":"stream","text":["74.38% 확률로 기쁨 입니다.\n","\n"]}],"source":["sentiment_predict('오늘 날씨는 제 기분처럼 너무 흐려요')"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7RqqOZM0rA7U","outputId":"671041da-1831-4254-ba6b-ce3c1b12d032"},"outputs":[{"name":"stdout","output_type":"stream","text":["58.18% 확률로 기쁨 입니다.\n","\n"]}],"source":["sentiment_predict('오늘 제 기분은 너무 흐리네요')"]},{"cell_type":"markdown","metadata":{"id":"BLmue0yJnpJr"},"source":["# 1D CNN"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"_-x2rRzMnah2"},"outputs":[],"source":["from tensorflow.keras.models import Sequential, Model\n","from tensorflow.keras.layers import Embedding, Dropout, Conv1D, GlobalMaxPooling1D, Dense, Input, Flatten, Concatenate\n","from tensorflow.keras.callbacks import EarlyStopping, ModelCheckpoint\n","from tensorflow.keras.models import load_model\n","\n","embedding_dim = 128\n","dropout_ratio = (0.5, 0.8)\n","num_filters = 128\n","hidden_units = 128"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"3ZeQJfzjntXA"},"outputs":[],"source":["model_input = Input(shape = (max_len,))\n","z = Embedding(vocab_size, embedding_dim, input_length = max_len, name=\"embedding\")(model_input)\n","z = Dropout(dropout_ratio[0])(z)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"_cFg_YGNn1Dk"},"outputs":[],"source":["conv_blocks = []\n","\n","for sz in [3, 4, 5]:\n","    conv = Conv1D(filters = num_filters,\n","                         kernel_size = sz,\n","                         padding = \"valid\",\n","                         activation = \"relu\",\n","                         strides = 1)(z)\n","    conv = GlobalMaxPooling1D()(conv)\n","    conv_blocks.append(conv)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RDE8O0OgtQGT","outputId":"042a6c47-fcc4-405a-e8b9-6628d70871b9"},"outputs":[{"name":"stdout","output_type":"stream","text":["Epoch 1/10\n","\n","Epoch 1: val_acc improved from -inf to 0.87915, saving model to CNN_model.h5\n","419/419 - 12s - loss: 0.4305 - acc: 0.8196 - val_loss: 0.3165 - val_acc: 0.8791 - 12s/epoch - 28ms/step\n","Epoch 2/10\n","\n","Epoch 2: val_acc improved from 0.87915 to 0.88527, saving model to CNN_model.h5\n","419/419 - 2s - loss: 0.3043 - acc: 0.8780 - val_loss: 0.3036 - val_acc: 0.8853 - 2s/epoch - 6ms/step\n","Epoch 3/10\n","\n","Epoch 3: val_acc did not improve from 0.88527\n","419/419 - 2s - loss: 0.2697 - acc: 0.8919 - val_loss: 0.3036 - val_acc: 0.8784 - 2s/epoch - 5ms/step\n","Epoch 4/10\n","\n","Epoch 4: val_acc did not improve from 0.88527\n","419/419 - 2s - loss: 0.2443 - acc: 0.9041 - val_loss: 0.3069 - val_acc: 0.8812 - 2s/epoch - 5ms/step\n","Epoch 5/10\n","\n","Epoch 5: val_acc did not improve from 0.88527\n","419/419 - 2s - loss: 0.2263 - acc: 0.9094 - val_loss: 0.3168 - val_acc: 0.8772 - 2s/epoch - 5ms/step\n","Epoch 6/10\n","\n","Epoch 6: val_acc did not improve from 0.88527\n","419/419 - 2s - loss: 0.2069 - acc: 0.9199 - val_loss: 0.3304 - val_acc: 0.8744 - 2s/epoch - 5ms/step\n","Epoch 6: early stopping\n"]},{"data":{"text/plain":["<keras.callbacks.History at 0x7f35c6076e50>"]},"execution_count":280,"metadata":{},"output_type":"execute_result"}],"source":["z = Concatenate()(conv_blocks) if len(conv_blocks) > 1 else conv_blocks[0]\n","z = Dropout(dropout_ratio[1])(z)\n","z = Dense(hidden_units, activation=\"relu\")(z)\n","model_output = Dense(1, activation=\"sigmoid\")(z)\n","\n","model = Model(model_input, model_output)\n","model.compile(loss=\"binary_crossentropy\", optimizer=\"adam\", metrics=[\"acc\"])\n","\n","es = EarlyStopping(monitor='val_loss', mode='min', verbose=1, patience=4)\n","mc = ModelCheckpoint('CNN_model.h5', monitor='val_acc', mode='max', verbose=1, save_best_only=True)\n","\n","model.fit(X_train, y_train, batch_size=64, epochs=10, validation_split=0.2, verbose=2, callbacks=[es, mc])\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EEMXHcN0tSZJ","outputId":"9e803839-f6eb-4a5b-975a-4e2abf6c3f83"},"outputs":[{"name":"stdout","output_type":"stream","text":["160/160 [==============================] - 1s 4ms/step - loss: 0.2875 - acc: 0.8870\n","\n"," 테스트 정확도: 0.8870\n"]}],"source":["loaded_model = load_model('CNN_model.h5')\n","print(\"\\n 테스트 정확도: %.4f\" % (loaded_model.evaluate(X_test, y_test)[1]))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NReqdkw2tlQm","outputId":"c41505ee-a024-4472-e73a-5c03d58d369c"},"outputs":[{"name":"stdout","output_type":"stream","text":["85.50% 확률로 기쁨 입니다.\n","\n"]}],"source":["sentiment_predict('오늘은 날씨가 정말 맑네요!')"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iHomnlxTtlNQ","outputId":"61345ca5-82cd-4fcc-8ceb-5ef2feae7ffa"},"outputs":[{"name":"stdout","output_type":"stream","text":["89.65% 확률로 부정 입니다.\n","\n"]}],"source":["sentiment_predict('정말 죽고싶어요.')"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FNSTo5p7taSQ","outputId":"1139684e-efae-433e-b0cf-5472cc7aff83"},"outputs":[{"name":"stdout","output_type":"stream","text":["56.12% 확률로 부정 입니다.\n","\n"]}],"source":["sentiment_predict('오늘 날씨는 제 기분처럼 너무 흐려요')"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XvN1Q4putpSa","outputId":"3317c395-23f4-4aeb-c190-510e0d0a4479"},"outputs":[{"name":"stdout","output_type":"stream","text":["98.23% 확률로 부정 입니다.\n","\n"]}],"source":["sentiment_predict('\b오늘은 무슨 큰일이라도 날거 같네요..')"]},{"cell_type":"markdown","metadata":{"id":"MFMDMTKXtj3D"},"source":["# 틀린예측"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":169},"id":"NzACAmCmtfTV","outputId":"d293a3e5-1670-41d8-fe46-91ee44fbb3a4"},"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-1-ab10a72f4a1c>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0msentiment_predict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'오늘 제 기분은 너무 흐리네요'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mNameError\u001b[0m: name 'sentiment_predict' is not defined"]}],"source":["sentiment_predict('오늘 제 기분은 너무 흐리네요')"]},{"cell_type":"markdown","metadata":{"id":"h8DIZUPgxnvX"},"source":["## 원하는것 \n","- 사람문장 1이랑 사람문장 2가 곱해져서 좀더 높은 정확도를 분석할수있지않을까?"]},{"cell_type":"markdown","metadata":{"id":"KksSDjiiIyL8"},"source":["---"]},{"cell_type":"markdown","source":["# KOBERT이용"],"metadata":{"id":"dTRSZWl3XjCo"}},{"cell_type":"code","source":["pip install transformers"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"eAdOPTTrWnCe","outputId":"4eb1c3bb-5500-4470-f01a-c9f6a95fe108"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Requirement already satisfied: transformers in /usr/local/lib/python3.7/dist-packages (4.20.1)\n","Requirement already satisfied: tqdm>=4.27 in /usr/local/lib/python3.7/dist-packages (from transformers) (4.64.0)\n","Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.7/dist-packages (from transformers) (21.3)\n","Requirement already satisfied: importlib-metadata in /usr/local/lib/python3.7/dist-packages (from transformers) (4.11.4)\n","Requirement already satisfied: pyyaml>=5.1 in /usr/local/lib/python3.7/dist-packages (from transformers) (6.0)\n","Requirement already satisfied: huggingface-hub<1.0,>=0.1.0 in /usr/local/lib/python3.7/dist-packages (from transformers) (0.8.1)\n","Requirement already satisfied: regex!=2019.12.17 in /usr/local/lib/python3.7/dist-packages (from transformers) (2022.6.2)\n","Requirement already satisfied: filelock in /usr/local/lib/python3.7/dist-packages (from transformers) (3.7.1)\n","Requirement already satisfied: numpy>=1.17 in /usr/local/lib/python3.7/dist-packages (from transformers) (1.21.6)\n","Requirement already satisfied: tokenizers!=0.11.3,<0.13,>=0.11.1 in /usr/local/lib/python3.7/dist-packages (from transformers) (0.12.1)\n","Requirement already satisfied: requests in /usr/local/lib/python3.7/dist-packages (from transformers) (2.23.0)\n","Requirement already satisfied: typing-extensions>=3.7.4.3 in /usr/local/lib/python3.7/dist-packages (from huggingface-hub<1.0,>=0.1.0->transformers) (4.1.1)\n","Requirement already satisfied: pyparsing!=3.0.5,>=2.0.2 in /usr/local/lib/python3.7/dist-packages (from packaging>=20.0->transformers) (3.0.9)\n","Requirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.7/dist-packages (from importlib-metadata->transformers) (3.8.0)\n","Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests->transformers) (3.0.4)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests->transformers) (2022.6.15)\n","Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.7/dist-packages (from requests->transformers) (2.10)\n","Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests->transformers) (1.24.3)\n"]}]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/gdrive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jxWSwRkx9dDK","executionInfo":{"status":"ok","timestamp":1655877065484,"user_tz":-540,"elapsed":38983,"user":{"displayName":"박효신","userId":"01395991773766866172"}},"outputId":"e0be8bf8-76d5-4c82-bbd2-c1ddb732d7e3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/gdrive\n"]}]},{"cell_type":"code","source":["pip install transformers"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uMz60aqkE1ZE","outputId":"4ae9de98-8acf-499f-f115-3d9e9f4fb706"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Collecting transformers\n","  Downloading transformers-4.20.1-py3-none-any.whl (4.4 MB)\n","\u001b[K     |████████████████████████████████| 4.4 MB 5.0 MB/s \n","\u001b[?25hCollecting tokenizers!=0.11.3,<0.13,>=0.11.1\n","  Downloading tokenizers-0.12.1-cp37-cp37m-manylinux_2_12_x86_64.manylinux2010_x86_64.whl (6.6 MB)\n","\u001b[K     |████████████████████████████████| 6.6 MB 43.1 MB/s \n","\u001b[?25hRequirement already satisfied: importlib-metadata in /usr/local/lib/python3.7/dist-packages (from transformers) (4.11.4)\n","Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.7/dist-packages (from transformers) (21.3)\n","Requirement already satisfied: numpy>=1.17 in /usr/local/lib/python3.7/dist-packages (from transformers) (1.21.6)\n","Requirement already satisfied: regex!=2019.12.17 in /usr/local/lib/python3.7/dist-packages (from transformers) (2022.6.2)\n","Requirement already satisfied: filelock in /usr/local/lib/python3.7/dist-packages (from transformers) (3.7.1)\n","Requirement already satisfied: requests in /usr/local/lib/python3.7/dist-packages (from transformers) (2.23.0)\n","Collecting pyyaml>=5.1\n","  Downloading PyYAML-6.0-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl (596 kB)\n","\u001b[K     |████████████████████████████████| 596 kB 56.7 MB/s \n","\u001b[?25hCollecting huggingface-hub<1.0,>=0.1.0\n","  Downloading huggingface_hub-0.8.1-py3-none-any.whl (101 kB)\n","\u001b[K     |████████████████████████████████| 101 kB 9.7 MB/s \n","\u001b[?25hRequirement already satisfied: tqdm>=4.27 in /usr/local/lib/python3.7/dist-packages (from transformers) (4.64.0)\n","Requirement already satisfied: typing-extensions>=3.7.4.3 in /usr/local/lib/python3.7/dist-packages (from huggingface-hub<1.0,>=0.1.0->transformers) (4.1.1)\n","Requirement already satisfied: pyparsing!=3.0.5,>=2.0.2 in /usr/local/lib/python3.7/dist-packages (from packaging>=20.0->transformers) (3.0.9)\n","Requirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.7/dist-packages (from importlib-metadata->transformers) (3.8.0)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests->transformers) (2022.6.15)\n","Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests->transformers) (3.0.4)\n","Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.7/dist-packages (from requests->transformers) (2.10)\n","Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests->transformers) (1.24.3)\n","Installing collected packages: pyyaml, tokenizers, huggingface-hub, transformers\n","  Attempting uninstall: pyyaml\n","    Found existing installation: PyYAML 3.13\n","    Uninstalling PyYAML-3.13:\n","      Successfully uninstalled PyYAML-3.13\n","Successfully installed huggingface-hub-0.8.1 pyyaml-6.0 tokenizers-0.12.1 transformers-4.20.1\n"]}]},{"cell_type":"code","source":["import transformers\n","import pandas as pd\n","import numpy as np\n","import urllib.request\n","import os\n","from tqdm import tqdm\n","import tensorflow as tf\n","from transformers import BertTokenizer, TFBertModel"],"metadata":{"id":"fiWu83FtXlrW"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["train_data = pd.read_excel('/content/감성대화말뭉치(최종데이터)_Training.xlsx')\n","test_data = pd.read_excel('/content/감성대화말뭉치(최종데이터)_Validation.xlsx')"],"metadata":{"id":"AjmGWBa3Xm2x"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print('훈련용 말뭉치 개수 :',len(train_data)) \n","print('테스트용 말뭉치 개수 :',len(test_data)) "],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aX1x9sQLXxgg","outputId":"92230563-0729-401c-d08e-36fdfd57586d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["훈련용 말뭉치 개수 : 40879\n","테스트용 말뭉치 개수 : 5130\n"]}]},{"cell_type":"code","source":["train_data[:5]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":858},"id":"UV0MrjKSX5aI","outputId":"7cf31ee6-9408-442b-9400-55a904cf3eef"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      번호   연령  성별       상황키워드    신체질환 감정_대분류   감정_소분류  \\\n","0  44164   청년  남성  연애, 결혼, 출산    해당없음     기쁨     신이 난   \n","1   3926   노년  남성      건강, 죽음  만성질환 유     불안  스트레스 받는   \n","2  50882  청소년  여성     학업 및 진로    해당없음     당황       당황   \n","3  31303   노년  남성          재정  만성질환 무     기쁨     신이 난   \n","4  47200   노년  여성          재정  만성질환 유     기쁨       안도   \n","\n","                                           사람문장1  \\\n","0                      아내가 드디어 출산하게 되어서 정말 신이 나.   \n","1        당뇨랑 합병증 때문에 먹어야 할 약이 열 가지가 넘어가니까 스트레스야.   \n","2        고등학교에 올라오니 중학교 때보다 수업이 갑자기 어려워져서 당황스러워.   \n","3  재취업이 돼서 받게 된 첫 월급으로 온 가족이 외식을 할 예정이야. 너무 행복해.   \n","4                   빚을 드디어 다 갚게 되어서 이제야 안도감이 들어.   \n","\n","                                    시스템응답1  \\\n","0                아내분이 출산을 하시는군요. 정말 축하드려요.   \n","1                       약 종류가 많아 번거로우시겠어요.   \n","2  고등학교 수업이 중학교 때와는 다르게 갑자기 어려워서 당황스러우시군요.   \n","3                  재취업 후 첫 월급이라 정말 기쁘시겠어요.   \n","4           기분 좋으시겠어요. 앞으로는 어떻게 하실 생각이신가요?   \n","\n","                                               사람문장2  \\\n","0                                      아 지금 정말 신이 나.   \n","1                        건강할 때 관리 좀 잘할걸 하는 생각이 들더라고.   \n","2                  아직 학기 초인데 내가 수업에 잘 따라갈 수 있을지 걱정돼.   \n","3  퇴직 후 다시는 돈을 못 벌 줄 알았는데 이렇게 월급으로 가족에게 맛있는 밥을 살 ...   \n","4                  빚도 다 갚았으니 당분간은 아무 생각도 안 하며 살고 싶어.   \n","\n","                                 시스템응답2                               사람문장3  \\\n","0                             잘 된 일이네요.  아기가 점점 클게 벌써 기대가 되네. 내가 많이 놀아줘야지.    \n","1         현재 상황에서 변화를 주기 위해 어떻게 하면 될까요?          약을 잘 챙겨 먹고 나을 수 있도록 노력해야지.   \n","2           이 상황에서 할 수 있는 게 어떤 것이 있을까요?       중학교 수업을 들을 때보다 훨씬 더 열심히 할 거야.   \n","3               이 기분을 유지하려면 어떻게 해야 할까요?           회사생활을 열심히 해서 계속 월급을 받을거야!   \n","4  빚도 다 갚았으니 당분간은 아무 생각도 안 하며 살고 싶으시군요.                                 NaN   \n","\n","                         시스템응답3                                      사람문장4  \\\n","0  좋은 아빠가 되실 거 같아요. 진심으로 축하드려요.                                        NaN   \n","1       약을 잘 챙겨 먹어 건강해지시길 바랄게요.                                        NaN   \n","2    수업을 어떤 방식으로 열심히 듣는게 좋을까요?   선생님이 강조하신 부분을 필기하고 집에서 매일 수업 내용을 복습하려고 해.   \n","3   계속 원하시는 대로 회사생활이 이어지길 바랄게요.                                        NaN   \n","4                           NaN                                        NaN   \n","\n","                     시스템응답4  \n","0                       NaN  \n","1                       NaN  \n","2  열심히 해서 좋은 결과가 있었으면 좋겠어요.  \n","3                       NaN  \n","4                       NaN  "],"text/html":["\n","  <div id=\"df-773df532-54dd-49d3-a967-a8e969c32e67\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>번호</th>\n","      <th>연령</th>\n","      <th>성별</th>\n","      <th>상황키워드</th>\n","      <th>신체질환</th>\n","      <th>감정_대분류</th>\n","      <th>감정_소분류</th>\n","      <th>사람문장1</th>\n","      <th>시스템응답1</th>\n","      <th>사람문장2</th>\n","      <th>시스템응답2</th>\n","      <th>사람문장3</th>\n","      <th>시스템응답3</th>\n","      <th>사람문장4</th>\n","      <th>시스템응답4</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>44164</td>\n","      <td>청년</td>\n","      <td>남성</td>\n","      <td>연애, 결혼, 출산</td>\n","      <td>해당없음</td>\n","      <td>기쁨</td>\n","      <td>신이 난</td>\n","      <td>아내가 드디어 출산하게 되어서 정말 신이 나.</td>\n","      <td>아내분이 출산을 하시는군요. 정말 축하드려요.</td>\n","      <td>아 지금 정말 신이 나.</td>\n","      <td>잘 된 일이네요.</td>\n","      <td>아기가 점점 클게 벌써 기대가 되네. 내가 많이 놀아줘야지.</td>\n","      <td>좋은 아빠가 되실 거 같아요. 진심으로 축하드려요.</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>3926</td>\n","      <td>노년</td>\n","      <td>남성</td>\n","      <td>건강, 죽음</td>\n","      <td>만성질환 유</td>\n","      <td>불안</td>\n","      <td>스트레스 받는</td>\n","      <td>당뇨랑 합병증 때문에 먹어야 할 약이 열 가지가 넘어가니까 스트레스야.</td>\n","      <td>약 종류가 많아 번거로우시겠어요.</td>\n","      <td>건강할 때 관리 좀 잘할걸 하는 생각이 들더라고.</td>\n","      <td>현재 상황에서 변화를 주기 위해 어떻게 하면 될까요?</td>\n","      <td>약을 잘 챙겨 먹고 나을 수 있도록 노력해야지.</td>\n","      <td>약을 잘 챙겨 먹어 건강해지시길 바랄게요.</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>50882</td>\n","      <td>청소년</td>\n","      <td>여성</td>\n","      <td>학업 및 진로</td>\n","      <td>해당없음</td>\n","      <td>당황</td>\n","      <td>당황</td>\n","      <td>고등학교에 올라오니 중학교 때보다 수업이 갑자기 어려워져서 당황스러워.</td>\n","      <td>고등학교 수업이 중학교 때와는 다르게 갑자기 어려워서 당황스러우시군요.</td>\n","      <td>아직 학기 초인데 내가 수업에 잘 따라갈 수 있을지 걱정돼.</td>\n","      <td>이 상황에서 할 수 있는 게 어떤 것이 있을까요?</td>\n","      <td>중학교 수업을 들을 때보다 훨씬 더 열심히 할 거야.</td>\n","      <td>수업을 어떤 방식으로 열심히 듣는게 좋을까요?</td>\n","      <td>선생님이 강조하신 부분을 필기하고 집에서 매일 수업 내용을 복습하려고 해.</td>\n","      <td>열심히 해서 좋은 결과가 있었으면 좋겠어요.</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>31303</td>\n","      <td>노년</td>\n","      <td>남성</td>\n","      <td>재정</td>\n","      <td>만성질환 무</td>\n","      <td>기쁨</td>\n","      <td>신이 난</td>\n","      <td>재취업이 돼서 받게 된 첫 월급으로 온 가족이 외식을 할 예정이야. 너무 행복해.</td>\n","      <td>재취업 후 첫 월급이라 정말 기쁘시겠어요.</td>\n","      <td>퇴직 후 다시는 돈을 못 벌 줄 알았는데 이렇게 월급으로 가족에게 맛있는 밥을 살 ...</td>\n","      <td>이 기분을 유지하려면 어떻게 해야 할까요?</td>\n","      <td>회사생활을 열심히 해서 계속 월급을 받을거야!</td>\n","      <td>계속 원하시는 대로 회사생활이 이어지길 바랄게요.</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>47200</td>\n","      <td>노년</td>\n","      <td>여성</td>\n","      <td>재정</td>\n","      <td>만성질환 유</td>\n","      <td>기쁨</td>\n","      <td>안도</td>\n","      <td>빚을 드디어 다 갚게 되어서 이제야 안도감이 들어.</td>\n","      <td>기분 좋으시겠어요. 앞으로는 어떻게 하실 생각이신가요?</td>\n","      <td>빚도 다 갚았으니 당분간은 아무 생각도 안 하며 살고 싶어.</td>\n","      <td>빚도 다 갚았으니 당분간은 아무 생각도 안 하며 살고 싶으시군요.</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-773df532-54dd-49d3-a967-a8e969c32e67')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-773df532-54dd-49d3-a967-a8e969c32e67 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-773df532-54dd-49d3-a967-a8e969c32e67');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":7}]},{"cell_type":"markdown","source":["# 데이터 전처리"],"metadata":{"id":"R09Ms4dNYBqz"}},{"cell_type":"code","source":["train_data.drop(['번호','연령','성별','상황키워드','신체질환','사람문장3','사람문장4','시스템응답1','시스템응답2','시스템응답3','시스템응답4'], axis=1, inplace=True)"],"metadata":{"id":"UDH_FyUKX7ev"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["train_data['label'] = 0"],"metadata":{"id":"gsLpnP10YLCS"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["for i in range(len(train_data)):\n","  if train_data['감정_대분류'][i] == '기쁨':\n","    train_data['label'][i] = 1\n","  else:\n","    train_data['label'][i] = 0\n","\n","train_data[-5:]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":552},"id":"i9U0zKRUYDKq","outputId":"7f030bbf-7a40-4196-ac02-f7f9c5a5e93c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:3: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  This is separate from the ipykernel package so we can avoid doing imports until\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:5: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  \"\"\"\n"]},{"output_type":"execute_result","data":{"text/plain":["      감정_대분류   감정_소분류                                              사람문장1  \\\n","40874     불안    혼란스러운  같이 사는 친구가 애완견을 데려왔는데 대부분 내가 돌보고 있어. 내가 주인인가 혼란...   \n","40875     기쁨       안도                  지난주에 건강검진 결과가 나왔는데 정상이라고 결과가 나왔어.   \n","40876     슬픔      우울한          엄마는 내 꿈인 작가를 응원해 주고는 했는데 지금은 안 그래. 너무 슬퍼.   \n","40877     기쁨     감사하는            이렇게 좋은 운동 시설에서 경로 우대로 운동할 수 있다니 참 행운이야.   \n","40878     불안  스트레스 받는                친구 관계가 너무 힘들어. 베푸는 만큼 돌아오지 않는 것 같아.   \n","\n","                                                   사람문장2  label  \n","40874                나한테 아예 떠넘길 거 같은데 친구한테 얘기해볼까 고민 중이야.      0  \n","40875                                    결과가 좋게 나와서 다행이야      1  \n","40876   내 재능이 남들보다 월등한 거는 아니라면서 취업해서 안정적으로 살았으면 좋겠다고 하셔.      0  \n","40877  덕분에 건강도 챙길 수 있고 너무 좋아. 안마기도 있던데 내일은 운동하고 안마기도 ...      1  \n","40878                 카페에 가서 대화하거나 같이 술 마시면서 이야기했던 것 같아.      0  "],"text/html":["\n","  <div id=\"df-895a3738-26e9-4a4c-a8fc-af35358f2fe7\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>감정_대분류</th>\n","      <th>감정_소분류</th>\n","      <th>사람문장1</th>\n","      <th>사람문장2</th>\n","      <th>label</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>40874</th>\n","      <td>불안</td>\n","      <td>혼란스러운</td>\n","      <td>같이 사는 친구가 애완견을 데려왔는데 대부분 내가 돌보고 있어. 내가 주인인가 혼란...</td>\n","      <td>나한테 아예 떠넘길 거 같은데 친구한테 얘기해볼까 고민 중이야.</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>40875</th>\n","      <td>기쁨</td>\n","      <td>안도</td>\n","      <td>지난주에 건강검진 결과가 나왔는데 정상이라고 결과가 나왔어.</td>\n","      <td>결과가 좋게 나와서 다행이야</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>40876</th>\n","      <td>슬픔</td>\n","      <td>우울한</td>\n","      <td>엄마는 내 꿈인 작가를 응원해 주고는 했는데 지금은 안 그래. 너무 슬퍼.</td>\n","      <td>내 재능이 남들보다 월등한 거는 아니라면서 취업해서 안정적으로 살았으면 좋겠다고 하셔.</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>40877</th>\n","      <td>기쁨</td>\n","      <td>감사하는</td>\n","      <td>이렇게 좋은 운동 시설에서 경로 우대로 운동할 수 있다니 참 행운이야.</td>\n","      <td>덕분에 건강도 챙길 수 있고 너무 좋아. 안마기도 있던데 내일은 운동하고 안마기도 ...</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>40878</th>\n","      <td>불안</td>\n","      <td>스트레스 받는</td>\n","      <td>친구 관계가 너무 힘들어. 베푸는 만큼 돌아오지 않는 것 같아.</td>\n","      <td>카페에 가서 대화하거나 같이 술 마시면서 이야기했던 것 같아.</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-895a3738-26e9-4a4c-a8fc-af35358f2fe7')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-895a3738-26e9-4a4c-a8fc-af35358f2fe7 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-895a3738-26e9-4a4c-a8fc-af35358f2fe7');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["test_data['label'] = 0"],"metadata":{"id":"avms2J89YJ0y"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["test_data.drop(['번호','연령','성별','상황키워드','신체질환','사람문장3','사람문장4','시스템응답1','시스템응답2','시스템응답3','시스템응답4'], axis=1, inplace=True)"],"metadata":{"id":"VQD0xjEPYWBZ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["test_data[:5]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":354},"id":"loi6tg0JYYBR","outputId":"b5cf554a-b260-410f-9c3a-262a127263f1"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  감정_대분류 감정_소분류                                             사람문장1  \\\n","0     분노   툴툴대는                                   요즘 부모님과 많이 부딪혀.   \n","1     슬픔    비통한                          엄마가 결국 집을 나갔어. 너무 너무 슬퍼.   \n","2     불안  조심스러운                    학교에서 한 친구를 괴롭히는 무리에게 그만하라고 했어.   \n","3     당황   죄책감의  이번에 팀장님이 간단한 조사 업무를 부탁하셨는데 내가 잘못 처리했어. 너무 절망적이야.   \n","4     분노  노여워하는                 남편이 이혼할 때 위자료를 주지 않으려고 변호사를 고용했어.   \n","\n","                                               사람문장2  label  \n","0  난 하고 싶은 일이 있는데 부모님은 안정적인 일만 하라고 하셔. 내 마음대로 하지도...      0  \n","1  엄마도 엄마만의 인생이 있을 테니 가지 말라고 할 수가 없었어. 그래서 더 마음이 ...      0  \n","2                      그런데 말을 하고 난 후 나도 괴롭힐까 봐 불안했어.      0  \n","3               곧 있으면 인턴에서 정규직 전환 평가가 있는데 안 좋을 것 같아.      0  \n","4                             어떻게 그럴 수가 있지? 너무 화가 나.      0  "],"text/html":["\n","  <div id=\"df-bf65644f-8cf6-47eb-ba40-f0ae6798deb2\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>감정_대분류</th>\n","      <th>감정_소분류</th>\n","      <th>사람문장1</th>\n","      <th>사람문장2</th>\n","      <th>label</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>분노</td>\n","      <td>툴툴대는</td>\n","      <td>요즘 부모님과 많이 부딪혀.</td>\n","      <td>난 하고 싶은 일이 있는데 부모님은 안정적인 일만 하라고 하셔. 내 마음대로 하지도...</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>슬픔</td>\n","      <td>비통한</td>\n","      <td>엄마가 결국 집을 나갔어. 너무 너무 슬퍼.</td>\n","      <td>엄마도 엄마만의 인생이 있을 테니 가지 말라고 할 수가 없었어. 그래서 더 마음이 ...</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>불안</td>\n","      <td>조심스러운</td>\n","      <td>학교에서 한 친구를 괴롭히는 무리에게 그만하라고 했어.</td>\n","      <td>그런데 말을 하고 난 후 나도 괴롭힐까 봐 불안했어.</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>당황</td>\n","      <td>죄책감의</td>\n","      <td>이번에 팀장님이 간단한 조사 업무를 부탁하셨는데 내가 잘못 처리했어. 너무 절망적이야.</td>\n","      <td>곧 있으면 인턴에서 정규직 전환 평가가 있는데 안 좋을 것 같아.</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>분노</td>\n","      <td>노여워하는</td>\n","      <td>남편이 이혼할 때 위자료를 주지 않으려고 변호사를 고용했어.</td>\n","      <td>어떻게 그럴 수가 있지? 너무 화가 나.</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bf65644f-8cf6-47eb-ba40-f0ae6798deb2')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-bf65644f-8cf6-47eb-ba40-f0ae6798deb2 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-bf65644f-8cf6-47eb-ba40-f0ae6798deb2');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["for i in range(len(test_data)):\n","  if test_data['감정_대분류'][i] == '기쁨':\n","    test_data['label'][i] = 1\n","  else:\n","    test_data['label'][i] = 0\n","\n","test_data[-5:]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":552},"id":"If3Z5UEYYQG0","outputId":"7976a26b-75bc-4053-e2f8-0393b1905f9b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:5: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  \"\"\"\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:3: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  This is separate from the ipykernel package so we can avoid doing imports until\n"]},{"output_type":"execute_result","data":{"text/plain":["     감정_대분류 감정_소분류                                              사람문장1  \\\n","5125     기쁨     느긋                   부동산 임대 소득으로 현재 여유롭게 살 수 있어서 좋단다.   \n","5126     불안   회의적인  폐결핵은 이미 완치된 것 같은데 약을 한 달이나 더 먹으라고 하네? 아직 안 나은 ...   \n","5127     분노    좌절한    연애하고 싶은데 소개팅만 나가면 꽝이야. 이러다가 난 결혼 못 하고 늙어 죽을 거야.   \n","5128     분노   안달하는       은행 대출이 막혀서 생활비를 구할 수가 없어. 이제 어떻게 살아야 하나 막막해.   \n","5129     분노   짜증내는            자식들은 키워 준 은혜도 모르고 내게 오지도 않네. 너무 외롭고 슬퍼.   \n","\n","                                                  사람문장2  label  \n","5125                         그래서 마음의 안정을 가질 수 있었던 것 같아.      1  \n","5126                         이대로 혹시 더 심해져서 죽게 되는 건 아닐까?      0  \n","5127  내가 게을러서 다른 방법을 아직 생각하진 못했어. 댄스 동호회는 좀 괜찮은 것 같은...      0  \n","5128                          당장 내일 밥은 어떡하고 내 병원비는 어쩌지.      0  \n","5129   응 이제 다들 독립해가지고 명절 아니면 찾아오질 않아. 안부전화라도 해주면 좋을 텐데.      0  "],"text/html":["\n","  <div id=\"df-ffc81437-1de0-40a6-b349-340e605bb752\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>감정_대분류</th>\n","      <th>감정_소분류</th>\n","      <th>사람문장1</th>\n","      <th>사람문장2</th>\n","      <th>label</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>5125</th>\n","      <td>기쁨</td>\n","      <td>느긋</td>\n","      <td>부동산 임대 소득으로 현재 여유롭게 살 수 있어서 좋단다.</td>\n","      <td>그래서 마음의 안정을 가질 수 있었던 것 같아.</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>5126</th>\n","      <td>불안</td>\n","      <td>회의적인</td>\n","      <td>폐결핵은 이미 완치된 것 같은데 약을 한 달이나 더 먹으라고 하네? 아직 안 나은 ...</td>\n","      <td>이대로 혹시 더 심해져서 죽게 되는 건 아닐까?</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>5127</th>\n","      <td>분노</td>\n","      <td>좌절한</td>\n","      <td>연애하고 싶은데 소개팅만 나가면 꽝이야. 이러다가 난 결혼 못 하고 늙어 죽을 거야.</td>\n","      <td>내가 게을러서 다른 방법을 아직 생각하진 못했어. 댄스 동호회는 좀 괜찮은 것 같은...</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>5128</th>\n","      <td>분노</td>\n","      <td>안달하는</td>\n","      <td>은행 대출이 막혀서 생활비를 구할 수가 없어. 이제 어떻게 살아야 하나 막막해.</td>\n","      <td>당장 내일 밥은 어떡하고 내 병원비는 어쩌지.</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>5129</th>\n","      <td>분노</td>\n","      <td>짜증내는</td>\n","      <td>자식들은 키워 준 은혜도 모르고 내게 오지도 않네. 너무 외롭고 슬퍼.</td>\n","      <td>응 이제 다들 독립해가지고 명절 아니면 찾아오질 않아. 안부전화라도 해주면 좋을 텐데.</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ffc81437-1de0-40a6-b349-340e605bb752')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-ffc81437-1de0-40a6-b349-340e605bb752 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-ffc81437-1de0-40a6-b349-340e605bb752');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":14}]},{"cell_type":"markdown","source":["## 사람문장1 이랑 사람문장2 랑 나누는 판다스를 만들고 그이후에 두개를 concat시킨다."],"metadata":{"id":"cMljhs6J0-58"}},{"cell_type":"code","source":["train_data1 = pd.read_excel('/content/감성대화말뭉치(최종데이터)_Training.xlsx')\n","train_data2 = pd.read_excel('/content/감성대화말뭉치(최종데이터)_Training.xlsx')"],"metadata":{"id":"b3cAS63FBjCf"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["train_data1.drop(['번호','연령','성별','상황키워드','신체질환','사람문장2','사람문장3','사람문장4','시스템응답1','시스템응답2','시스템응답3','시스템응답4'], axis=1, inplace=True)\n","train_data2.drop(['번호','연령','성별','상황키워드','신체질환','사람문장1','사람문장3','사람문장4','시스템응답1','시스템응답2','시스템응답3','시스템응답4'], axis=1, inplace=True)"],"metadata":{"id":"jozTgrqzBeNp"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["train_data2.rename(columns={'사람문장2':'사람문장1'},inplace=True)\n","train_data2[:5]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"YZv0RWD10LSV","outputId":"bdbb0fb7-9527-465d-ac55-603c689d63b8"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  감정_대분류   감정_소분류                                              사람문장1\n","0     기쁨     신이 난                                      아 지금 정말 신이 나.\n","1     불안  스트레스 받는                        건강할 때 관리 좀 잘할걸 하는 생각이 들더라고.\n","2     당황       당황                  아직 학기 초인데 내가 수업에 잘 따라갈 수 있을지 걱정돼.\n","3     기쁨     신이 난  퇴직 후 다시는 돈을 못 벌 줄 알았는데 이렇게 월급으로 가족에게 맛있는 밥을 살 ...\n","4     기쁨       안도                  빚도 다 갚았으니 당분간은 아무 생각도 안 하며 살고 싶어."],"text/html":["\n","  <div id=\"df-ce29365a-53fb-4e88-9160-f72bc5a71b43\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>감정_대분류</th>\n","      <th>감정_소분류</th>\n","      <th>사람문장1</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>기쁨</td>\n","      <td>신이 난</td>\n","      <td>아 지금 정말 신이 나.</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>불안</td>\n","      <td>스트레스 받는</td>\n","      <td>건강할 때 관리 좀 잘할걸 하는 생각이 들더라고.</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>당황</td>\n","      <td>당황</td>\n","      <td>아직 학기 초인데 내가 수업에 잘 따라갈 수 있을지 걱정돼.</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>기쁨</td>\n","      <td>신이 난</td>\n","      <td>퇴직 후 다시는 돈을 못 벌 줄 알았는데 이렇게 월급으로 가족에게 맛있는 밥을 살 ...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>기쁨</td>\n","      <td>안도</td>\n","      <td>빚도 다 갚았으니 당분간은 아무 생각도 안 하며 살고 싶어.</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ce29365a-53fb-4e88-9160-f72bc5a71b43')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-ce29365a-53fb-4e88-9160-f72bc5a71b43 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-ce29365a-53fb-4e88-9160-f72bc5a71b43');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["train_datases = pd.concat([train_data1, train_data2])\n","train_datases.reset_index(inplace=True)"],"metadata":{"id":"0ZPRZ9DlCRHe"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["train_datases['label'] = 0"],"metadata":{"id":"3qFkLx00Co6J"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["for i in range(len(train_datases)):\n","  if train_datases['감정_대분류'][i] == '기쁨':\n","    train_datases['label'][i] = 1\n","  else:\n","    train_datases['label'][i] = 0\n","\n","train_datases[-5:]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":404},"id":"Ez0rSsgj0vPI","outputId":"f3b2ae13-a365-47ff-bf0e-a37a04053fb0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:3: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  This is separate from the ipykernel package so we can avoid doing imports until\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:5: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  \"\"\"\n"]},{"output_type":"execute_result","data":{"text/plain":["       index 감정_대분류   감정_소분류  \\\n","81753  40874     불안    혼란스러운   \n","81754  40875     기쁨       안도   \n","81755  40876     슬픔      우울한   \n","81756  40877     기쁨     감사하는   \n","81757  40878     불안  스트레스 받는   \n","\n","                                                   사람문장1  label  \n","81753                나한테 아예 떠넘길 거 같은데 친구한테 얘기해볼까 고민 중이야.      0  \n","81754                                    결과가 좋게 나와서 다행이야      1  \n","81755   내 재능이 남들보다 월등한 거는 아니라면서 취업해서 안정적으로 살았으면 좋겠다고 하셔.      0  \n","81756  덕분에 건강도 챙길 수 있고 너무 좋아. 안마기도 있던데 내일은 운동하고 안마기도 ...      1  \n","81757                 카페에 가서 대화하거나 같이 술 마시면서 이야기했던 것 같아.      0  "],"text/html":["\n","  <div id=\"df-25707032-cc4f-43ff-8912-740cc2bd0dd4\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>index</th>\n","      <th>감정_대분류</th>\n","      <th>감정_소분류</th>\n","      <th>사람문장1</th>\n","      <th>label</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>81753</th>\n","      <td>40874</td>\n","      <td>불안</td>\n","      <td>혼란스러운</td>\n","      <td>나한테 아예 떠넘길 거 같은데 친구한테 얘기해볼까 고민 중이야.</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>81754</th>\n","      <td>40875</td>\n","      <td>기쁨</td>\n","      <td>안도</td>\n","      <td>결과가 좋게 나와서 다행이야</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>81755</th>\n","      <td>40876</td>\n","      <td>슬픔</td>\n","      <td>우울한</td>\n","      <td>내 재능이 남들보다 월등한 거는 아니라면서 취업해서 안정적으로 살았으면 좋겠다고 하셔.</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>81756</th>\n","      <td>40877</td>\n","      <td>기쁨</td>\n","      <td>감사하는</td>\n","      <td>덕분에 건강도 챙길 수 있고 너무 좋아. 안마기도 있던데 내일은 운동하고 안마기도 ...</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>81757</th>\n","      <td>40878</td>\n","      <td>불안</td>\n","      <td>스트레스 받는</td>\n","      <td>카페에 가서 대화하거나 같이 술 마시면서 이야기했던 것 같아.</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-25707032-cc4f-43ff-8912-740cc2bd0dd4')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-25707032-cc4f-43ff-8912-740cc2bd0dd4 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-25707032-cc4f-43ff-8912-740cc2bd0dd4');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":29}]},{"cell_type":"code","source":["test_data1 = pd.read_excel('/content/감성대화말뭉치(최종데이터)_Validation.xlsx')\n","test_data2 = pd.read_excel('/content/감성대화말뭉치(최종데이터)_Validation.xlsx')\n","\n","test_data1.drop(['번호','연령','성별','상황키워드','신체질환','사람문장2','사람문장3','사람문장4','시스템응답1','시스템응답2','시스템응답3','시스템응답4'], axis=1, inplace=True)\n","test_data2.drop(['번호','연령','성별','상황키워드','신체질환','사람문장1','사람문장3','사람문장4','시스템응답1','시스템응답2','시스템응답3','시스템응답4'], axis=1, inplace=True)"],"metadata":{"id":"1Cetpkw9EJlr"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["test_data2.rename(columns={'사람문장2':'사람문장1'},inplace=True)\n","test_data2[:5]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"_-QyAQckEPBV","outputId":"5bd8e154-5422-4f78-973a-cd91b4f96613"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  감정_대분류 감정_소분류                                              사람문장1\n","0     분노   툴툴대는  난 하고 싶은 일이 있는데 부모님은 안정적인 일만 하라고 하셔. 내 마음대로 하지도...\n","1     슬픔    비통한  엄마도 엄마만의 인생이 있을 테니 가지 말라고 할 수가 없었어. 그래서 더 마음이 ...\n","2     불안  조심스러운                      그런데 말을 하고 난 후 나도 괴롭힐까 봐 불안했어.\n","3     당황   죄책감의               곧 있으면 인턴에서 정규직 전환 평가가 있는데 안 좋을 것 같아.\n","4     분노  노여워하는                             어떻게 그럴 수가 있지? 너무 화가 나."],"text/html":["\n","  <div id=\"df-af8798a7-06df-4813-9639-3dfce0860dbb\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>감정_대분류</th>\n","      <th>감정_소분류</th>\n","      <th>사람문장1</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>분노</td>\n","      <td>툴툴대는</td>\n","      <td>난 하고 싶은 일이 있는데 부모님은 안정적인 일만 하라고 하셔. 내 마음대로 하지도...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>슬픔</td>\n","      <td>비통한</td>\n","      <td>엄마도 엄마만의 인생이 있을 테니 가지 말라고 할 수가 없었어. 그래서 더 마음이 ...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>불안</td>\n","      <td>조심스러운</td>\n","      <td>그런데 말을 하고 난 후 나도 괴롭힐까 봐 불안했어.</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>당황</td>\n","      <td>죄책감의</td>\n","      <td>곧 있으면 인턴에서 정규직 전환 평가가 있는데 안 좋을 것 같아.</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>분노</td>\n","      <td>노여워하는</td>\n","      <td>어떻게 그럴 수가 있지? 너무 화가 나.</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-af8798a7-06df-4813-9639-3dfce0860dbb')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-af8798a7-06df-4813-9639-3dfce0860dbb button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-af8798a7-06df-4813-9639-3dfce0860dbb');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":34}]},{"cell_type":"code","source":["test_datas = pd.concat([train_data1, train_data2])\n","test_datas.reset_index(inplace=True)"],"metadata":{"id":"YBoNRSRNEQfm"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["test_datas['label'] = 0"],"metadata":{"id":"aNYODm74ESGu"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["for i in range(len(test_datas)):\n","  if test_datas['감정_대분류'][i] == '기쁨':\n","    test_datas['label'][i] = 1\n","  else:\n","    test_datas['label'][i] = 0\n","\n","test_datas[-5:]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":404},"id":"aGnkl3Q8ESWG","outputId":"a5d8a3de-865a-44c3-81be-13a8f945d1bd"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:3: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  This is separate from the ipykernel package so we can avoid doing imports until\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:5: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  \"\"\"\n"]},{"output_type":"execute_result","data":{"text/plain":["       index 감정_대분류   감정_소분류  \\\n","81753  40874     불안    혼란스러운   \n","81754  40875     기쁨       안도   \n","81755  40876     슬픔      우울한   \n","81756  40877     기쁨     감사하는   \n","81757  40878     불안  스트레스 받는   \n","\n","                                                   사람문장1  label  \n","81753                나한테 아예 떠넘길 거 같은데 친구한테 얘기해볼까 고민 중이야.      0  \n","81754                                    결과가 좋게 나와서 다행이야      1  \n","81755   내 재능이 남들보다 월등한 거는 아니라면서 취업해서 안정적으로 살았으면 좋겠다고 하셔.      0  \n","81756  덕분에 건강도 챙길 수 있고 너무 좋아. 안마기도 있던데 내일은 운동하고 안마기도 ...      1  \n","81757                 카페에 가서 대화하거나 같이 술 마시면서 이야기했던 것 같아.      0  "],"text/html":["\n","  <div id=\"df-89a92cd7-35b6-438b-8a80-1ec99705fd3b\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>index</th>\n","      <th>감정_대분류</th>\n","      <th>감정_소분류</th>\n","      <th>사람문장1</th>\n","      <th>label</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>81753</th>\n","      <td>40874</td>\n","      <td>불안</td>\n","      <td>혼란스러운</td>\n","      <td>나한테 아예 떠넘길 거 같은데 친구한테 얘기해볼까 고민 중이야.</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>81754</th>\n","      <td>40875</td>\n","      <td>기쁨</td>\n","      <td>안도</td>\n","      <td>결과가 좋게 나와서 다행이야</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>81755</th>\n","      <td>40876</td>\n","      <td>슬픔</td>\n","      <td>우울한</td>\n","      <td>내 재능이 남들보다 월등한 거는 아니라면서 취업해서 안정적으로 살았으면 좋겠다고 하셔.</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>81756</th>\n","      <td>40877</td>\n","      <td>기쁨</td>\n","      <td>감사하는</td>\n","      <td>덕분에 건강도 챙길 수 있고 너무 좋아. 안마기도 있던데 내일은 운동하고 안마기도 ...</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>81757</th>\n","      <td>40878</td>\n","      <td>불안</td>\n","      <td>스트레스 받는</td>\n","      <td>카페에 가서 대화하거나 같이 술 마시면서 이야기했던 것 같아.</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-89a92cd7-35b6-438b-8a80-1ec99705fd3b')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-89a92cd7-35b6-438b-8a80-1ec99705fd3b button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-89a92cd7-35b6-438b-8a80-1ec99705fd3b');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":38}]},{"cell_type":"markdown","source":["---"],"metadata":{"id":"gZKpvBK5ESxM"}},{"cell_type":"markdown","source":["# 챗봇만들어보기 준비\n","\n","-출처: https://github.com/ukairia777/tensorflow-nlp-tutorial/blob/main/16.%20Transformer%20(Chatbot)/16-1%20~%2016-2.%20transformer_chatbot.ipynb"],"metadata":{"id":"SitGIBmfGWv1"}},{"cell_type":"code","source":["import numpy as np\n","import matplotlib.pyplot as plt\n","import tensorflow as tf"],"metadata":{"id":"RiVUqIfMaujd"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["tf.__version__"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"TNCQZrC1GjQV","outputId":"0abb39fc-3700-43dd-c459-f7260290e71b","executionInfo":{"status":"ok","timestamp":1655878819990,"user_tz":-540,"elapsed":6,"user":{"displayName":"박효신","userId":"01395991773766866172"}}},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'2.8.2'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":45}]},{"cell_type":"code","source":["# 최종 버전\n","class PositionalEncoding(tf.keras.layers.Layer):\n","  def __init__(self, position, d_model):\n","    super(PositionalEncoding, self).__init__()\n","    self.pos_encoding = self.positional_encoding(position, d_model)\n","\n","  def get_angles(self, position, i, d_model):\n","    angles = 1 / tf.pow(10000, (2 * (i // 2)) / tf.cast(d_model, tf.float32))\n","    return position * angles\n","\n","  def positional_encoding(self, position, d_model):\n","    angle_rads = self.get_angles(\n","        position=tf.range(position, dtype=tf.float32)[:, tf.newaxis],\n","        i=tf.range(d_model, dtype=tf.float32)[tf.newaxis, :],\n","        d_model=d_model)\n","\n","    # 배열의 짝수 인덱스(2i)에는 사인 함수 적용\n","    sines = tf.math.sin(angle_rads[:, 0::2])\n","\n","    # 배열의 홀수 인덱스(2i+1)에는 코사인 함수 적용\n","    cosines = tf.math.cos(angle_rads[:, 1::2])\n","\n","    angle_rads = np.zeros(angle_rads.shape)\n","    angle_rads[:, 0::2] = sines\n","    angle_rads[:, 1::2] = cosines\n","    pos_encoding = tf.constant(angle_rads)\n","    pos_encoding = pos_encoding[tf.newaxis, ...]\n","\n","    print(pos_encoding.shape)\n","    return tf.cast(pos_encoding, tf.float32)\n","\n","  def call(self, inputs):\n","    return inputs + self.pos_encoding[:, :tf.shape(inputs)[1], :]"],"metadata":{"id":"5twKw99HGk7B"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["sample_pos_encoding = PositionalEncoding(50, 128)\n","\n","plt.pcolormesh(sample_pos_encoding.pos_encoding.numpy()[0], cmap='RdBu')\n","plt.xlabel('Depth')\n","plt.xlim((0, 128))\n","plt.ylabel('Position')\n","plt.colorbar()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":301},"id":"jvcsf1MaGrAC","outputId":"ab969ab9-c1e8-45e9-e98f-092ec717c0cf","executionInfo":{"status":"ok","timestamp":1655878821496,"user_tz":-540,"elapsed":1510,"user":{"displayName":"박효신","userId":"01395991773766866172"}}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(1, 50, 128)\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["def scaled_dot_product_attention(query, key, value, mask):\n","  # query 크기 : (batch_size, num_heads, query의 문장 길이, d_model/num_heads)\n","  # key 크기 : (batch_size, num_heads, key의 문장 길이, d_model/num_heads)\n","  # value 크기 : (batch_size, num_heads, value의 문장 길이, d_model/num_heads)\n","  # padding_mask : (batch_size, 1, 1, key의 문장 길이)\n","\n","  # Q와 K의 곱. 어텐션 스코어 행렬.\n","  matmul_qk = tf.matmul(query, key, transpose_b=True)\n","\n","  # 스케일링\n","  # dk의 루트값으로 나눠준다.\n","  depth = tf.cast(tf.shape(key)[-1], tf.float32)\n","  logits = matmul_qk / tf.math.sqrt(depth)\n","\n","  # 마스킹. 어텐션 스코어 행렬의 마스킹 할 위치에 매우 작은 음수값을 넣는다.\n","  # 매우 작은 값이므로 소프트맥스 함수를 지나면 행렬의 해당 위치의 값은 0이 된다.\n","  if mask is not None:\n","    logits += (mask * -1e9)\n","\n","  # 소프트맥스 함수는 마지막 차원인 key의 문장 길이 방향으로 수행된다.\n","  # attention weight : (batch_size, num_heads, query의 문장 길이, key의 문장 길이)\n","  attention_weights = tf.nn.softmax(logits, axis=-1)\n","\n","  # output : (batch_size, num_heads, query의 문장 길이, d_model/num_heads)\n","  output = tf.matmul(attention_weights, value)\n","\n","  return output, attention_weights"],"metadata":{"id":"fKsO9rIcGsM6"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["class MultiHeadAttention(tf.keras.layers.Layer):\n","\n","  def __init__(self, d_model, num_heads, name=\"multi_head_attention\"):\n","    super(MultiHeadAttention, self).__init__(name=name)\n","    self.num_heads = num_heads\n","    self.d_model = d_model\n","\n","    assert d_model % self.num_heads == 0\n","\n","    # d_model을 num_heads로 나눈 값.\n","    # 논문 기준 : 64\n","    self.depth = d_model // self.num_heads\n","\n","    # WQ, WK, WV에 해당하는 밀집층 정의\n","    self.query_dense = tf.keras.layers.Dense(units=d_model)\n","    self.key_dense = tf.keras.layers.Dense(units=d_model)\n","    self.value_dense = tf.keras.layers.Dense(units=d_model)\n","\n","    # WO에 해당하는 밀집층 정의\n","    self.dense = tf.keras.layers.Dense(units=d_model)\n","\n","  # num_heads 개수만큼 q, k, v를 split하는 함수\n","  def split_heads(self, inputs, batch_size):\n","    inputs = tf.reshape(\n","        inputs, shape=(batch_size, -1, self.num_heads, self.depth))\n","    return tf.transpose(inputs, perm=[0, 2, 1, 3])\n","\n","  def call(self, inputs):\n","    query, key, value, mask = inputs['query'], inputs['key'], inputs[\n","        'value'], inputs['mask']\n","    batch_size = tf.shape(query)[0]\n","\n","    # 1. WQ, WK, WV에 해당하는 밀집층 지나기\n","    # q : (batch_size, query의 문장 길이, d_model)\n","    # k : (batch_size, key의 문장 길이, d_model)\n","    # v : (batch_size, value의 문장 길이, d_model)\n","    # 참고) 인코더(k, v)-디코더(q) 어텐션에서는 query 길이와 key, value의 길이는 다를 수 있다.\n","    query = self.query_dense(query)\n","    key = self.key_dense(key)\n","    value = self.value_dense(value)\n","\n","    # 2. 헤드 나누기\n","    # q : (batch_size, num_heads, query의 문장 길이, d_model/num_heads)\n","    # k : (batch_size, num_heads, key의 문장 길이, d_model/num_heads)\n","    # v : (batch_size, num_heads, value의 문장 길이, d_model/num_heads)\n","    query = self.split_heads(query, batch_size)\n","    key = self.split_heads(key, batch_size)\n","    value = self.split_heads(value, batch_size)\n","\n","    # 3. 스케일드 닷 프로덕트 어텐션. 앞서 구현한 함수 사용.\n","    # (batch_size, num_heads, query의 문장 길이, d_model/num_heads)\n","    scaled_attention, _ = scaled_dot_product_attention(query, key, value, mask)\n","    # (batch_size, query의 문장 길이, num_heads, d_model/num_heads)\n","    scaled_attention = tf.transpose(scaled_attention, perm=[0, 2, 1, 3])\n","\n","    # 4. 헤드 연결(concatenate)하기\n","    # (batch_size, query의 문장 길이, d_model)\n","    concat_attention = tf.reshape(scaled_attention,\n","                                  (batch_size, -1, self.d_model))\n","\n","    # 5. WO에 해당하는 밀집층 지나기\n","    # (batch_size, query의 문장 길이, d_model)\n","    outputs = self.dense(concat_attention)\n","\n","    return outputs"],"metadata":{"id":"Pp6Zrb2QGu0o"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def create_padding_mask(x):\n","  mask = tf.cast(tf.math.equal(x, 0), tf.float32)\n","  # (batch_size, 1, 1, key의 문장 길이)\n","  return mask[:, tf.newaxis, tf.newaxis, :]"],"metadata":{"id":"hvy2MePIG0P7"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def encoder_layer(dff, d_model, num_heads, dropout, name=\"encoder_layer\"):\n","  inputs = tf.keras.Input(shape=(None, d_model), name=\"inputs\")\n","\n","  # 인코더는 패딩 마스크 사용\n","  padding_mask = tf.keras.Input(shape=(1, 1, None), name=\"padding_mask\")\n","\n","  # 멀티-헤드 어텐션 (첫번째 서브층 / 셀프 어텐션)\n","  attention = MultiHeadAttention(\n","      d_model, num_heads, name=\"attention\")({\n","          'query': inputs, 'key': inputs, 'value': inputs, # Q = K = V\n","          'mask': padding_mask # 패딩 마스크 사용\n","      })\n","\n","  # 드롭아웃 + 잔차 연결과 층 정규화\n","  attention = tf.keras.layers.Dropout(rate=dropout)(attention)\n","  attention = tf.keras.layers.LayerNormalization(\n","      epsilon=1e-6)(inputs + attention)\n","\n","  # 포지션 와이즈 피드 포워드 신경망 (두번째 서브층)\n","  outputs = tf.keras.layers.Dense(units=dff, activation='relu')(attention)\n","  outputs = tf.keras.layers.Dense(units=d_model)(outputs)\n","\n","  # 드롭아웃 + 잔차 연결과 층 정규화\n","  outputs = tf.keras.layers.Dropout(rate=dropout)(outputs)\n","  outputs = tf.keras.layers.LayerNormalization(\n","      epsilon=1e-6)(attention + outputs)\n","\n","  return tf.keras.Model(\n","      inputs=[inputs, padding_mask], outputs=outputs, name=name)"],"metadata":{"id":"YFKLTbB8G1jg"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def encoder(vocab_size, num_layers, dff,\n","            d_model, num_heads, dropout,\n","            name=\"encoder\"):\n","  inputs = tf.keras.Input(shape=(None,), name=\"inputs\")\n","\n","  # 인코더는 패딩 마스크 사용\n","  padding_mask = tf.keras.Input(shape=(1, 1, None), name=\"padding_mask\")\n","\n","  # 포지셔널 인코딩 + 드롭아웃\n","  embeddings = tf.keras.layers.Embedding(vocab_size, d_model)(inputs)\n","  embeddings *= tf.math.sqrt(tf.cast(d_model, tf.float32))\n","  embeddings = PositionalEncoding(vocab_size, d_model)(embeddings)\n","  outputs = tf.keras.layers.Dropout(rate=dropout)(embeddings)\n","\n","  # 인코더를 num_layers개 쌓기\n","  for i in range(num_layers):\n","    outputs = encoder_layer(dff=dff, d_model=d_model, num_heads=num_heads,\n","        dropout=dropout, name=\"encoder_layer_{}\".format(i),\n","    )([outputs, padding_mask])\n","\n","  return tf.keras.Model(\n","      inputs=[inputs, padding_mask], outputs=outputs, name=name)"],"metadata":{"id":"DkgVz44nG2lE"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 디코더의 첫번째 서브층(sublayer)에서 미래 토큰을 Mask하는 함수\n","def create_look_ahead_mask(x):\n","  seq_len = tf.shape(x)[1]\n","  look_ahead_mask = 1 - tf.linalg.band_part(tf.ones((seq_len, seq_len)), -1, 0)\n","  padding_mask = create_padding_mask(x) # 패딩 마스크도 포함\n","  return tf.maximum(look_ahead_mask, padding_mask)"],"metadata":{"id":"J3hM3_uIIBdj"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def decoder_layer(dff, d_model, num_heads, dropout, name=\"decoder_layer\"):\n","  inputs = tf.keras.Input(shape=(None, d_model), name=\"inputs\")\n","  enc_outputs = tf.keras.Input(shape=(None, d_model), name=\"encoder_outputs\")\n","\n","  # 디코더는 룩어헤드 마스크(첫번째 서브층)와 패딩 마스크(두번째 서브층) 둘 다 사용.\n","  look_ahead_mask = tf.keras.Input(\n","      shape=(1, None, None), name=\"look_ahead_mask\")\n","  padding_mask = tf.keras.Input(shape=(1, 1, None), name='padding_mask')\n","\n","  # 멀티-헤드 어텐션 (첫번째 서브층 / 마스크드 셀프 어텐션)\n","  attention1 = MultiHeadAttention(\n","      d_model, num_heads, name=\"attention_1\")(inputs={\n","          'query': inputs, 'key': inputs, 'value': inputs, # Q = K = V\n","          'mask': look_ahead_mask # 룩어헤드 마스크\n","      })\n","\n","  # 잔차 연결과 층 정규화\n","  attention1 = tf.keras.layers.LayerNormalization(\n","      epsilon=1e-6)(attention1 + inputs)\n","\n","  # 멀티-헤드 어텐션 (두번째 서브층 / 디코더-인코더 어텐션)\n","  attention2 = MultiHeadAttention(\n","      d_model, num_heads, name=\"attention_2\")(inputs={\n","          'query': attention1, 'key': enc_outputs, 'value': enc_outputs, # Q != K = V\n","          'mask': padding_mask # 패딩 마스크\n","      })\n","\n","  # 드롭아웃 + 잔차 연결과 층 정규화\n","  attention2 = tf.keras.layers.Dropout(rate=dropout)(attention2)\n","  attention2 = tf.keras.layers.LayerNormalization(\n","      epsilon=1e-6)(attention2 + attention1)\n","\n","  # 포지션 와이즈 피드 포워드 신경망 (세번째 서브층)\n","  outputs = tf.keras.layers.Dense(units=dff, activation='relu')(attention2)\n","  outputs = tf.keras.layers.Dense(units=d_model)(outputs)\n","\n","  # 드롭아웃 + 잔차 연결과 층 정규화\n","  outputs = tf.keras.layers.Dropout(rate=dropout)(outputs)\n","  outputs = tf.keras.layers.LayerNormalization(\n","      epsilon=1e-6)(outputs + attention2)\n","\n","  return tf.keras.Model(\n","      inputs=[inputs, enc_outputs, look_ahead_mask, padding_mask],\n","      outputs=outputs,\n","      name=name)"],"metadata":{"id":"WCknKq0BICiY"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def decoder(vocab_size, num_layers, dff,\n","            d_model, num_heads, dropout,\n","            name='decoder'):\n","  inputs = tf.keras.Input(shape=(None,), name='inputs')\n","  enc_outputs = tf.keras.Input(shape=(None, d_model), name='encoder_outputs')\n","\n","  # 디코더는 룩어헤드 마스크(첫번째 서브층)와 패딩 마스크(두번째 서브층) 둘 다 사용.\n","  look_ahead_mask = tf.keras.Input(\n","      shape=(1, None, None), name='look_ahead_mask')\n","  padding_mask = tf.keras.Input(shape=(1, 1, None), name='padding_mask')\n","\n","  # 포지셔널 인코딩 + 드롭아웃\n","  embeddings = tf.keras.layers.Embedding(vocab_size, d_model)(inputs)\n","  embeddings *= tf.math.sqrt(tf.cast(d_model, tf.float32))\n","  embeddings = PositionalEncoding(vocab_size, d_model)(embeddings)\n","  outputs = tf.keras.layers.Dropout(rate=dropout)(embeddings)\n","\n","  # 디코더를 num_layers개 쌓기\n","  for i in range(num_layers):\n","    outputs = decoder_layer(dff=dff, d_model=d_model, num_heads=num_heads,\n","        dropout=dropout, name='decoder_layer_{}'.format(i),\n","    )(inputs=[outputs, enc_outputs, look_ahead_mask, padding_mask])\n","\n","  return tf.keras.Model(\n","      inputs=[inputs, enc_outputs, look_ahead_mask, padding_mask],\n","      outputs=outputs,\n","      name=name)"],"metadata":{"id":"Bc1M4LkQIEoI"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def transformer(vocab_size, num_layers, dff,\n","                d_model, num_heads, dropout,\n","                name=\"transformer\"):\n","\n","  # 인코더의 입력\n","  inputs = tf.keras.Input(shape=(None,), name=\"inputs\")\n","\n","  # 디코더의 입력\n","  dec_inputs = tf.keras.Input(shape=(None,), name=\"dec_inputs\")\n","\n","  # 인코더의 패딩 마스크\n","  enc_padding_mask = tf.keras.layers.Lambda(\n","      create_padding_mask, output_shape=(1, 1, None),\n","      name='enc_padding_mask')(inputs)\n","\n","  # 디코더의 룩어헤드 마스크(첫번째 서브층)\n","  look_ahead_mask = tf.keras.layers.Lambda(\n","      create_look_ahead_mask, output_shape=(1, None, None),\n","      name='look_ahead_mask')(dec_inputs)\n","\n","  # 디코더의 패딩 마스크(두번째 서브층)\n","  dec_padding_mask = tf.keras.layers.Lambda(\n","      create_padding_mask, output_shape=(1, 1, None),\n","      name='dec_padding_mask')(inputs)\n","\n","  # 인코더의 출력은 enc_outputs. 디코더로 전달된다.\n","  enc_outputs = encoder(vocab_size=vocab_size, num_layers=num_layers, dff=dff,\n","      d_model=d_model, num_heads=num_heads, dropout=dropout,\n","  )(inputs=[inputs, enc_padding_mask]) # 인코더의 입력은 입력 문장과 패딩 마스크\n","\n","  # 디코더의 출력은 dec_outputs. 출력층으로 전달된다.\n","  dec_outputs = decoder(vocab_size=vocab_size, num_layers=num_layers, dff=dff,\n","      d_model=d_model, num_heads=num_heads, dropout=dropout,\n","  )(inputs=[dec_inputs, enc_outputs, look_ahead_mask, dec_padding_mask])\n","\n","  # 다음 단어 예측을 위한 출력층\n","  outputs = tf.keras.layers.Dense(units=vocab_size, name=\"outputs\")(dec_outputs)\n","\n","  return tf.keras.Model(inputs=[inputs, dec_inputs], outputs=outputs, name=name)"],"metadata":{"id":"LtfDwYl5IFr7"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["small_transformer = transformer(\n","    vocab_size = 9000,\n","    num_layers = 4,\n","    dff = 512,\n","    d_model = 128,\n","    num_heads = 4,\n","    dropout = 0.3,\n","    name=\"small_transformer\")\n","\n","tf.keras.utils.plot_model(\n","    small_transformer, to_file='small_transformer.png', show_shapes=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":513},"id":"gg0FnCdLIJ02","outputId":"0c9d9c4d-8f28-487e-d38f-15cd6b706a46","executionInfo":{"status":"ok","timestamp":1655878827979,"user_tz":-540,"elapsed":6488,"user":{"displayName":"박효신","userId":"01395991773766866172"}}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(1, 9000, 128)\n","(1, 9000, 128)\n"]},{"output_type":"execute_result","data":{"text/plain":["<IPython.core.display.Image object>"],"image/png":"\n"},"metadata":{},"execution_count":57}]},{"cell_type":"code","source":["def loss_function(y_true, y_pred):\n","  y_true = tf.reshape(y_true, shape=(-1, MAX_LENGTH - 1))\n","\n","  loss = tf.keras.losses.SparseCategoricalCrossentropy(\n","      from_logits=True, reduction='none')(y_true, y_pred)\n","\n","  mask = tf.cast(tf.not_equal(y_true, 0), tf.float32)\n","  loss = tf.multiply(loss, mask)\n","\n","  return tf.reduce_mean(loss)"],"metadata":{"id":"Hm-ssQX2ILgR"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["class CustomSchedule(tf.keras.optimizers.schedules.LearningRateSchedule):\n","\n","  def __init__(self, d_model, warmup_steps=4000):\n","    super(CustomSchedule, self).__init__()\n","    self.d_model = d_model\n","    self.d_model = tf.cast(self.d_model, tf.float32)\n","    self.warmup_steps = warmup_steps\n","\n","  def __call__(self, step):\n","    arg1 = tf.math.rsqrt(step)\n","    arg2 = step * (self.warmup_steps**-1.5)\n","\n","    return tf.math.rsqrt(self.d_model) * tf.math.minimum(arg1, arg2)"],"metadata":{"id":"QV4_ynkJINnF"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["sample_learning_rate = CustomSchedule(d_model=128)\n","\n","plt.plot(sample_learning_rate(tf.range(200000, dtype=tf.float32)))\n","plt.ylabel(\"Learning Rate\")\n","plt.xlabel(\"Train Step\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":297},"id":"tDv4VojlIO59","outputId":"572d5051-0cdd-4d1e-e0fd-6219069448a7","executionInfo":{"status":"ok","timestamp":1655878828960,"user_tz":-540,"elapsed":988,"user":{"displayName":"박효신","userId":"01395991773766866172"}}},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Text(0.5, 0, 'Train Step')"]},"metadata":{},"execution_count":60},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["# 챗봇 만들기"],"metadata":{"id":"YqJMhBwfIRt6"}},{"cell_type":"code","source":["import pandas as pd\n","import urllib.request\n","import tensorflow_datasets as tfds\n","import tensorflow as tf\n","import time\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import re"],"metadata":{"id":"YJ3cIhQxIP3S"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df = pd.read_excel('./gdrive/MyDrive/Colab Notebooks/감성대화말뭉치(최종데이터)_Training.xlsx')\n","# train_data2 = pd.read_excel('./gdrive/MyDrive/Colab Notebooks/감성대화말뭉치(최종데이터)_Training.xlsx')\n","# train_data1.drop(['번호','연령','성별','상황키워드','신체질환','사람문장2','사람문장3','사람문장4','시스템응답2','시스템응답3','시스템응답4'], axis=1, inplace=True)\n","# train_data2.drop(['번호','연령','성별','상황키워드','신체질환','사람문장1','사람문장3','사람문장4','시스템응답1','시스템응답3','시스템응답4'], axis=1, inplace=True)\n","# train_data2.rename(columns={'사람문장2':'사람문장1'},inplace=True)\n","# train_data2.rename(columns={'시스템응답2': '시스템응답1'},inplace=True)\n","# train_data2[:5]"],"metadata":{"id":"JvEPrMjZIx8q"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["one = df[['감정_대분류', '감정_소분류', '사람문장1', '시스템응답1']]\n","two = df[['감정_대분류', '감정_소분류','사람문장2', '시스템응답2']]\n","three = df[['감정_대분류', '감정_소분류','사람문장3', '시스템응답3']]\n","four = df[['감정_대분류', '감정_소분류','사람문장4', '시스템응답4']]\n","\n","one.columns = ['감정_대분류', '감정_소분류','사람문장1', '시스템응답1']\n","one = one[~one['시스템응답1'].isna()]\n","two.columns = ['감정_대분류', '감정_소분류','사람문장1', '시스템응답1']\n","two = two[~two['시스템응답1'].isna()]\n","three.columns = ['감정_대분류', '감정_소분류','사람문장1', '시스템응답1']\n","three = three[~three['시스템응답1'].isna()]\n","four.columns = ['감정_대분류', '감정_소분류','사람문장1', '시스템응답1']\n","four = four[~four['시스템응답1'].isna()]\n","\n","\n","train_datases = pd.concat([one, two, three, four], ignore_index=True)\n","train_datases = train_datases[~train_datases['사람문장1'].isna()]"],"metadata":{"id":"DiZXuPl_-_N4"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["train_datases"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"r20I4WSMBu-V","executionInfo":{"status":"ok","timestamp":1655878847502,"user_tz":-540,"elapsed":30,"user":{"displayName":"박효신","userId":"01395991773766866172"}},"outputId":"d7222c1a-0f6a-41a6-ee47-5c631227c104"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       감정_대분류   감정_소분류                                          사람문장1  \\\n","0          기쁨     신이 난                      아내가 드디어 출산하게 되어서 정말 신이 나.   \n","1          불안  스트레스 받는        당뇨랑 합병증 때문에 먹어야 할 약이 열 가지가 넘어가니까 스트레스야.   \n","2          당황       당황        고등학교에 올라오니 중학교 때보다 수업이 갑자기 어려워져서 당황스러워.   \n","3          기쁨     신이 난  재취업이 돼서 받게 된 첫 월급으로 온 가족이 외식을 할 예정이야. 너무 행복해.   \n","4          기쁨       안도                   빚을 드디어 다 갚게 되어서 이제야 안도감이 들어.   \n","...       ...      ...                                            ...   \n","114174     불안      두려운                    미리 미리 건강 챙기고 모두 안 아팠으면 좋겠어.   \n","114175     당황      한심한   주변에 믿음직한 사람들에게서 정보도 많이 얻고 달콤한 말은 항상 의심하고 볼래.   \n","114176     불안  스트레스 받는               친구들에게 내 마음을 터놓고 얘기하면 좀 나아질 것 같아.   \n","114177     당황      고립된                   남편에게 이런 내 마음을 솔직하게 얘기해 봐야겠어.   \n","114178     불안    혼란스러운    친구가 자기가 데려온 강아지에 대해 책임감을 갖고 스스로 잘 돌봤으면 좋겠어.   \n","\n","                                         시스템응답1  \n","0                     아내분이 출산을 하시는군요. 정말 축하드려요.  \n","1                            약 종류가 많아 번거로우시겠어요.  \n","2       고등학교 수업이 중학교 때와는 다르게 갑자기 어려워서 당황스러우시군요.  \n","3                       재취업 후 첫 월급이라 정말 기쁘시겠어요.  \n","4                기분 좋으시겠어요. 앞으로는 어떻게 하실 생각이신가요?  \n","...                                         ...  \n","114174                친구들과의 전화로 기분이 나아졌으면 좋겠어요.  \n","114175  신뢰가 있는 사람들에게서 정보도 얻고 하고자 하는 일도 잘되길 바라요.  \n","114176            친구들과 술 한잔하시고 기분이 좋아지셨으면 좋겠어요.  \n","114177      솔직하게 얘기하셔서 외롭고 우울한 마음이 나아지셨으면 좋겠어요.  \n","114178           친구에게 얘기해서 혼자 부담을 떠안지 않으면 좋겠어요.  \n","\n","[114178 rows x 4 columns]"],"text/html":["\n","  <div id=\"df-f2490f24-1e7a-4209-9198-7f1ee24fb87b\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>감정_대분류</th>\n","      <th>감정_소분류</th>\n","      <th>사람문장1</th>\n","      <th>시스템응답1</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>기쁨</td>\n","      <td>신이 난</td>\n","      <td>아내가 드디어 출산하게 되어서 정말 신이 나.</td>\n","      <td>아내분이 출산을 하시는군요. 정말 축하드려요.</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>불안</td>\n","      <td>스트레스 받는</td>\n","      <td>당뇨랑 합병증 때문에 먹어야 할 약이 열 가지가 넘어가니까 스트레스야.</td>\n","      <td>약 종류가 많아 번거로우시겠어요.</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>당황</td>\n","      <td>당황</td>\n","      <td>고등학교에 올라오니 중학교 때보다 수업이 갑자기 어려워져서 당황스러워.</td>\n","      <td>고등학교 수업이 중학교 때와는 다르게 갑자기 어려워서 당황스러우시군요.</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>기쁨</td>\n","      <td>신이 난</td>\n","      <td>재취업이 돼서 받게 된 첫 월급으로 온 가족이 외식을 할 예정이야. 너무 행복해.</td>\n","      <td>재취업 후 첫 월급이라 정말 기쁘시겠어요.</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>기쁨</td>\n","      <td>안도</td>\n","      <td>빚을 드디어 다 갚게 되어서 이제야 안도감이 들어.</td>\n","      <td>기분 좋으시겠어요. 앞으로는 어떻게 하실 생각이신가요?</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>114174</th>\n","      <td>불안</td>\n","      <td>두려운</td>\n","      <td>미리 미리 건강 챙기고 모두 안 아팠으면 좋겠어.</td>\n","      <td>친구들과의 전화로 기분이 나아졌으면 좋겠어요.</td>\n","    </tr>\n","    <tr>\n","      <th>114175</th>\n","      <td>당황</td>\n","      <td>한심한</td>\n","      <td>주변에 믿음직한 사람들에게서 정보도 많이 얻고 달콤한 말은 항상 의심하고 볼래.</td>\n","      <td>신뢰가 있는 사람들에게서 정보도 얻고 하고자 하는 일도 잘되길 바라요.</td>\n","    </tr>\n","    <tr>\n","      <th>114176</th>\n","      <td>불안</td>\n","      <td>스트레스 받는</td>\n","      <td>친구들에게 내 마음을 터놓고 얘기하면 좀 나아질 것 같아.</td>\n","      <td>친구들과 술 한잔하시고 기분이 좋아지셨으면 좋겠어요.</td>\n","    </tr>\n","    <tr>\n","      <th>114177</th>\n","      <td>당황</td>\n","      <td>고립된</td>\n","      <td>남편에게 이런 내 마음을 솔직하게 얘기해 봐야겠어.</td>\n","      <td>솔직하게 얘기하셔서 외롭고 우울한 마음이 나아지셨으면 좋겠어요.</td>\n","    </tr>\n","    <tr>\n","      <th>114178</th>\n","      <td>불안</td>\n","      <td>혼란스러운</td>\n","      <td>친구가 자기가 데려온 강아지에 대해 책임감을 갖고 스스로 잘 돌봤으면 좋겠어.</td>\n","      <td>친구에게 얘기해서 혼자 부담을 떠안지 않으면 좋겠어요.</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>114178 rows × 4 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f2490f24-1e7a-4209-9198-7f1ee24fb87b')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-f2490f24-1e7a-4209-9198-7f1ee24fb87b button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-f2490f24-1e7a-4209-9198-7f1ee24fb87b');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":64}]},{"cell_type":"code","source":["def emotion_to_label(emotion):\n","    if emotion == '기쁨':\n","        return 1\n","    else:\n","        return 0\n","train_datases['label'] = train_datases['감정_대분류'].apply(lambda x: emotion_to_label(x))"],"metadata":{"id":"UNJx2jdHCHcT"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["train_datases[train_datases['label'] == 0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"rQ7VfdbKCNm-","executionInfo":{"status":"ok","timestamp":1655878847503,"user_tz":-540,"elapsed":30,"user":{"displayName":"박효신","userId":"01395991773766866172"}},"outputId":"01654f55-22fe-4f57-fa43-89456a776a2e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       감정_대분류   감정_소분류                                              사람문장1  \\\n","1          불안  스트레스 받는            당뇨랑 합병증 때문에 먹어야 할 약이 열 가지가 넘어가니까 스트레스야.   \n","2          당황       당황            고등학교에 올라오니 중학교 때보다 수업이 갑자기 어려워져서 당황스러워.   \n","5          불안      취약한  이제 곧 은퇴할 시기가 되었어. 내가 먼저 은퇴를 하고 육 개월 후에 남편도 은퇴를...   \n","6          슬픔      우울한                      사십 대에 접어들면서 머리카락이 많이 빠져 고민이야.   \n","7          분노   구역질 나는                                     이제 돈이라면 지긋지긋해.   \n","...       ...      ...                                                ...   \n","114174     불안      두려운                        미리 미리 건강 챙기고 모두 안 아팠으면 좋겠어.   \n","114175     당황      한심한       주변에 믿음직한 사람들에게서 정보도 많이 얻고 달콤한 말은 항상 의심하고 볼래.   \n","114176     불안  스트레스 받는                   친구들에게 내 마음을 터놓고 얘기하면 좀 나아질 것 같아.   \n","114177     당황      고립된                       남편에게 이런 내 마음을 솔직하게 얘기해 봐야겠어.   \n","114178     불안    혼란스러운        친구가 자기가 데려온 강아지에 대해 책임감을 갖고 스스로 잘 돌봤으면 좋겠어.   \n","\n","                                                 시스템응답1  label  \n","1                                    약 종류가 많아 번거로우시겠어요.      0  \n","2               고등학교 수업이 중학교 때와는 다르게 갑자기 어려워서 당황스러우시군요.      0  \n","5       그러시군요. 은퇴 후 남편분과 함께 집에 있을 생각을 하니 막막한 기분이 드시는군요.      0  \n","6                                 머리카락이 빠져서 걱정이 많으시겠어요.      0  \n","7                                           무슨 일 있으셨나요?      0  \n","...                                                 ...    ...  \n","114174                        친구들과의 전화로 기분이 나아졌으면 좋겠어요.      0  \n","114175          신뢰가 있는 사람들에게서 정보도 얻고 하고자 하는 일도 잘되길 바라요.      0  \n","114176                    친구들과 술 한잔하시고 기분이 좋아지셨으면 좋겠어요.      0  \n","114177              솔직하게 얘기하셔서 외롭고 우울한 마음이 나아지셨으면 좋겠어요.      0  \n","114178                   친구에게 얘기해서 혼자 부담을 떠안지 않으면 좋겠어요.      0  \n","\n","[95398 rows x 5 columns]"],"text/html":["\n","  <div id=\"df-8bc0a974-07a3-49a0-ae25-2a004d2f2981\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>감정_대분류</th>\n","      <th>감정_소분류</th>\n","      <th>사람문장1</th>\n","      <th>시스템응답1</th>\n","      <th>label</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>불안</td>\n","      <td>스트레스 받는</td>\n","      <td>당뇨랑 합병증 때문에 먹어야 할 약이 열 가지가 넘어가니까 스트레스야.</td>\n","      <td>약 종류가 많아 번거로우시겠어요.</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>당황</td>\n","      <td>당황</td>\n","      <td>고등학교에 올라오니 중학교 때보다 수업이 갑자기 어려워져서 당황스러워.</td>\n","      <td>고등학교 수업이 중학교 때와는 다르게 갑자기 어려워서 당황스러우시군요.</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>불안</td>\n","      <td>취약한</td>\n","      <td>이제 곧 은퇴할 시기가 되었어. 내가 먼저 은퇴를 하고 육 개월 후에 남편도 은퇴를...</td>\n","      <td>그러시군요. 은퇴 후 남편분과 함께 집에 있을 생각을 하니 막막한 기분이 드시는군요.</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>슬픔</td>\n","      <td>우울한</td>\n","      <td>사십 대에 접어들면서 머리카락이 많이 빠져 고민이야.</td>\n","      <td>머리카락이 빠져서 걱정이 많으시겠어요.</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>분노</td>\n","      <td>구역질 나는</td>\n","      <td>이제 돈이라면 지긋지긋해.</td>\n","      <td>무슨 일 있으셨나요?</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>114174</th>\n","      <td>불안</td>\n","      <td>두려운</td>\n","      <td>미리 미리 건강 챙기고 모두 안 아팠으면 좋겠어.</td>\n","      <td>친구들과의 전화로 기분이 나아졌으면 좋겠어요.</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>114175</th>\n","      <td>당황</td>\n","      <td>한심한</td>\n","      <td>주변에 믿음직한 사람들에게서 정보도 많이 얻고 달콤한 말은 항상 의심하고 볼래.</td>\n","      <td>신뢰가 있는 사람들에게서 정보도 얻고 하고자 하는 일도 잘되길 바라요.</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>114176</th>\n","      <td>불안</td>\n","      <td>스트레스 받는</td>\n","      <td>친구들에게 내 마음을 터놓고 얘기하면 좀 나아질 것 같아.</td>\n","      <td>친구들과 술 한잔하시고 기분이 좋아지셨으면 좋겠어요.</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>114177</th>\n","      <td>당황</td>\n","      <td>고립된</td>\n","      <td>남편에게 이런 내 마음을 솔직하게 얘기해 봐야겠어.</td>\n","      <td>솔직하게 얘기하셔서 외롭고 우울한 마음이 나아지셨으면 좋겠어요.</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>114178</th>\n","      <td>불안</td>\n","      <td>혼란스러운</td>\n","      <td>친구가 자기가 데려온 강아지에 대해 책임감을 갖고 스스로 잘 돌봤으면 좋겠어.</td>\n","      <td>친구에게 얘기해서 혼자 부담을 떠안지 않으면 좋겠어요.</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>95398 rows × 5 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8bc0a974-07a3-49a0-ae25-2a004d2f2981')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-8bc0a974-07a3-49a0-ae25-2a004d2f2981 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-8bc0a974-07a3-49a0-ae25-2a004d2f2981');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":66}]},{"cell_type":"code","source":["# train_datases = pd.concat([train_data1, train_data2])\n","# train_datases.reset_index(inplace=True)\n","# train_datases['label'] = 0\n","# for i in range(len(train_datases)):\n","#   if train_datases['감정_대분류'][i] == '기쁨':\n","#     train_datases['label'][i] = 1\n","#   else:\n","#     train_datases['label'][i] = 0\n","\n","# train_datases[-5:]"],"metadata":{"id":"nvXziLFAI5MB"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# test_data1 = pd.read_excel('/content/감성대화말뭉치(최종데이터)_Validation.xlsx')\n","# test_data2 = pd.read_excel('/content/감성대화말뭉치(최종데이터)_Validation.xlsx')\n","# test_data1.drop(['번호','연령','성별','상황키워드','신체질환','사람문장2','사람문장3','사람문장4','시스템응답2','시스템응답3','시스템응답4'], axis=1, inplace=True)\n","# test_data2.drop(['번호','연령','성별','상황키워드','신체질환','사람문장1','사람문장3','사람문장4','시스템응답1','시스템응답3','시스템응답4'], axis=1, inplace=True)\n","# test_data2.rename(columns={'사람문장2':'사람문장1'},inplace=True)\n","# test_data2.rename(columns={'시스템응답2': '시스템응답1'},inplace=True)\n","# test_data2[:5]"],"metadata":{"id":"4nd4m5u7KCl-"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# test_datas = pd.concat([test_data1, test_data2])\n","# test_datas.reset_index(inplace=True)\n","# test_datas['label'] = 0\n","# for i in range(len(test_datas)):\n","#   if test_datas['감정_대분류'][i] == '기쁨':\n","#     test_datas['label'][i] = 1\n","#   else:\n","#     test_datas['label'][i] = 0\n","\n","# test_datas[-5:]"],"metadata":{"id":"7M13IX4cKa8u"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print('챗봇 샘플의 개수 :', len(train_datases))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1y_hSxd0Knmk","outputId":"e16443a6-e97d-498c-bc8a-bda2a3cc6ea9","executionInfo":{"status":"ok","timestamp":1655878847504,"user_tz":-540,"elapsed":29,"user":{"displayName":"박효신","userId":"01395991773766866172"}}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["챗봇 샘플의 개수 : 114178\n"]}]},{"cell_type":"code","source":["print(train_datases.isnull().sum())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"U6RLw9geKrqk","outputId":"2c405643-6fb5-48ee-c7bc-5da2d0b2cd66","executionInfo":{"status":"ok","timestamp":1655878847975,"user_tz":-540,"elapsed":497,"user":{"displayName":"박효신","userId":"01395991773766866172"}}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["감정_대분류    0\n","감정_소분류    0\n","사람문장1     0\n","시스템응답1    0\n","label     0\n","dtype: int64\n"]}]},{"cell_type":"code","source":["questions = []\n","for sentence in train_datases['사람문장1']:\n","    # 구두점에 대해서 띄어쓰기\n","    # ex) 12시 땡! -> 12시 땡 !\n","    sentence = re.sub(r\"([?.!,])\", r\" \\1 \", sentence)\n","    sentence = sentence.strip()\n","    questions.append(sentence)"],"metadata":{"id":"zQdPepC6KtVc"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["answers = []\n","for sentence in train_datases['시스템응답1']:\n","    # 구두점에 대해서 띄어쓰기\n","    # ex) 12시 땡! -> 12시 땡 !\n","    sentence = re.sub(r\"([?.!,])\", r\" \\1 \", sentence)\n","    sentence = sentence.strip()\n","    answers.append(sentence)"],"metadata":{"id":"Y8GtkK82KyCF"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["len(questions)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"k0tzJvG6K1_H","outputId":"78cbe4e6-05e4-4706-edfe-6593ef7bbbe6","executionInfo":{"status":"ok","timestamp":1655878849142,"user_tz":-540,"elapsed":8,"user":{"displayName":"박효신","userId":"01395991773766866172"}}},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["114178"]},"metadata":{},"execution_count":74}]},{"cell_type":"code","source":["print(questions[:5])\n","print(answers[:5])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"--kgnh10K5GX","outputId":"c8c7af96-61c5-4015-acc9-62df7117a664","executionInfo":{"status":"ok","timestamp":1655878849143,"user_tz":-540,"elapsed":7,"user":{"displayName":"박효신","userId":"01395991773766866172"}}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['아내가 드디어 출산하게 되어서 정말 신이 나 .', '당뇨랑 합병증 때문에 먹어야 할 약이 열 가지가 넘어가니까 스트레스야 .', '고등학교에 올라오니 중학교 때보다 수업이 갑자기 어려워져서 당황스러워 .', '재취업이 돼서 받게 된 첫 월급으로 온 가족이 외식을 할 예정이야 .  너무 행복해 .', '빚을 드디어 다 갚게 되어서 이제야 안도감이 들어 .']\n","['아내분이 출산을 하시는군요 .  정말 축하드려요 .', '약 종류가 많아 번거로우시겠어요 .', '고등학교 수업이 중학교 때와는 다르게 갑자기 어려워서 당황스러우시군요 .', '재취업 후 첫 월급이라 정말 기쁘시겠어요 .', '기분 좋으시겠어요 .  앞으로는 어떻게 하실 생각이신가요 ?']\n"]}]},{"cell_type":"code","source":["# 서브워드텍스트인코더를 사용하여 질문과 답변을 모두 포함한 단어 집합(Vocabulary) 생성\n","tokenizer = tfds.deprecated.text.SubwordTextEncoder.build_from_corpus(\n","    questions + answers, target_vocab_size=2**13)\n","\n","# 시작 토큰과 종료 토큰에 대한 정수 부여.\n","START_TOKEN, END_TOKEN = [tokenizer.vocab_size], [tokenizer.vocab_size + 1]\n","\n","# 시작 토큰과 종료 토큰을 고려하여 단어 집합의 크기를 + 2\n","VOCAB_SIZE = tokenizer.vocab_size + 2"],"metadata":{"id":"X4J7CbXAK6i2"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print('시작 토큰 번호 :',START_TOKEN)\n","print('종료 토큰 번호 :',END_TOKEN)\n","print('단어 집합의 크기 :',VOCAB_SIZE)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZsTtCixiK-vv","outputId":"db810631-5101-4335-c291-804fd5f7951f","executionInfo":{"status":"ok","timestamp":1655878993937,"user_tz":-540,"elapsed":18,"user":{"displayName":"박효신","userId":"01395991773766866172"}}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["시작 토큰 번호 : [8157]\n","종료 토큰 번호 : [8158]\n","단어 집합의 크기 : 8159\n"]}]},{"cell_type":"code","source":["# 서브워드텍스트인코더 토크나이저의 .encode()를 사용하여 텍스트 시퀀스를 정수 시퀀스로 변환.\n","print('Tokenized sample question: {}'.format(tokenizer.encode(questions[20])))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aGfXkt3sLsRT","outputId":"980c1806-5e30-427d-e55a-2e5d74af987a","executionInfo":{"status":"ok","timestamp":1655878993937,"user_tz":-540,"elapsed":9,"user":{"displayName":"박효신","userId":"01395991773766866172"}}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Tokenized sample question: [3664, 2903, 4285, 2269, 1421, 33, 9, 226, 4917, 2181, 2, 7, 45, 1946, 7708, 4478, 1736, 6, 22, 1]\n"]}]},{"cell_type":"code","source":["# 서브워드텍스트인코더 토크나이저의 .encode()와 decode() 테스트해보기\n","\n","# 임의의 입력 문장을 sample_string에 저장\n","sample_string = questions[20]\n","\n","# encode() : 텍스트 시퀀스 --> 정수 시퀀스\n","tokenized_string = tokenizer.encode(sample_string)\n","print ('정수 인코딩 후의 문장 {}'.format(tokenized_string))\n","\n","# decode() : 정수 시퀀스 --> 텍스트 시퀀스\n","original_string = tokenizer.decode(tokenized_string)\n","print ('기존 문장: {}'.format(original_string))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-YS--mg-Ltax","outputId":"62f6492a-b040-48a8-a50b-86c92d957a76","executionInfo":{"status":"ok","timestamp":1655878993937,"user_tz":-540,"elapsed":7,"user":{"displayName":"박효신","userId":"01395991773766866172"}}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["정수 인코딩 후의 문장 [3664, 2903, 4285, 2269, 1421, 33, 9, 226, 4917, 2181, 2, 7, 45, 1946, 7708, 4478, 1736, 6, 22, 1]\n","기존 문장: 지난주에 주식이 폭락해서 너무 큰 손해를 봤어 .  어떻게 해야 좋을지 모르겠고 정신이 나갈 것 같아 .\n"]}]},{"cell_type":"code","source":["# 각 정수는 각 단어와 어떻게 mapping되는지 병렬로 출력\n","# 서브워드텍스트인코더는 의미있는 단위의 서브워드로 토크나이징한다. 띄어쓰기 단위 X 형태소 분석 단위 X\n","for ts in tokenized_string:\n","  print ('{} ----> {}'.format(ts, tokenizer.decode([ts])))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GZgzeTwsLvbL","outputId":"799614cc-9bdf-4b56-901a-748166cd16de","executionInfo":{"status":"ok","timestamp":1655878993937,"user_tz":-540,"elapsed":5,"user":{"displayName":"박효신","userId":"01395991773766866172"}}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["3664 ----> 지난\n","2903 ----> 주에 \n","4285 ----> 주식이 \n","2269 ----> 폭\n","1421 ----> 락\n","33 ----> 해서 \n","9 ----> 너무 \n","226 ----> 큰 \n","4917 ----> 손해를 \n","2181 ----> 봤어\n","2 ---->  .  \n","7 ----> 어떻게 \n","45 ----> 해야 \n","1946 ----> 좋을지 \n","7708 ----> 모르겠고 \n","4478 ----> 정신이 \n","1736 ----> 나갈 \n","6 ----> 것 \n","22 ----> 같아\n","1 ---->  .\n"]}]},{"cell_type":"code","source":["# 최대 길이를 40으로 정의\n","MAX_LENGTH = 40\n","\n","# 토큰화 / 정수 인코딩 / 시작 토큰과 종료 토큰 추가 / 패딩\n","def tokenize_and_filter(inputs, outputs):\n","  tokenized_inputs, tokenized_outputs = [], []\n","  \n","  for (sentence1, sentence2) in zip(inputs, outputs):\n","    # encode(토큰화 + 정수 인코딩), 시작 토큰과 종료 토큰 추가\n","    sentence1 = START_TOKEN + tokenizer.encode(sentence1) + END_TOKEN\n","    sentence2 = START_TOKEN + tokenizer.encode(sentence2) + END_TOKEN\n","\n","    tokenized_inputs.append(sentence1)\n","    tokenized_outputs.append(sentence2)\n","  \n","  # 패딩\n","  tokenized_inputs = tf.keras.preprocessing.sequence.pad_sequences(\n","      tokenized_inputs, maxlen=MAX_LENGTH, padding='post')\n","  tokenized_outputs = tf.keras.preprocessing.sequence.pad_sequences(\n","      tokenized_outputs, maxlen=MAX_LENGTH, padding='post')\n","  \n","  return tokenized_inputs, tokenized_outputs"],"metadata":{"id":"9FW6KTjiLyvA"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["questions, answers = tokenize_and_filter(questions, answers)"],"metadata":{"id":"rNtfpAXUL50b"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print('질문 데이터의 크기(shape) :', questions.shape)\n","print('답변 데이터의 크기(shape) :', answers.shape)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"H5nefhkwL8jI","outputId":"0ebd4a16-df5e-4d08-cac4-47dbbf2bbd88","executionInfo":{"status":"ok","timestamp":1655879003294,"user_tz":-540,"elapsed":17,"user":{"displayName":"박효신","userId":"01395991773766866172"}}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["질문 데이터의 크기(shape) : (114178, 40)\n","답변 데이터의 크기(shape) : (114178, 40)\n"]}]},{"cell_type":"code","source":["# 0번째 샘플을 임의로 출력\n","print(questions[0])\n","print(answers[0])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yU94llpKL_eH","outputId":"45e78848-5ffd-4b6c-b4a1-462f3efae8ab","executionInfo":{"status":"ok","timestamp":1655879003294,"user_tz":-540,"elapsed":15,"user":{"displayName":"박효신","userId":"01395991773766866172"}}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[8157  165 1010 6578   12  478   30 1661   52    1 8158    0    0    0\n","    0    0    0    0    0    0    0    0    0    0    0    0    0    0\n","    0    0    0    0    0    0    0    0    0    0    0    0]\n","[8157 2322 4545   62    2   30  993    1 8158    0    0    0    0    0\n","    0    0    0    0    0    0    0    0    0    0    0    0    0    0\n","    0    0    0    0    0    0    0    0    0    0    0    0]\n"]}]},{"cell_type":"code","source":["# 텐서플로우 dataset을 이용하여 셔플(shuffle)을 수행하되, 배치 크기로 데이터를 묶는다.\n","# 또한 이 과정에서 교사 강요(teacher forcing)을 사용하기 위해서 디코더의 입력과 실제값 시퀀스를 구성한다.\n","BATCH_SIZE = 64\n","BUFFER_SIZE = 20000\n","\n","# 디코더의 실제값 시퀀스에서는 시작 토큰을 제거해야 한다.\n","dataset = tf.data.Dataset.from_tensor_slices((\n","    {\n","        'inputs': questions,\n","        'dec_inputs': answers[:, :-1] # 디코더의 입력. 마지막 패딩 토큰이 제거된다.\n","    },\n","    {\n","        'outputs': answers[:, 1:]  # 맨 처음 토큰이 제거된다. 다시 말해 시작 토큰이 제거된다.\n","    },\n","))\n","\n","dataset = dataset.cache()\n","dataset = dataset.shuffle(BUFFER_SIZE)\n","dataset = dataset.batch(BATCH_SIZE)\n","dataset = dataset.prefetch(tf.data.experimental.AUTOTUNE)"],"metadata":{"id":"f-2ntWcnL_rH"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 임의의 샘플에 대해서 [:, :-1]과 [:, 1:]이 어떤 의미를 가지는지 테스트해본다.\n","print(answers[0]) # 기존 샘플\n","print(answers[:1][:, :-1]) # 마지막 패딩 토큰 제거하면서 길이가 39가 된다.\n","print(answers[:1][:, 1:]) # 맨 처음 토큰이 제거된다. 다시 말해 시작 토큰이 제거된다. 길이는 역시 39가 된다."],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rStKXX_4MCkv","outputId":"61e09f2e-22d2-4dc3-e1fa-d023bae9409a","executionInfo":{"status":"ok","timestamp":1655879003295,"user_tz":-540,"elapsed":13,"user":{"displayName":"박효신","userId":"01395991773766866172"}}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[8157 2322 4545   62    2   30  993    1 8158    0    0    0    0    0\n","    0    0    0    0    0    0    0    0    0    0    0    0    0    0\n","    0    0    0    0    0    0    0    0    0    0    0    0]\n","[[8157 2322 4545   62    2   30  993    1 8158    0    0    0    0    0\n","     0    0    0    0    0    0    0    0    0    0    0    0    0    0\n","     0    0    0    0    0    0    0    0    0    0    0]]\n","[[2322 4545   62    2   30  993    1 8158    0    0    0    0    0    0\n","     0    0    0    0    0    0    0    0    0    0    0    0    0    0\n","     0    0    0    0    0    0    0    0    0    0    0]]\n"]}]},{"cell_type":"code","source":["pip install transformers"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WGHeHHlLiT0V","outputId":"c4ae7feb-aae8-458a-aa33-bb5b7327e70e","executionInfo":{"status":"ok","timestamp":1655879006812,"user_tz":-540,"elapsed":3528,"user":{"displayName":"박효신","userId":"01395991773766866172"}}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Requirement already satisfied: transformers in /usr/local/lib/python3.7/dist-packages (4.20.1)\n","Requirement already satisfied: huggingface-hub<1.0,>=0.1.0 in /usr/local/lib/python3.7/dist-packages (from transformers) (0.8.1)\n","Requirement already satisfied: importlib-metadata in /usr/local/lib/python3.7/dist-packages (from transformers) (4.11.4)\n","Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.7/dist-packages (from transformers) (21.3)\n","Requirement already satisfied: numpy>=1.17 in /usr/local/lib/python3.7/dist-packages (from transformers) (1.21.6)\n","Requirement already satisfied: requests in /usr/local/lib/python3.7/dist-packages (from transformers) (2.23.0)\n","Requirement already satisfied: filelock in /usr/local/lib/python3.7/dist-packages (from transformers) (3.7.1)\n","Requirement already satisfied: tqdm>=4.27 in /usr/local/lib/python3.7/dist-packages (from transformers) (4.64.0)\n","Requirement already satisfied: pyyaml>=5.1 in /usr/local/lib/python3.7/dist-packages (from transformers) (6.0)\n","Requirement already satisfied: tokenizers!=0.11.3,<0.13,>=0.11.1 in /usr/local/lib/python3.7/dist-packages (from transformers) (0.12.1)\n","Requirement already satisfied: regex!=2019.12.17 in /usr/local/lib/python3.7/dist-packages (from transformers) (2022.6.2)\n","Requirement already satisfied: typing-extensions>=3.7.4.3 in /usr/local/lib/python3.7/dist-packages (from huggingface-hub<1.0,>=0.1.0->transformers) (4.1.1)\n","Requirement already satisfied: pyparsing!=3.0.5,>=2.0.2 in /usr/local/lib/python3.7/dist-packages (from packaging>=20.0->transformers) (3.0.9)\n","Requirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.7/dist-packages (from importlib-metadata->transformers) (3.8.0)\n","Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests->transformers) (3.0.4)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests->transformers) (2022.6.15)\n","Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.7/dist-packages (from requests->transformers) (2.10)\n","Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests->transformers) (1.24.3)\n"]}]},{"cell_type":"code","source":["import transformers"],"metadata":{"id":"Ybt0WfEWDkiP"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["tf.keras.backend.clear_session()\n","\n","# Hyper-parameters\n","NUM_LAYERS = 2\n","D_MODEL = 256\n","NUM_HEADS = 8\n","DFF = 512\n","DROPOUT = 0.1\n","\n","model = transformer(\n","    vocab_size=VOCAB_SIZE,\n","    num_layers=NUM_LAYERS,\n","    dff=DFF,\n","    d_model=D_MODEL,\n","    num_heads=NUM_HEADS,\n","    dropout=DROPOUT)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"haKcWGsYMFLO","outputId":"44a8bf40-d76a-4539-de63-e3b3ee0be681","executionInfo":{"status":"ok","timestamp":1655879010218,"user_tz":-540,"elapsed":3409,"user":{"displayName":"박효신","userId":"01395991773766866172"}}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(1, 8159, 256)\n","(1, 8159, 256)\n"]}]},{"cell_type":"code","source":["MAX_LENGTH = 40\n","\n","learning_rate = CustomSchedule(D_MODEL)\n","\n","optimizer = tf.keras.optimizers.Adam(\n","    learning_rate, beta_1=0.9, beta_2=0.98, epsilon=1e-9)\n","\n","def accuracy(y_true, y_pred):\n","  # ensure labels have shape (batch_size, MAX_LENGTH - 1)\n","  y_true = tf.reshape(y_true, shape=(-1, MAX_LENGTH - 1))\n","  return tf.keras.metrics.sparse_categorical_accuracy(y_true, y_pred)\n","\n","model.compile(optimizer=optimizer, loss=loss_function, metrics=[accuracy])"],"metadata":{"id":"qB_d4U_DMGNY"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["EPOCHS = 50\n","\n","model.fit(dataset, epochs=EPOCHS)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5jvDKCZbMHa8","outputId":"8c27ce9f-24d0-4898-b9e6-cd53938aaa29","executionInfo":{"status":"ok","timestamp":1655885728767,"user_tz":-540,"elapsed":6508279,"user":{"displayName":"박효신","userId":"01395991773766866172"}}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/50\n","1785/1785 [==============================] - 124s 69ms/step - loss: 1.0904 - accuracy: 0.1084\n","Epoch 2/50\n","1785/1785 [==============================] - 120s 67ms/step - loss: 0.9868 - accuracy: 0.1152\n","Epoch 3/50\n","1785/1785 [==============================] - 119s 67ms/step - loss: 0.9040 - accuracy: 0.1222\n","Epoch 4/50\n","1785/1785 [==============================] - 120s 67ms/step - loss: 0.8460 - accuracy: 0.1281\n","Epoch 5/50\n","1785/1785 [==============================] - 119s 67ms/step - loss: 0.8013 - accuracy: 0.1333\n","Epoch 6/50\n","1785/1785 [==============================] - 120s 67ms/step - loss: 0.7644 - accuracy: 0.1380\n","Epoch 7/50\n","1785/1785 [==============================] - 120s 67ms/step - loss: 0.7337 - accuracy: 0.1419\n","Epoch 8/50\n","1785/1785 [==============================] - 119s 67ms/step - loss: 0.7073 - accuracy: 0.1454\n","Epoch 9/50\n","1785/1785 [==============================] - 120s 67ms/step - loss: 0.6839 - accuracy: 0.1487\n","Epoch 10/50\n","1785/1785 [==============================] - 120s 67ms/step - loss: 0.6632 - accuracy: 0.1518\n","Epoch 11/50\n","1785/1785 [==============================] - 120s 67ms/step - loss: 0.6444 - accuracy: 0.1547\n","Epoch 12/50\n","1785/1785 [==============================] - 120s 67ms/step - loss: 0.6278 - accuracy: 0.1571\n","Epoch 13/50\n","1785/1785 [==============================] - 120s 67ms/step - loss: 0.6127 - accuracy: 0.1596\n","Epoch 14/50\n","1785/1785 [==============================] - 120s 67ms/step - loss: 0.5989 - accuracy: 0.1616\n","Epoch 15/50\n","1785/1785 [==============================] - 118s 66ms/step - loss: 0.5856 - accuracy: 0.1639\n","Epoch 16/50\n","1785/1785 [==============================] - 118s 66ms/step - loss: 0.5741 - accuracy: 0.1657\n","Epoch 17/50\n","1785/1785 [==============================] - 119s 67ms/step - loss: 0.5629 - accuracy: 0.1675\n","Epoch 18/50\n","1785/1785 [==============================] - 119s 66ms/step - loss: 0.5529 - accuracy: 0.1693\n","Epoch 19/50\n","1785/1785 [==============================] - 119s 67ms/step - loss: 0.5435 - accuracy: 0.1707\n","Epoch 20/50\n","1785/1785 [==============================] - 120s 67ms/step - loss: 0.5342 - accuracy: 0.1724\n","Epoch 21/50\n","1785/1785 [==============================] - 119s 67ms/step - loss: 0.5256 - accuracy: 0.1739\n","Epoch 22/50\n","1785/1785 [==============================] - 119s 67ms/step - loss: 0.5184 - accuracy: 0.1751\n","Epoch 23/50\n","1785/1785 [==============================] - 119s 67ms/step - loss: 0.5109 - accuracy: 0.1765\n","Epoch 24/50\n","1785/1785 [==============================] - 120s 67ms/step - loss: 0.5043 - accuracy: 0.1777\n","Epoch 25/50\n","1785/1785 [==============================] - 120s 67ms/step - loss: 0.4970 - accuracy: 0.1789\n","Epoch 26/50\n","1785/1785 [==============================] - 120s 67ms/step - loss: 0.4913 - accuracy: 0.1798\n","Epoch 27/50\n","1785/1785 [==============================] - 119s 67ms/step - loss: 0.4854 - accuracy: 0.1811\n","Epoch 28/50\n","1785/1785 [==============================] - 119s 67ms/step - loss: 0.4796 - accuracy: 0.1821\n","Epoch 29/50\n","1785/1785 [==============================] - 119s 67ms/step - loss: 0.4743 - accuracy: 0.1831\n","Epoch 30/50\n","1785/1785 [==============================] - 119s 67ms/step - loss: 0.4689 - accuracy: 0.1841\n","Epoch 31/50\n","1785/1785 [==============================] - 120s 67ms/step - loss: 0.4641 - accuracy: 0.1849\n","Epoch 32/50\n","1785/1785 [==============================] - 119s 67ms/step - loss: 0.4594 - accuracy: 0.1858\n","Epoch 33/50\n","1785/1785 [==============================] - 120s 67ms/step - loss: 0.4550 - accuracy: 0.1866\n","Epoch 34/50\n","1785/1785 [==============================] - 119s 67ms/step - loss: 0.4505 - accuracy: 0.1876\n","Epoch 35/50\n","1785/1785 [==============================] - 119s 66ms/step - loss: 0.4466 - accuracy: 0.1881\n","Epoch 36/50\n","1785/1785 [==============================] - 119s 67ms/step - loss: 0.4427 - accuracy: 0.1890\n","Epoch 37/50\n","1785/1785 [==============================] - 118s 66ms/step - loss: 0.4386 - accuracy: 0.1897\n","Epoch 38/50\n","1785/1785 [==============================] - 119s 67ms/step - loss: 0.4350 - accuracy: 0.1904\n","Epoch 39/50\n","1785/1785 [==============================] - 118s 66ms/step - loss: 0.4315 - accuracy: 0.1911\n","Epoch 40/50\n","1785/1785 [==============================] - 119s 66ms/step - loss: 0.4276 - accuracy: 0.1919\n","Epoch 41/50\n","1785/1785 [==============================] - 119s 67ms/step - loss: 0.4243 - accuracy: 0.1925\n","Epoch 42/50\n","1785/1785 [==============================] - 118s 66ms/step - loss: 0.4205 - accuracy: 0.1933\n","Epoch 43/50\n","1785/1785 [==============================] - 119s 66ms/step - loss: 0.4180 - accuracy: 0.1938\n","Epoch 44/50\n","1785/1785 [==============================] - 119s 67ms/step - loss: 0.4144 - accuracy: 0.1944\n","Epoch 45/50\n","1785/1785 [==============================] - 118s 66ms/step - loss: 0.4116 - accuracy: 0.1950\n","Epoch 46/50\n","1785/1785 [==============================] - 119s 67ms/step - loss: 0.4086 - accuracy: 0.1956\n","Epoch 47/50\n","1785/1785 [==============================] - 119s 67ms/step - loss: 0.4060 - accuracy: 0.1963\n","Epoch 48/50\n","1785/1785 [==============================] - 119s 67ms/step - loss: 0.4027 - accuracy: 0.1968\n","Epoch 49/50\n","1785/1785 [==============================] - 119s 66ms/step - loss: 0.4001 - accuracy: 0.1973\n","Epoch 50/50\n","1785/1785 [==============================] - 120s 67ms/step - loss: 0.3978 - accuracy: 0.1977\n"]},{"output_type":"execute_result","data":{"text/plain":["<keras.callbacks.History at 0x7fecd0376050>"]},"metadata":{},"execution_count":92}]},{"cell_type":"code","source":["def evaluate(sentence):\n","  sentence = preprocess_sentence(sentence)\n","\n","  sentence = tf.expand_dims(\n","      START_TOKEN + tokenizer.encode(sentence) + END_TOKEN, axis=0)\n","\n","  output = tf.expand_dims(START_TOKEN, 0)\n","\n","  # 디코더의 예측 시작\n","  for i in range(MAX_LENGTH):\n","    predictions = model(inputs=[sentence, output], training=False)\n","\n","    # 현재(마지막) 시점의 예측 단어를 받아온다.\n","    predictions = predictions[:, -1:, :]\n","    predicted_id = tf.cast(tf.argmax(predictions, axis=-1), tf.int32)\n","\n","    # 만약 마지막 시점의 예측 단어가 종료 토큰이라면 예측을 중단\n","    if tf.equal(predicted_id, END_TOKEN[0]):\n","      break\n","\n","    # 마지막 시점의 예측 단어를 출력에 연결한다.\n","    # 이는 for문을 통해서 디코더의 입력으로 사용될 예정이다.\n","    output = tf.concat([output, predicted_id], axis=-1)\n","\n","  return tf.squeeze(output, axis=0)\n","\n","\n","def predict(sentence):\n","  prediction = evaluate(sentence)\n","\n","  predicted_sentence = tokenizer.decode(\n","      [i for i in prediction if i < tokenizer.vocab_size])\n","\n","  print('Input: {}'.format(sentence))\n","  print('Output: {}'.format(predicted_sentence))\n","\n","  return predicted_sentence"],"metadata":{"id":"Z7imKy6YMIjw"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def preprocess_sentence(sentence):\n","  sentence = re.sub(r\"([?.!,])\", r\" \\1 \", sentence)\n","  sentence = sentence.strip()\n","  return sentence"],"metadata":{"id":"sNo_BqOzMN7G"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["output = predict('오늘 정말 우울한 일이있었어')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uRP4UQg8QaSl","outputId":"0d307497-bd23-438d-ce73-857f892407c7","executionInfo":{"status":"ok","timestamp":1655886273560,"user_tz":-540,"elapsed":1452,"user":{"displayName":"박효신","userId":"01395991773766866172"}}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Input: 오늘 정말 우울한 일이있었어\n","Output: 어떤 우울한 일이 생기셨는지 자세히 말씀해 주시겠어요 ?\n"]}]},{"cell_type":"code","source":["output = predict('나도 어떻게해야할지 잘 모르겠어')"],"metadata":{"id":"4zUtDLvsryE1","outputId":"25f67998-c723-46e2-deff-4032a874b613","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1655886274800,"user_tz":-540,"elapsed":1241,"user":{"displayName":"박효신","userId":"01395991773766866172"}}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Input: 나도 어떻게해야할지 잘 모르겠어\n","Output: 노후 준비를 위해 희생을 잘 할 수 있기를 바랄게요 .\n"]}]},{"cell_type":"code","source":["output = predict('그 친구가 요즘 나를 너무 괴롭혀')"],"metadata":{"id":"HW6OEHuyr7tC","outputId":"0f79aff0-3fef-47bd-be21-480664968b0c","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1655886275897,"user_tz":-540,"elapsed":1098,"user":{"displayName":"박효신","userId":"01395991773766866172"}}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Input: 그 친구가 요즘 나를 너무 괴롭혀\n","Output: 친구가 괴롭힘을 당해 많이 속상하시겠어요 .\n"]}]},{"cell_type":"code","source":["output = predict('응 어떻게 방법이 없을까?')"],"metadata":{"id":"UKkBXVjksBGt","outputId":"6265de40-20cc-4262-9bdb-767d5777f73d","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1655886276794,"user_tz":-540,"elapsed":900,"user":{"displayName":"박효신","userId":"01395991773766866172"}}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Input: 응 어떻게 방법이 없을까?\n","Output: 방법을 찾지 못해 많이 고민되실 것 같아요 .\n"]}]},{"cell_type":"code","source":["output = predict('선생님이랑 부모님이 계시지만 나한테 도움이 되지는 않을거같아')"],"metadata":{"id":"g_kjPabbsDrj","outputId":"f5c2ffee-1f15-472f-ad9d-c07ded94b157","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1655886277797,"user_tz":-540,"elapsed":1008,"user":{"displayName":"박효신","userId":"01395991773766866172"}}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Input: 선생님이랑 부모님이 계시지만 나한테 도움이 되지는 않을거같아\n","Output: 선생님의 도움으로 문제가 잘 해결되었으면 좋겠어요 .\n"]}]},{"cell_type":"markdown","source":["# 생각보다 정확하지않다.."],"metadata":{"id":"nMs1b-qzsN-v"}},{"cell_type":"code","source":[""],"metadata":{"id":"xBBBTL0PsIVy"},"execution_count":null,"outputs":[]}],"metadata":{"accelerator":"GPU","colab":{"name":"아자아자2.ipynb의 사본","provenance":[{"file_id":"1BA05Usq3DsLr2OHoHADPUMnT6ttQVsQO","timestamp":1655894969204}],"collapsed_sections":["MFMDMTKXtj3D","h8DIZUPgxnvX"]},"gpuClass":"standard","kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}